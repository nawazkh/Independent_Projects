   1               		.file	"main.c"
   2               		.arch atmega8535
   3               	__SREG__ = 0x3f
   4               	__SP_H__ = 0x3e
   5               	__SP_L__ = 0x3d
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
  69               	.global	delayms
  71               	delayms:
  73               	.Ltext1:
   1:delay.h       **** /*	LCD.h
   2:delay.h       **** Technophilia embedded systems
   3:delay.h       **** 
   4:delay.h       **** 	this header file provides time delay in the form of mili second and micro second
   5:delay.h       **** 	without affecting any interrupts.
   6:delay.h       **** 
   7:delay.h       **** 	delayms()  this function provides delay in the form of mili second
   8:delay.h       **** 	delayus()  this function provides delay in the form of micro second
   9:delay.h       **** 	
  10:delay.h       **** */
  11:delay.h       **** #ifndef _DELAY_H_
  12:delay.h       **** #define _DELAY_H_
  13:delay.h       **** unsigned int delaycounter1,delaycounter2;
  14:delay.h       **** void delayms(unsigned int delaytime)
  15:delay.h       **** {
  74               	ue end (size=0) */
  76               	.LM1:
  77               		sts (delaycounter1)+1,__zero_reg__
  16:delay.h       **** 
  17:delay.h       **** 	 for(delaycounter1=0;delaycounter1<=delaytime;delaycounter1++)
  78               	unction
  79               	delayms:
  81 0004 1092 0000 	.Ltext1:
  83 000a 30E0      	.LM0:
  84               	/* prologue: frame size=0 */
  85               	/* prologue end (size=0) */
  87 000c 40E0      	.LM1:
  88 000e 50E0      		sts (delaycounter1)+1,__zero_reg__
  89               		sts delaycounter1,__zero_reg__
  18:delay.h       **** 	 {
  19:delay.h       **** 		 for(delaycounter2=0;delaycounter2<=800;delaycounter2++)
  20:delay.h       **** 		  {
  21:delay.h       **** 		  asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
  90               	",132,0,0,.Ltext1
  91               	.Ltext1:
  93 0010 0000      	.LM0:
  94 0012 0000      	/* prologue: frame size=0 */
  95 0014 0000      	/* prologue end (size=0) */
  97 0018 0000      	.LM1:
  98 001a 0000      		sts (delaycounter1)+1,__zero_reg__
  22:delay.h       **** 		  asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
  99               	unction
 100               	delayms:
 102 001e 0000      	.Ltext1:
 104 0022 0000      	.LM0:
 105 0024 0000      	/* prologue: frame size=0 */
 106 0026 0000      	/* prologue end (size=0) */
 108 0028 4F5F      	.LM1:
 109 002a 5F4F      		sts (delaycounter1)+1,__zero_reg__
 110               		sts delaycounter1,__zero_reg__
 111               		ldi r18,lo8(0)
 112 002c 63E0      		ldi r19,hi8(0)
 113 002e 4132      	.L2:
 115 0032 01F4      	.LM2:
 116 0034 2F5F      		ldi r20,lo8(0)
 117 0036 3F4F      		ldi r21,hi8(0)
 118               	.L3:
 120 0038 8217      	.LM3:
 121 003a 9307      	/* #APP */
 122 003c 00F4      		nop
 123 003e 3093 0000 		nop
 124 0042 2093 0000 		nop
 125 0046 5093 0000 		nop
 126 004a 4093 0000 		nop
 127               		nop
 129               	.LM4:
 130               		nop
 131               		nop
 132               		nop
 133               		nop
 134               		nop
 135               		nop
 136               	/* #NOAPP */
 137               		subi r20,lo8(-(1))
  23:delay.h       **** 		  }
  24:delay.h       **** 		
  25:delay.h       **** 	 }
  26:delay.h       **** }
  27:delay.h       **** 
  28:delay.h       **** void delayus(unsigned int delaytime)
  29:delay.h       **** {
 138               		ldi r21,hi8(0)
 139               	.L3:
 141               	.LM3:
  30:delay.h       **** 
  31:delay.h       **** 	 for(delaycounter1=0;delaycounter1<=delaytime;delaycounter1++)
 142               		sts (delaycounter1)+1,__zero_reg__
 143               		sts delaycounter1,__zero_reg__
 144 0050 1092 0000 		ldi r18,lo8(0)
 145 0054 1092 0000 		ldi r19,hi8(0)
 146 0058 20E0      	.L2:
 148               	.LM2:
  32:delay.h       **** 	 {
  33:delay.h       **** 		 
  34:delay.h       **** 		  asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
 149               	ame size=0 */
 150               	/* prologue end (size=0) */
 152 005c 0000      	.LM1:
 153 005e 0000      		sts (delaycounter1)+1,__zero_reg__
 154 0060 0000      		sts delaycounter1,__zero_reg__
 155 0062 0000      		ldi r18,lo8(0)
 156 0064 0000      		ldi r19,hi8(0)
 157 0066 0000      	.L2:
  35:delay.h       **** 		  asm("nop");asm("nop");asm("nop");asm("nop");
 158               	15,.LM0-delayms
 159               	.LM0:
 160 0068 0000      	/* prologue: frame size=0 */
 161 006a 0000      	/* prologue end (size=0) */
 163 006e 0000      	.LM1:
 164               		sts (delaycounter1)+1,__zero_reg__
 165 0070 2F5F      		sts delaycounter1,__zero_reg__
 166 0072 3F4F      		ldi r18,lo8(0)
 167               		ldi r19,hi8(0)
 168               	.L2:
 170 0076 9307      	.LM2:
 171 0078 00F4      		ldi r20,lo8(0)
 172 007a 3093 0000 		ldi r21,hi8(0)
 173 007e 2093 0000 	.L3:
 175 0082 0895      	.LM3:
 176               	/* #APP */
 177               		nop
 178               		nop
 179               		nop
 180               		nop
 181               		nop
 182               		nop
 184               	.LM4:
 185               		nop
   1:main.c        **** //program to control a servo using time delay
   2:main.c        **** #include<avr/io.h>
   3:main.c        **** #include "delay.h" //header file for genarating time delay
   4:main.c        **** int main()
   5:main.c        ****  {
 186               	9,hi8(0)
 187               	.L2:
 189               	.LM2:
   6:main.c        ****   PORTA=0XFF;		//initialization of port A in pullup mode
 190               	ame size=0 */
 191               	/* prologue end (size=0) */
 193 0086 8BBB      	.LM1:
   7:main.c        ****   DDRA=0X00;		//configuring port A as input port
 194               	24
 195               	.global	delayms
   8:main.c        ****   PORTB=0X00;		//initialization of port B all bits low 
 197               	",128,0,0,0
   9:main.c        ****   DDRB=0XFF;		//configuring port B as output port
 200               	tabn	162,0,0,0
  10:main.c        ****    while(1)
  11:main.c        ****    {
  12:main.c        ****     if((PINA&0x10)==0x00)		//if sw1 is pressed //rotate the servo to minimum degree
 204               	bal	delayms
 206 008e CC9B      	delayms:
 208 0092 00C0      	.Ltext1:
  13:main.c        **** 	 {
  14:main.c        **** 		while((PINA&0x10)==0x00)	//while sw1 is pressed
  15:main.c        **** 		 {
  16:main.c        **** 			PORTB=0X00;				
 210               	162,0,0,0
  17:main.c        **** 			delayus(18000);		
 213               	tabs	"delaytime:P(0,4)",64,0,0,24
 214               	.global	delayms
 216 0098 96E4      	delayms:
  18:main.c        **** 			PORTB=0XFF;
 218               	6)",128,0,0,0
  19:main.c        **** 			delayus(2000);
 222               	abs	"delayms:F(0,15)",36,0,0,delayms
 224 00a0 80ED      	.global	delayms
 226 00a4 00D0      	delayms:
 228               	.Ltext1:
 230 00a6 CC9B      	.LM0:
 231 00a8 00C0      	/* prologue: frame size=0 */
 232               	/* prologue end (size=0) */
  20:main.c        **** 		 }
  21:main.c        **** 	 }	 
  22:main.c        **** 	
  23:main.c        **** 	if((PINA&0x20)==0x00)		//if sw2 is pressed //rotate the servo to maximum degree
 233               	0,17,.LM1-delayms
 234               	.LM1:
 235 00aa CD9B      		sts (delaycounter1)+1,__zero_reg__
 236 00ac 00C0      		sts delaycounter1,__zero_reg__
 237 00ae 00C0      		ldi r18,lo8(0)
 238               		ldi r19,hi8(0)
  24:main.c        **** 	 {
  25:main.c        **** 		while((PINA&0x20)==0x00)		//while sw2 is pressed
  26:main.c        **** 		 {
  27:main.c        **** 			PORTB=0X00;			
 239               		68,0,15,.LM0-delayms
 240               	.LM0:
 241 00b0 18BA      	/* prologue: frame size=0 */
  28:main.c        **** 			delayus(19000);
 242               	delayms:F(0,15)",36,0,0,delayms
 244 00b2 88E3      	.global	delayms
 246 00b6 00D0      	delayms:
  29:main.c        **** 			PORTB=0XFF;
 247               	bs	"delay.h",132,0,0,.Ltext1
 248               	.Ltext1:
 250 00ba 88BB      	.LM0:
  30:main.c        **** 			delayus(1000);
 251               	,0
 255 00c0 00D0      	.global	delayms
 257               	delayms:
 259 00c2 CD9B      	.Ltext1:
 261               	.LM0:
  31:main.c        **** 		 }
  32:main.c        **** 	 }	 
  33:main.c        **** 	 
  34:main.c        **** 	if((PINA&0x40)==0x00)			//if sw2 is pressed //rotate the servo to middle degree
 262               	: frame size=0 */
 263               	/* prologue end (size=0) */
 265 00c8 00C0      	.LM1:
 266 00ca 00C0      		sts (delaycounter1)+1,__zero_reg__
 267               		sts delaycounter1,__zero_reg__
  35:main.c        **** 	 {
  36:main.c        **** 		while((PINA&0x40)==0x00)		//if sw2 is pressed
  37:main.c        **** 		 {
  38:main.c        **** 			PORTB=0X00;
 268               	",132,0,0,.Ltext1
 269               	.Ltext1:
  39:main.c        **** 			delayus(18500);
 271               	162,0,0,0
 275 00d2 00D0      	.global	delayms
  40:main.c        **** 			PORTB=0XFF;
 276               	e	delayms, @function
 277               	delayms:
 279 00d6 88BB      	.Ltext1:
  41:main.c        **** 			delayus(1500);
 280               	0,0
 286               	.global	delayms
 288 00de CE9B      	delayms:
 290 00e2 00C0      	.Ltext1:
 292               	.LM0:
 293               	/* prologue: frame size=0 */
 294               	/* prologue end (size=0) */
 296               	.LM1:
 297               		sts (delaycounter1)+1,__zero_reg__
 298               		sts delaycounter1,__zero_reg__
 299               		ldi r18,lo8(0)
 300               		ldi r19,hi8(0)
 301               	.L2:
 303               	.LM2:
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\DOCUME~1\Prasanta\LOCALS~1\Temp/ccQ7mOWI.s:3      *ABS*:0000003f __SREG__
C:\DOCUME~1\Prasanta\LOCALS~1\Temp/ccQ7mOWI.s:4      *ABS*:0000003e __SP_H__
C:\DOCUME~1\Prasanta\LOCALS~1\Temp/ccQ7mOWI.s:5      *ABS*:0000003d __SP_L__
C:\DOCUME~1\Prasanta\LOCALS~1\Temp/ccQ7mOWI.s:6      *ABS*:00000000 __tmp_reg__
C:\DOCUME~1\Prasanta\LOCALS~1\Temp/ccQ7mOWI.s:7      *ABS*:00000001 __zero_reg__
C:\DOCUME~1\Prasanta\LOCALS~1\Temp/ccQ7mOWI.s:71     .text:00000000 delayms
                            *COM*:00000002 delaycounter1
                            *COM*:00000002 delaycounter2
C:\DOCUME~1\Prasanta\LOCALS~1\Temp/ccQ7mOWI.s:137    .text:00000050 delayus
C:\DOCUME~1\Prasanta\LOCALS~1\Temp/ccQ7mOWI.s:183    .text:00000084 main

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
