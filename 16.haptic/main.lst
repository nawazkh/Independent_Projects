   1               		.file	"main.c"
   2               		.arch atmega8535
   3               	__SREG__ = 0x3f
   4               	__SP_H__ = 0x3e
   5               	__SP_L__ = 0x3d
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
  69               	.global	delayms
  71               	delayms:
  73               	.Ltext1:
   1:delay.h       **** /*	LCD.h
   2:delay.h       **** Technophilia embedded systems
   3:delay.h       **** 
   4:delay.h       **** 	this header file provides time delay in the form of mili second and micro second
   5:delay.h       **** 	without affecting any interrupts.
   6:delay.h       **** 
   7:delay.h       **** 	delayms()  this function provides delay in the form of mili second
   8:delay.h       **** 	delayus()  this function provides delay in the form of micro second
   9:delay.h       **** 	
  10:delay.h       **** */
  11:delay.h       **** #ifndef _DELAY_H_
  12:delay.h       **** #define _DELAY_H_
  13:delay.h       **** unsigned int delaycounter1,delaycounter2;
  14:delay.h       **** void delayms(unsigned int delaytime)
  15:delay.h       **** {
  74               	ue end (size=0) */
  76               	.LM1:
  77               		sts (delaycounter1)+1,__zero_reg__
  16:delay.h       **** 
  17:delay.h       **** 	 for(delaycounter1=0;delaycounter1<=delaytime;delaycounter1++)
  78               	 delaycounter1,__zero_reg__
  79               		ldi r18,lo8(0)
  80 0000 1092 0000 		ldi r19,hi8(0)
  81 0004 1092 0000 	.L2:
  83 000a 30E0      	.LM2:
  84               		ldi r20,lo8(0)
  85               		ldi r21,hi8(0)
  86               	.L3:
  88 000e 50E0      	.LM3:
  89               	/* #APP */
  18:delay.h       **** 	 {
  19:delay.h       **** 		 for(delaycounter2=0;delaycounter2<=800;delaycounter2++)
  20:delay.h       **** 		  {
  21:delay.h       **** 		  asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
  90               	op
  91               		nop
  92               		nop
  93 0010 0000      		nop
  95 0014 0000      	.LM4:
  96 0016 0000      		nop
  97 0018 0000      		nop
  98 001a 0000      		nop
  22:delay.h       **** 		  asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
  99               	
 100               		nop
 101 001c 0000      	/* #NOAPP */
 102 001e 0000      		subi r20,lo8(-(1))
 103 0020 0000      		sbci r21,hi8(-(1))
 105 0024 0000      	.LM5:
 106 0026 0000      		ldi r22,hi8(801)
 107               		cpi r20,lo8(801)
 108 0028 4F5F      		cpc r21,r22
 109 002a 5F4F      		brne .L3
 110               		subi r18,lo8(-(1))
 111               		sbci r19,hi8(-(1))
 113 002e 4132      	.LM6:
 114 0030 5607      		cp r24,r18
 115 0032 01F4      		cpc r25,r19
 116 0034 2F5F      		brsh .L2
 117 0036 3F4F      		sts (delaycounter1)+1,r19
 118               		sts delaycounter1,r18
 119               		sts (delaycounter2)+1,r21
 120 0038 8217      		sts delaycounter2,r20
 121 003a 9307      	/* epilogue: frame size=0 */
 122 003c 00F4      		ret
 123 003e 3093 0000 	/* epilogue end (size=1) */
 124 0042 2093 0000 	/* function delayms size 52 (51) */
 126 004a 4093 0000 	.Lscope0:
 129               	.global	delayus
 131               	delayus:
 133               	.LM7:
 134               	/* prologue: frame size=0 */
 135               	/* prologue end (size=0) */
 137               	.LM8:
  23:delay.h       **** 		  }
  24:delay.h       **** 		
  25:delay.h       **** 	 }
  26:delay.h       **** }
  27:delay.h       **** 
  28:delay.h       **** void delayus(unsigned int delaytime)
  29:delay.h       **** {
 138               	ts delaycounter1,__zero_reg__
 139               		ldi r18,lo8(0)
 140               		ldi r19,hi8(0)
 141               	.L12:
  30:delay.h       **** 
  31:delay.h       **** 	 for(delaycounter1=0;delaycounter1<=delaytime;delaycounter1++)
 142               	abn	68,0,34,.LM9-delayus
 143               	.LM9:
 144 0050 1092 0000 	/* #APP */
 145 0054 1092 0000 		nop
 146 0058 20E0      		nop
 147 005a 30E0      		nop
 148               		nop
  32:delay.h       **** 	 {
  33:delay.h       **** 		 
  34:delay.h       **** 		  asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
 149               	op
 151               	.LM10:
 152 005c 0000      		nop
 153 005e 0000      		nop
 154 0060 0000      		nop
 155 0062 0000      		nop
 156 0064 0000      	/* #NOAPP */
 157 0066 0000      		subi r18,lo8(-(1))
  35:delay.h       **** 		  asm("nop");asm("nop");asm("nop");asm("nop");
 158               	,hi8(-(1))
 160 0068 0000      	.LM11:
 161 006a 0000      		cp r24,r18
 162 006c 0000      		cpc r25,r19
 163 006e 0000      		brsh .L12
 164               		sts (delaycounter1)+1,r19
 165 0070 2F5F      		sts delaycounter1,r18
 166 0072 3F4F      	/* epilogue: frame size=0 */
 167               		ret
 168               	/* epilogue end (size=1) */
 169 0074 8217      	/* function delayus size 36 (35) */
 171 0078 00F4      	.Lscope1:
 173 007e 2093 0000 	.global	uartinit
 175 0082 0895      	uartinit:
 177               	.Ltext2:
 179               	.LM12:
 180               	/* prologue: frame size=0 */
 181               	/* prologue end (size=0) */
 183               	.LM13:
 184               		out 43-0x20,__zero_reg__
   1:uart.h        **** /*	UART.h
   2:uart.h        **** Technophilia embedded systems
   3:uart.h        **** 
   4:uart.h        **** 	this header file provides time delay in the form of mili second and micro second
   5:uart.h        **** 	without affecting any interrupts.
   6:uart.h        **** 
   7:uart.h        **** 	delayms()  this function provides delay in the form of mili second
   8:uart.h        **** 	delayus()  this function provides delay in the form of micro second
   9:uart.h        **** 	
  10:uart.h        **** */
  11:uart.h        **** #ifndef _UART_H_
  12:uart.h        **** #define _UART_H_
  13:uart.h        **** 
  14:uart.h        **** void uartinit()
  15:uart.h        **** {
 186               	 42-0x20,r24
 188               	.LM15:
 189               		ldi r24,lo8(-122)
  16:uart.h        **** 	UCSRA=0x00;
 190               	 64-0x20,r24
 192 0084 1BB8      	.LM16:
  17:uart.h        **** 	UCSRB=0x18;
 193               	t 64-0x20,__zero_reg__
 195 0086 88E1      	.LM17:
 196 0088 8AB9      		ldi r24,lo8(103)
  18:uart.h        **** 	UCSRC=0x86;
 197               	 41-0x20,r24
 199 008a 86E8      	.LM18:
 200 008c 80BD      		ldi r24,lo8(100)
  19:uart.h        **** 	UBRRH=0x00;
 201               	 r25,hi8(100)
 202               		rcall delayms
 203 008e 10BC      	/* epilogue: frame size=0 */
  20:uart.h        **** 	UBRRL=0x67;
 204               	t
 205               	/* epilogue end (size=1) */
 206 0090 87E6      	/* function uartinit size 12 (11) */
  21:uart.h        **** 	delayms(100);
 208               	ope2:
 210 0094 84E6      	.global	dispdata
 212 0098 00D0      	dispdata:
 214 009a 0895      	.LM19:
 215               	/* prologue: frame size=0 */
 216               	/* prologue end (size=0) */
 217               	.L21:
 219               	.LM20:
 220               		sbis 43-0x20,7
 221               		rjmp .L21
  22:uart.h        **** }
  23:uart.h        **** 
  24:uart.h        **** void printchar(unsigned char uchar)
  25:uart.h        **** {
  26:uart.h        ****   UDR=uchar;
  27:uart.h        ****   while((UCSRA&0x40)==0x00);
  28:uart.h        ****   delayuart(1000);
  29:uart.h        **** }
  30:uart.h        ****  
  31:uart.h        **** void printstring(const unsigned char *ustring)
  32:uart.h        **** {
  33:uart.h        ****    while ( *ustring )
  34:uart.h        ****     {
  35:uart.h        **** 	 UDR=*ustring++;
  36:uart.h        ****      while((UCSRA&0x40)==0x00);
  37:uart.h        ****     delayuart(1000);
  38:uart.h        **** 	
  39:uart.h        **** }	}
  40:uart.h        **** 
  41:uart.h        ****  
  42:uart.h        **** void printnum(unsigned char num)
  43:uart.h        **** {
  44:uart.h        ****     unsigned char H=0,T=0,O=0;
  45:uart.h        **** 	H=num/100;
  46:uart.h        **** 	T=(num - (H*100))/10;
  47:uart.h        **** 	O=(num - (H*100) - (T*10));
  48:uart.h        **** 	
  49:uart.h        **** 	printchar(H+48);
  50:uart.h        **** 	
  51:uart.h        **** 	printchar(T+48);
  52:uart.h        **** 	
  53:uart.h        **** 	printchar(O+48);
  54:uart.h        **** 	
  55:uart.h        **** }
  56:uart.h        ****  
  57:uart.h        ****  
  58:uart.h        **** unsigned char dispdata()
  59:uart.h        **** {
 223               	44-0x20
 225               	.LM22:
 226               		clr r25
 227               	/* epilogue: frame size=0 */
  60:uart.h        ****   while((UCSRA&0x80)==0x00);
 228               	/* epilogue end (size=1) */
 229               	/* function dispdata size 5 (4) */
 231 009e 00C0      	.Lscope3:
  61:uart.h        ****   return UDR;
 232               	abs	"delayuart:F(0,15)",36,0,0,delayuart
 234 00a0 8CB1      	.global	delayuart
  62:uart.h        **** }
 235               	ype	delayuart, @function
 236               	delayuart:
 238               	.LM23:
 239 00a4 0895      	/* prologue: frame size=0 */
 240               	/* prologue end (size=0) */
 241               		ldi r18,lo8(0)
 242               		ldi r19,hi8(0)
 243               	.L27:
 245               	.LM24:
 246               	/* #APP */
 247               		nop
 248               		nop
  63:uart.h        ****  
  64:uart.h        **** void delayuart(unsigned int delaytime)
  65:uart.h        **** {
 249               	
 250               		nop
 252               	.LM25:
 253 00a6 20E0      		nop
 254 00a8 30E0      		nop
 255               		nop
  66:uart.h        **** unsigned int dc;
  67:uart.h        **** 	 for(dc=0;dc<=delaytime;dc++)
  68:uart.h        **** 	 {
  69:uart.h        **** 		 
  70:uart.h        **** 		  asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
 257               	.LM26:
 258               	/* #NOAPP */
 259 00aa 0000      		subi r18,lo8(-(1))
 260 00ac 0000      		sbci r19,hi8(-(1))
 261 00ae 0000      		cp r24,r18
 262 00b0 0000      		cpc r25,r19
 263 00b2 0000      		brsh .L27
 264 00b4 0000      	/* epilogue: frame size=0 */
  71:uart.h        **** 		  asm("nop");asm("nop");asm("nop");asm("nop");
 265               	pilogue end (size=1) */
 266               	/* function delayuart size 28 (27) */
 271               	.Lscope4:
 274 00be 2F5F      	.global	printstring
 276 00c2 8217      	printstring:
 278 00c6 00F4      	.LM27:
 279               	/* prologue: frame size=0 */
 280 00c8 0895      		push r28
 281               		push r29
 282               	/* prologue end (size=2) */
 283               		movw r28,r24
 284               		rjmp .L33
 285               	.L34:
 287               	.LM28:
 288               		out 44-0x20,r24
 289               	.L35:
 291               	.LM29:
 292               		sbis 43-0x20,6
 293               		rjmp .L35
 295               	.LM30:
 296 00ca CF93      		adiw r28,1
 298               	.LM31:
 299 00ce EC01      		ldi r24,lo8(1000)
 300 00d0 00C0      		ldi r25,hi8(1000)
 301               		rcall delayuart
 302               	.L33:
 304 00d2 8CB9      	.LM32:
 305               		ld r24,Y
 306               		tst r24
 307               		brne .L34
 308 00d4 5E9B      	/* epilogue: frame size=0 */
 309 00d6 00C0      		pop r29
 310               		pop r28
 311               		ret
 312 00d8 2196      	/* epilogue end (size=3) */
 313               	/* function printstring size 17 (12) */
 315 00da 88EE      	.Lscope5:
 318               	.global	printchar
 320               	printchar:
 322 00e2 8823      	.LM33:
 323 00e4 01F4      	/* prologue: frame size=0 */
 324               	/* prologue end (size=0) */
 326 00e8 CF91      	.LM34:
 327 00ea 0895      		out 44-0x20,r24
 328               	.L42:
 330               	.LM35:
 331               		sbis 43-0x20,6
 332               		rjmp .L42
 334               	.LM36:
 335               		ldi r24,lo8(1000)
 336               		ldi r25,hi8(1000)
 337               		rcall delayuart
 338               	/* epilogue: frame size=0 */
 339               		ret
 340               	/* epilogue end (size=1) */
 341               	/* function printchar size 7 (6) */
 343 00ec 8CB9      	.Lscope6:
 346               	.global	printnum
 348 00f0 00C0      	printnum:
 350               	.LM37:
 351 00f2 88EE      	/* prologue: frame size=0 */
 352 00f4 93E0      		push r13
 353 00f6 00D0      		push r14
 354               		push r15
 355 00f8 0895      		push r16
 356               		push r17
 357               	/* prologue end (size=5) */
 358               		mov r13,r24
 360               	.LM38:
 361               		ldi r22,lo8(100)
 362               		rcall __udivmodqi4
 363               		mov r18,r24
 365               	.LM39:
 366               		ldi r24,lo8(100)
 367               		mov r14,r24
 368 00fa DF92      		mul r18,r14
 369 00fc EF92      		movw r14,r0
 370 00fe FF92      		clr r1
 371 0100 0F93      		mov r24,r13
 372 0102 1F93      		clr r25
 373               		sub r24,r14
 374 0104 D82E      		sbc r25,r15
 375               		ldi r22,lo8(10)
 376               		ldi r23,hi8(10)
 377 0106 64E6      		rcall __divmodhi4
 378 0108 00D0      		movw r16,r22
 380               	.LM40:
 381               		mov r24,r18
 382 010c 84E6      		subi r24,lo8(-(48))
 383 010e E82E      		rcall printchar
 385 0112 7001      	.LM41:
 386 0114 1124      		mov r24,r16
 387 0116 8D2D      		subi r24,lo8(-(48))
 388 0118 9927      		rcall printchar
 390 011c 9F09      	.LM42:
 391 011e 6AE0      		sub r13,r14
 392 0120 70E0      		ldi r24,lo8(10)
 393 0122 00D0      		mul r16,r24
 394 0124 8B01      		movw r24,r0
 395               		clr r1
 396               		sub r13,r24
 397 0126 822F      		mov r24,r13
 398 0128 805D      		subi r24,lo8(-(48))
 399 012a 00D0      		rcall printchar
 400               	/* epilogue: frame size=0 */
 401               		pop r17
 402 012c 802F      		pop r16
 403 012e 805D      		pop r15
 404 0130 00D0      		pop r14
 405               		pop r13
 406               		ret
 407 0132 DE18      	/* epilogue end (size=6) */
 408 0134 8AE0      	/* function printnum size 43 (32) */
 413 013e 8D2D      	.Lscope7:
 415 0142 00D0      	.global	adc_init
 417 0144 1F91      	adc_init:
 419 0148 FF90      	.Ltext3:
 421 014c DF90      	.LM43:
 422 014e 0895      	/* prologue: frame size=0 */
 423               	/* prologue end (size=0) */
 425               	.LM44:
 426               		ldi r24,lo8(-122)
 427               		out 38-0x20,r24
 428               	/* epilogue: frame size=0 */
 429               		ret
 430               	/* epilogue end (size=1) */
 431               	/* function adc_init size 3 (2) */
 433               	.Lscope8:
   1:adc.h         **** 
   2:adc.h         **** /***********************************************************************
   3:adc.h         **** 
   4:adc.h         **** Headerfile for make ADC convertion
   5:adc.h         **** 
   6:adc.h         **** ***********************************************************************
   7:adc.h         **** 
   8:adc.h         **** *COPYRIGHT(c) Technophilia.
   9:adc.h         **** 
  10:adc.h         **** //*Author:Technophilia
  11:adc.h         **** 
  12:adc.h         **** //*compiler:winavr
  13:adc.h         **** 
  14:adc.h         **** //************************************************************//**//*********//*	adc.h
  15:adc.h         **** //Technophilia embedded systems
  16:adc.h         **** 
  17:adc.h         **** */
  18:adc.h         **** 
  19:adc.h         **** #ifndef _ADC_H_
  20:adc.h         **** #define _ADC_H_						//This is the header for AVR Microcontroller.
  21:adc.h         **** #include<avr/io.h>
  22:adc.h         **** #include<technophilia/delay.h>		//header file for genarating time delay
  23:adc.h         **** #include<technophilia/lcd.h>		//headerfile for interfacing LCD
  24:adc.h         **** #include<avr/interrupt.h>			//header file for using interrupt service routins
  25:adc.h         **** unsigned int adcdata,adcdata1;
  26:adc.h         **** 
  27:adc.h         ****  void adc_init()
  28:adc.h         ****  {
 436               	ata
 437               	.LM46:
 438               		ldi r25,lo8(96)
 439               		out 39-0x20,r25
  29:adc.h         ****   ADCSRA=0X86;						//ADC enable, ADC interrupt enable, set prescaller to 64
 440               	abn	68,0,35,.LM47-getdata
 441               	.LM47:
 442 0150 86E8      		in r25,39-0x20
 443 0152 86B9      		or r25,r24
 444               		out 39-0x20,r25
 446               	.LM48:
 447               		sbi 38-0x20,6
 449               	.LM49:
 450               		ldi r24,lo8(1)
 451               		ldi r25,hi8(1)
 452               		rcall delayms
 454               	.LM50:
  30:adc.h         ****   		
  31:adc.h         ****  }
  32:adc.h         ****  unsigned char getdata(unsigned char chno)	
  33:adc.h         ****   {
 455               	
 457               	.LM51:
 458               		clr r25
  34:adc.h         ****     ADMUX=0X60;						//right align the ADC result
 459               	epilogue: frame size=0 */
 460               		ret
 461 0156 90E6      	/* epilogue end (size=1) */
 462 0158 97B9      	/* function getdata size 12 (11) */
  35:adc.h         ****     ADMUX|=chno;					//select the ADC channel
 463               	ze	getdata, .-getdata
 464               	.Lscope9:
 466 015c 982B      	.global	servo_init
  36:adc.h         ****     ADCSRA|=0X40;					//start ADC convertion
 468               	_init:
 470 0160 369A      	.Ltext4:
  37:adc.h         ****     delayms(1);					//give some time delay to complit the aDC convertion
 471               	tabn	68,0,15,.LM52-servo_init
 472               	.LM52:
 473 0162 81E0      	/* prologue: frame size=0 */
 474 0164 90E0      	/* prologue end (size=0) */
  38:adc.h         **** 	return ADCH;
 476               	:
 477               		ldi r24,lo8(3)
 478 0168 85B1      		out 79-0x20,r24
  39:adc.h         ****   }
 479               	tabn	68,0,18,.LM54-servo_init
 480               	.LM54:
 481 016a 9927      		ldi r24,lo8(26)
 482               		out 78-0x20,r24
 484               	.LM55:
 485               		out 77-0x20,__zero_reg__
 487               	.LM56:
 488               		out 76-0x20,__zero_reg__
 490               	.LM57:
 491               		out 71-0x20,__zero_reg__
 493               	.LM58:
   1:servo.h       **** /*	SERVO.h
   2:servo.h       **** Technophilia 
   3:servo.h       **** 
   4:servo.h       **** 	this header file will help you to controlle four servo moter at a single time.
   5:servo.h       **** 
   6:servo.h       **** 	
   7:servo.h       **** */
   8:servo.h       **** #ifndef _SERVO_H_
   9:servo.h       **** #define _SERVO_H_
  10:servo.h       **** 
  11:servo.h       **** int i,j,k;   
  12:servo.h       **** unsigned char m0h,m0l,m1h,m1l,m2h,m2l,m3h,m3l,x,y;
  13:servo.h       **** unsigned char temp;
  14:servo.h       **** void servo_init()
  15:servo.h       **** {
 494               	zero_reg__
 496               	.LM59:
 497               		ldi r24,lo8(39)
  16:servo.h       **** 
  17:servo.h       **** TCCR1A=0x03;
 498               	 75-0x20,r24
 500 016e 83E0      	.LM60:
 501 0170 8FBD      		ldi r25,lo8(15)
  18:servo.h       **** TCCR1B=0x1A;
 502               	 74-0x20,r25
 504 0172 8AE1      	.LM61:
 505 0174 8EBD      		ldi r24,lo8(29)
  19:servo.h       **** TCNT1H=0x00;
 506               	 73-0x20,r24
 508 0176 1DBC      	.LM62:
  20:servo.h       **** TCNT1L=0x00;
 509               	i r24,lo8(75)
 510               		out 72-0x20,r24
  21:servo.h       **** ICR1H=0x00;
 512               	63:
 513               		ldi r24,lo8(24)
 514 017a 17BC      		out 89-0x20,r24
  22:servo.h       **** ICR1L=0x00;
 515               	tabn	68,0,28,.LM64-servo_init
 516               	.LM64:
 517 017c 16BC      		out 55-0x20,r25
  23:servo.h       **** OCR1AH=0x27;
 518               	tabn	68,0,30,.LM65-servo_init
 519               	.LM65:
 520 017e 87E2      	/* #APP */
 521 0180 8BBD      		sei
  24:servo.h       **** OCR1AL=0x0F;
 522               	NOAPP */
 523               	/* epilogue: frame size=0 */
 524 0182 9FE0      		ret
 525 0184 9ABD      	/* epilogue end (size=1) */
  25:servo.h       **** OCR1BH=0x1D;
 526               	unction servo_init size 22 (21) */
 528 0186 8DE1      	.Lscope10:
  26:servo.h       **** OCR1BL=0x4B;
 530               	bal	__vector_6
 532 018a 8BE4      	__vector_6:
  27:servo.h       **** TIMSK=0x18;  
 534               	6:
 535               	/* prologue: frame size=0 */
 536 018e 88E1      		push __zero_reg__
 537 0190 89BF      		push __tmp_reg__
  28:servo.h       **** DDRB=0x0f;
 538               	__tmp_reg__,__SREG__
 539               		push __tmp_reg__
 540 0192 97BB      		clr __zero_reg__
  29:servo.h       **** 
  30:servo.h       **** sei(); 
 541               	prologue end (size=5) */
 543               	.LM67:
 544 0194 7894      		out 56-0x20,__zero_reg__
 546               	.LM68:
 547 0196 0895      		out 77-0x20,__zero_reg__
 549               	.LM69:
 550               		out 76-0x20,__zero_reg__
 551               	/* epilogue: frame size=0 */
 552               		pop __tmp_reg__
 553               		out __SREG__,__tmp_reg__
 554               		pop __tmp_reg__
 555               		pop __zero_reg__
  31:servo.h       **** 
  32:servo.h       **** }
  33:servo.h       **** 
  34:servo.h       **** ISR (TIMER1_COMPA_vect) //void timer1_compa_isr(void)
  35:servo.h       **** {
 556               	ue end (size=5) */
 557               	/* function __vector_6 size 13 (3) */
 559 0198 1F92      	.Lscope11:
 561 019c 0FB6      	.global	__vector_7
 563 01a0 1124      	__vector_7:
  36:servo.h       **** PORTB=0X00;
 565               	 prologue: frame size=0 */
 566               		push __zero_reg__
 567 01a2 18BA      		push __tmp_reg__
  37:servo.h       **** TCNT1H=0x00;
 568               	 __tmp_reg__,__SREG__
 569               		push __tmp_reg__
 570 01a4 1DBC      		clr __zero_reg__
  38:servo.h       **** TCNT1L=0x00;
 571               	sh r24
 572               		push r25
 573 01a6 1CBC      	/* prologue end (size=7) */
 575 01a8 0F90      	.LM71:
 576 01aa 0FBE      		lds r24,i
 577 01ac 0F90      		lds r25,(i)+1
 578 01ae 1F90      		cpi r24,1
 579 01b0 1895      		cpc r25,__zero_reg__
 580               		breq .L60
 582               	.LM72:
 583               		cpi r24,2
 584               		cpc r25,__zero_reg__
 585               		brge .L63
 586               		or r24,r25
 587               		breq .L59
  39:servo.h       **** }
  40:servo.h       **** 
  41:servo.h       **** ISR (TIMER1_COMPB_vect) // void timer1_compb_isr(void)
  42:servo.h       **** {
 588               		cpi r24,2
 589               		cpc r25,__zero_reg__
 590               		breq .L61
 591 01b2 1F92      		sbiw r24,3
 592 01b4 0F92      		brne .L64
 593 01b6 0FB6      		rjmp .L62
 594 01b8 0F92      	.L59:
 596 01bc 8F93      	.LM73:
 597 01be 9F93      		lds r24,m0h
 598               		out 73-0x20,r24
  43:servo.h       **** switch(i)
 599               	0,47,.LM74-__vector_7
 600               	.LM74:
 601 01c0 8091 0000 		lds r24,m0l
 602 01c4 9091 0000 		out 72-0x20,r24
 604 01ca 9105      	.LM75:
 605 01cc 01F0      		ldi r24,lo8(1)
 606               		out 56-0x20,r24
 608 01ce 8230      	.LM76:
 609 01d0 9105      		ldi r24,lo8(1)
 610 01d2 04F4      		ldi r25,hi8(1)
 611 01d4 892B      		rjmp .L65
 612 01d6 01F0      	.L60:
 614               	.LM77:
 615 01da 8230      		lds r24,m1h
 616 01dc 9105      		out 73-0x20,r24
 618 01e0 0397      	.LM78:
 619 01e2 01F4      		lds r24,m1l
 620 01e4 00C0      		out 72-0x20,r24
  44:servo.h       **** {
  45:servo.h       **** case 0:
  46:servo.h       ****  OCR1BH=m0h;     
 622               		out 56-0x20,r24
 624 01e6 8091 0000 	.LM80:
 625 01ea 89BD      		ldi r24,lo8(2)
  47:servo.h       ****  OCR1BL=m0l;     
 626               	 r25,hi8(2)
 627               	.L65:
 628 01ec 8091 0000 		sts (i)+1,r25
 629 01f0 88BD      		sts i,r24
  48:servo.h       ****  PORTB=0X01;
 630               	p .L64
 631               	.L61:
 633 01f4 88BB      	.LM81:
  49:servo.h       ****  i=1;
 634               	 r24,m2h
 635               		out 73-0x20,r24
 637 01f8 90E0      	.LM82:
 638 01fa 00C0      		lds r24,m2l
 639               		out 72-0x20,r24
  50:servo.h       ****  break ;  
  51:servo.h       ****  
  52:servo.h       **** case 1:
  53:servo.h       ****  OCR1BH=m1h;       
 640               	n	68,0,62,.LM83-__vector_7
 641               	.LM83:
 642 01fc 8091 0000 		ldi r24,lo8(4)
 643 0200 89BD      		out 56-0x20,r24
  54:servo.h       ****  OCR1BL=m1l;      
 644               	abn	68,0,63,.LM84-__vector_7
 645               	.LM84:
 646 0202 8091 0000 		ldi r24,lo8(3)
 647 0206 88BD      		ldi r25,hi8(3)
  55:servo.h       ****  PORTB=0X02;
 648               	p .L65
 649               	.L62:
 651 020a 88BB      	.LM85:
  56:servo.h       ****  i=2;
 652               	 r24,m3h
 653               		out 73-0x20,r24
 655 020e 90E0      	.LM86:
 656               		lds r24,m3l
 657 0210 9093 0000 		out 72-0x20,r24
 659 0218 00C0      	.LM87:
 660               		ldi r24,lo8(8)
  57:servo.h       ****  break ; 
  58:servo.h       ****  
  59:servo.h       **** case 2:
  60:servo.h       ****  OCR1BH=m2h;              
 661               	x20,r24
 663 021a 8091 0000 	.LM88:
 664 021e 89BD      		sts (i)+1,__zero_reg__
  61:servo.h       ****  OCR1BL=m2l;                
 665               	 i,__zero_reg__
 666               	.L64:
 667 0220 8091 0000 	/* epilogue: frame size=0 */
 668 0224 88BD      		pop r25
  62:servo.h       ****  PORTB=0X04;
 669               	 r24
 670               		pop __tmp_reg__
 671 0226 84E0      		out __SREG__,__tmp_reg__
 672 0228 88BB      		pop __tmp_reg__
  63:servo.h       ****  i=3;
 673               	 __zero_reg__
 674               		reti
 675 022a 83E0      	/* epilogue end (size=7) */
 676 022c 90E0      	/* function __vector_7 size 83 (69) */
 678               	.Lscope12:
  64:servo.h       ****  break ;
  65:servo.h       ****  
  66:servo.h       **** case 3:
  67:servo.h       ****  OCR1BH=m3h;   
 679               	s	"deg:F(0,15)",36,0,0,deg
 682 0234 89BD      	.global	deg
  68:servo.h       ****  OCR1BL=m3l;      
 683               	pe	deg, @function
 684               	deg:
 686 023a 88BD      	.LM89:
  69:servo.h       ****  PORTB=0X08;
 687               	rologue: frame size=0 */
 688               		push r28
 689 023c 88E0      		push r29
 690 023e 88BB      	/* prologue end (size=2) */
  70:servo.h       ****  i=0;
 691               	w r28,r20
 693 0240 1092 0000 	.LM90:
 694 0244 1092 0000 		ldi r18,lo8(0x41a349ba)
 695               		ldi r19,hi8(0x41a349ba)
 696               		ldi r20,hlo8(0x41a349ba)
 697 0248 9F91      		ldi r21,hhi8(0x41a349ba)
 698 024a 8F91      		rcall __mulsf3
 699 024c 0F90      		ldi r18,lo8(0x459e2000)
 700 024e 0FBE      		ldi r19,hi8(0x459e2000)
 701 0250 0F90      		ldi r20,hlo8(0x459e2000)
 702 0252 1F90      		ldi r21,hhi8(0x459e2000)
 703 0254 1895      		rcall __addsf3
 704               		rcall __fixunssfsi
 706               	.LM91:
 707               		cpi r28,2
 708               		cpc r29,__zero_reg__
 709               		brne .L67
 711               	.LM92:
 712               		sts m1l,r22
  71:servo.h       ****  break ; 
  72:servo.h       ****  } 
  73:servo.h       **** }
  74:servo.h       **** 
  75:servo.h       **** void deg(float value,int m)
  76:servo.h       **** {
 714               	r r25
 715               		sts temp,r24
 717 0256 CF93      	.LM94:
 718 0258 DF93      		sts m1h,r24
 719               		rjmp .L75
 720 025a EA01      	.L67:
  77:servo.h       ****         unsigned int va;
  78:servo.h       ****         va=5060+value*20.411;  //for degree format
 721               		68,0,86,.LM95-deg
 722               	.LM95:
 723 025c 2AEB      		cpi r28,3
 724 025e 39E4      		cpc r29,__zero_reg__
 725 0260 43EA      		brne .L70
 727 0264 00D0      	.LM96:
 728 0266 20E0      		sts m2l,r22
 730 026a 4EE9      	.LM97:
 731 026c 55E4      		mov r24,r23
 732 026e 00D0      		clr r25
 733 0270 00D0      		sts temp,r24
  79:servo.h       **** 		//va=5080+value*15;      //for potentio meter format
  80:servo.h       ****         if(m==2)              
 734               	90,.LM98-deg
 735               	.LM98:
 736 0272 C230      		sts m2h,r24
 737 0274 D105      		rjmp .L75
 738 0276 01F4      	.L70:
  81:servo.h       ****         {
  82:servo.h       ****                 m1l=va;
 739               	,3
 740               		cpc r29,__zero_reg__
 741 0278 6093 0000 		brne .L70
  83:servo.h       ****                 temp=va>>8;
 742               	tabn	68,0,88,.LM96-deg
 743               	.LM96:
 744 027c 872F      		sts m2l,r22
 746 0280 8093 0000 	.LM97:
  84:servo.h       ****                 m1h=temp;
 747               	r24,r23
 748               		clr r25
 749 0284 8093 0000 		sts temp,r24
 751               	.LM98:
  85:servo.h       ****         }
  86:servo.h       ****         if(m==3)            
 752               	68,0,86,.LM95-deg
 753               	.LM95:
 754 028a C330      		cpi r28,3
 755 028c D105      		cpc r29,__zero_reg__
 756 028e 01F4      		brne .L70
  87:servo.h       ****         {
  88:servo.h       ****                 m2l=va;
 757               	bn	68,0,88,.LM96-deg
 758               	.LM96:
 759 0290 6093 0000 		sts m2l,r22
  89:servo.h       ****                 temp=va>>8;
 760               	tabn	68,0,89,.LM97-deg
 761               	.LM97:
 762 0294 872F      		mov r24,r23
 763 0296 9927      		clr r25
 764 0298 8093 0000 		sts temp,r24
  90:servo.h       ****                 m2h=temp;
 765               	s m1h,r24
 766               		rjmp .L75
 767 029c 8093 0000 	.L67:
 769               	.LM95:
  91:servo.h       ****         }
  92:servo.h       ****         if(m==0)       
 770               	r28,3
 771               		cpc r29,__zero_reg__
 772 02a2 2097      		brne .L70
  93:servo.h       ****         {
  94:servo.h       ****                 m3l=va;
 774               	6:
 775               		sts m2l,r22
  95:servo.h       ****                 temp=va>>8;
 777               	s temp,r24
 779 02aa 872F      	.LM94:
 780 02ac 9927      		sts m1h,r24
 781 02ae 8093 0000 		rjmp .L75
  96:servo.h       ****                 m3h=temp;
 782               	
 784 02b2 8093 0000 	.LM95:
 785 02b6 00C0      		cpi r28,3
 786               		cpc r29,__zero_reg__
  97:servo.h       ****         }
  98:servo.h       ****         if(m==1)     
 787               	e .L70
 789 02b8 2197      	.LM96:
 790 02ba 01F4      		sts m2l,r22
  99:servo.h       ****         {
 100:servo.h       ****                 m0l=va;
 791               	abn	68,0,89,.LM97-deg
 792               	.LM97:
 793 02bc 6093 0000 		mov r24,r23
 101:servo.h       ****                 temp=va>>8;
 794               	0,84,.LM94-deg
 795               	.LM94:
 796 02c0 872F      		sts m1h,r24
 797 02c2 9927      		rjmp .L75
 798 02c4 8093 0000 	.L67:
 102:servo.h       ****                 m0h=temp;
 799               	bn	68,0,86,.LM95-deg
 800               	.LM95:
 801 02c8 8093 0000 		cpi r28,3
 802               		cpc r29,__zero_reg__
 803               		brne .L70
 805 02ce CF91      	.LM96:
 806 02d0 0895      		sts m2l,r22
 808               	.LM97:
 809               		mov r24,r23
 810               		clr r25
 811               		sts temp,r24
 813               	.LM98:
 814               		sts m2h,r24
 815               		rjmp .L75
 816               	.L70:
 818               	.LM99:
 819               		sbiw r28,0
   1:main.c        **** //program to control position of a multiple DC motor by potentiometer
   2:main.c        **** 
   3:main.c        **** #include<avr/io.h>
   4:main.c        **** #include"delay.h"
   5:main.c        **** #include"uart.h"
   6:main.c        **** #include"adc.h"
   7:main.c        **** #include"servo.h"
   8:main.c        **** 
   9:main.c        **** int main(void)
  10:main.c        **** {
 820               	,0,94,.LM100-deg
 821               	.LM100:
 822               		sts m3l,r22
 824 02d4 EF92      	.LM101:
 825 02d6 FF92      		mov r24,r23
 826 02d8 0F93      		clr r25
 827 02da 1F93      		sts temp,r24
  11:main.c        ****  unsigned char digital1,digital2,digital3,predigital1,predigital2;
  12:main.c        ****  DDRD=0xf0;
 830               	.LM99:
 831 02dc 80EF      		sbiw r28,0
 832 02de 81BB      		brne .L72
 834               	.LM100:
 835               		sts m3l,r22
 837               	.LM101:
 838               		mov r24,r23
 839 02e0 86E8      		clr r25
 840 02e2 86B9      		sts temp,r24
 842               	.LM102:
 843               		sts m3h,r24
 844               		rjmp .L75
  13:main.c        ****  adc_init();
  14:main.c        ****  uartinit();
 845               	iw r28,0
 846               		brne .L72
  15:main.c        ****  servo_init();
 848               	n	68,0,89,.LM97-deg
 849               	.LM97:
 850 02e6 00D0      		mov r24,r23
 851               		clr r25
  16:main.c        ****  while(1)
  17:main.c        ****   {
  18:main.c        ****    digital1=getdata(0);		//read ADC from channel 0 for base motor
 852               	-deg
 853               	.LM94:
 854 02e8 80E0      		sts m1h,r24
 855 02ea 00D0      		rjmp .L75
 856 02ec F82E      	.L67:
  19:main.c        ****    digital2=getdata(1);		//read ADC from channel 1 for claw motor
 857               	bn	68,0,86,.LM95-deg
 858               	.LM95:
 859 02ee 81E0      		cpi r28,3
 860 02f0 00D0      		cpc r29,__zero_reg__
 861 02f2 082F      		brne .L70
  20:main.c        ****    digital3=getdata(2);		//read ADC from channel 2 for servo motor
 862               	bn	68,0,88,.LM96-deg
 863               	.LM96:
 864 02f4 82E0      		sts m2l,r22
 866 02f8 182F      	.LM97:
  21:main.c        ****    deg(digital3,0);
 867               	r24,r23
 868               		clr r25
 869 02fa 682F      		sts temp,r24
 871 02fe 67FD      	.LM98:
 872 0300 7095      		sts m2h,r24
 873 0302 872F      		rjmp .L75
 874 0304 972F      	.L70:
 876 0308 17FF      	.LM99:
 877 030a 00C0      		sbiw r28,0
 878 030c 20E0      		brne .L72
 880 0310 40E8      	.LM100:
 881 0312 53E4      		sts m3l,r22
 883               	.LM101:
 884 0316 40E0      		mov r24,r23
 885 0318 50E0      		clr r25
 886 031a 00D0      		sts temp,r24
  22:main.c        ****    
  23:main.c        ****  // printnum(digital1);		//print the ADC value in hyper terminal
  24:main.c        ****  //  printchar(','); 
  25:main.c        ****  //  printnum(digital2);		//print the ADC value in hyper terminal
  26:main.c        ****  //  printchar(','); 
  27:main.c        ****  //  printnum(digital3);		//print the ADC value in hyper terminal
  28:main.c        ****  //  printchar(13); 			//carriage return for hyper terminal	
  29:main.c        ****    
  30:main.c        ****     PORTD=0x00;
 887               	s m2h,r24
 888               		rjmp .L75
 889 031c 12BA      	.L70:
  31:main.c        ****    if(digital1>predigital1) 
 890               	,3
 891               		cpc r29,__zero_reg__
 892 031e EF14      		brne .L70
  32:main.c        ****     {
  33:main.c        **** 	 PORTD=0x40;
 894               	6:
 895               		sts m2l,r22
 897 0324 82BB      	.LM97:
 898               		mov r24,r23
  34:main.c        **** 	}
  35:main.c        ****    if(digital1<predigital1) 
 899               	0,84,.LM94-deg
 900               	.LM94:
 901 0326 FE14      		sts m1h,r24
 902 0328 00F4      		rjmp .L75
  36:main.c        ****     {
  37:main.c        **** 	 PORTD=0x80;
 903               	:
 905 032a 80E8      	.LM95:
 906 032c 82BB      		cpi r28,3
 907               		cpc r29,__zero_reg__
  38:main.c        **** 	}
  39:main.c        ****   
  40:main.c        ****    
  41:main.c        ****    if(digital2>predigital2) 
 908               	 .L70
 910 032e D016      	.LM96:
 911 0330 00F4      		sts m2l,r22
  42:main.c        ****     {
  43:main.c        **** 	 PORTD|=0x10;
 912               	abn	68,0,89,.LM97-deg
 913               	.LM97:
 914 0332 949A      		mov r24,r23
 915               		clr r25
  44:main.c        **** 	}
  45:main.c        ****    if(digital2<predigital2) 
 916               	-deg
 917               	.LM94:
 918 0334 0D15      		sts m1h,r24
 919 0336 00F4      		rjmp .L75
  46:main.c        ****     {
  47:main.c        **** 	 PORTD|=0x20;
 920               	:
 922 0338 959A      	.LM95:
 923               		cpi r28,3
  48:main.c        **** 	}
  49:main.c        ****      
  50:main.c        ****    delayms(1);	
 924               	 r29,__zero_reg__
 925               		brne .L70
 927 033c 90E0      	.LM96:
 928 033e 00D0      		sts m2l,r22
 930 0342 EF2C      	.LM97:
 931 0344 00C0      		mov r24,r23
 932               		clr r25
 933               		sts temp,r24
 935               	.LM98:
 936               		sts m2h,r24
 937               		rjmp .L75
 938               	.L70:
 940               	.LM99:
 941               		sbiw r28,0
 942               		brne .L72
 944               	.LM100:
 945               		sts m3l,r22
 947               	.LM101:
 948               		mov r24,r23
 949               		clr r25
 950               		sts temp,r24
 952               	.LM102:
 953               		sts m3h,r24
 954               		rjmp .L75
 955               	.L72:
 957               	.LM103:
 958               		sbiw r28,1
 959               		brne .L75
 961               	.LM104:
 962               		sts m0l,r22
 964               	.LM105:
 965               		mov r24,r23
 966               		clr r25
 967               		sts temp,r24
 969               	.LM106:
 970               		sts m0h,r24
 971               	.L75:
 972               	/* epilogue: frame size=0 */
 973               		pop r29
 974               		pop r28
 975               		ret
 976               	/* epilogue end (size=3) */
 977               	/* function deg size 63 (58) */
 982               	.Lscope13:
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\DOCUME~1\Prasanta\LOCALS~1\Temp/ccO01txd.s:3      *ABS*:0000003f __SREG__
C:\DOCUME~1\Prasanta\LOCALS~1\Temp/ccO01txd.s:4      *ABS*:0000003e __SP_H__
C:\DOCUME~1\Prasanta\LOCALS~1\Temp/ccO01txd.s:5      *ABS*:0000003d __SP_L__
C:\DOCUME~1\Prasanta\LOCALS~1\Temp/ccO01txd.s:6      *ABS*:00000000 __tmp_reg__
C:\DOCUME~1\Prasanta\LOCALS~1\Temp/ccO01txd.s:7      *ABS*:00000001 __zero_reg__
C:\DOCUME~1\Prasanta\LOCALS~1\Temp/ccO01txd.s:71     .text:00000000 delayms
                            *COM*:00000002 delaycounter1
                            *COM*:00000002 delaycounter2
C:\DOCUME~1\Prasanta\LOCALS~1\Temp/ccO01txd.s:137    .text:00000050 delayus
C:\DOCUME~1\Prasanta\LOCALS~1\Temp/ccO01txd.s:183    .text:00000084 uartinit
C:\DOCUME~1\Prasanta\LOCALS~1\Temp/ccO01txd.s:222    .text:0000009c dispdata
C:\DOCUME~1\Prasanta\LOCALS~1\Temp/ccO01txd.s:248    .text:000000a6 delayuart
C:\DOCUME~1\Prasanta\LOCALS~1\Temp/ccO01txd.s:292    .text:000000ca printstring
C:\DOCUME~1\Prasanta\LOCALS~1\Temp/ccO01txd.s:336    .text:000000ec printchar
C:\DOCUME~1\Prasanta\LOCALS~1\Temp/ccO01txd.s:364    .text:000000fa printnum
C:\DOCUME~1\Prasanta\LOCALS~1\Temp/ccO01txd.s:433    .text:00000150 adc_init
C:\DOCUME~1\Prasanta\LOCALS~1\Temp/ccO01txd.s:454    .text:00000156 getdata
C:\DOCUME~1\Prasanta\LOCALS~1\Temp/ccO01txd.s:491    .text:0000016e servo_init
C:\DOCUME~1\Prasanta\LOCALS~1\Temp/ccO01txd.s:555    .text:00000198 __vector_6
C:\DOCUME~1\Prasanta\LOCALS~1\Temp/ccO01txd.s:587    .text:000001b2 __vector_7
                            *COM*:00000002 i
                            *COM*:00000001 m0h
                            *COM*:00000001 m0l
                            *COM*:00000001 m1h
                            *COM*:00000001 m1l
                            *COM*:00000001 m2h
                            *COM*:00000001 m2l
                            *COM*:00000001 m3h
                            *COM*:00000001 m3l
C:\DOCUME~1\Prasanta\LOCALS~1\Temp/ccO01txd.s:713    .text:00000256 deg
                            *COM*:00000001 temp
C:\DOCUME~1\Prasanta\LOCALS~1\Temp/ccO01txd.s:817    .text:000002d2 main
                            *COM*:00000002 adcdata
                            *COM*:00000002 adcdata1
                            *COM*:00000002 j
                            *COM*:00000002 k
                            *COM*:00000001 x
                            *COM*:00000001 y

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
__udivmodqi4
__divmodhi4
__mulsf3
__addsf3
__fixunssfsi
__floatsisf
