
linefollowerpwmcorrect.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002b8  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  0000030c  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000008a  00000000  00000000  0000032c  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000285  00000000  00000000  000003b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000155  00000000  00000000  0000063b  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000389  00000000  00000000  00000790  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  000000b0  00000000  00000000  00000b1c  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000f8  00000000  00000000  00000bcc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000013  00000000  00000000  00000cc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000048  00000000  00000000  00000cd7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 05 01 	call	0x20a	; 0x20a <main>
  64:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <init_timer>:
void sharp_left(void);
void reverse(void);

init_timer(unsigned char TOP)
{
TCCR1A |= 0xA2;//10100010
  6c:	9f b5       	in	r25, 0x2f	; 47
  6e:	92 6a       	ori	r25, 0xA2	; 162
  70:	9f bd       	out	0x2f, r25	; 47
TCCR1B |= 0x12;//00010010
  72:	9e b5       	in	r25, 0x2e	; 46
  74:	92 61       	ori	r25, 0x12	; 18
  76:	9e bd       	out	0x2e, r25	; 46
ICR1=TOP;
  78:	90 e0       	ldi	r25, 0x00	; 0
  7a:	97 bd       	out	0x27, r25	; 39
  7c:	86 bd       	out	0x26, r24	; 38
OCR1A=0;
  7e:	1b bc       	out	0x2b, r1	; 43
  80:	1a bc       	out	0x2a, r1	; 42
OCR1B=0;
  82:	19 bc       	out	0x29, r1	; 41
  84:	18 bc       	out	0x28, r1	; 40
}
  86:	08 95       	ret

00000088 <forward>:



void forward(void)
{
if(PINA==0b00011000||PINA==0b0001000||PINA==0b00001000)
  88:	89 b3       	in	r24, 0x19	; 25
  8a:	88 31       	cpi	r24, 0x18	; 24
  8c:	31 f0       	breq	.+12     	; 0x9a <forward+0x12>
  8e:	89 b3       	in	r24, 0x19	; 25
  90:	88 30       	cpi	r24, 0x08	; 8
  92:	19 f0       	breq	.+6      	; 0x9a <forward+0x12>
  94:	89 b3       	in	r24, 0x19	; 25
  96:	88 30       	cpi	r24, 0x08	; 8
  98:	41 f4       	brne	.+16     	; 0xaa <forward+0x22>
{
PORTD=(0<<PD0) | (1<<PD1) | (0<<PD6) | (1<<PD7);
  9a:	82 e8       	ldi	r24, 0x82	; 130
  9c:	82 bb       	out	0x12, r24	; 18
OCR1A=255;
  9e:	8f ef       	ldi	r24, 0xFF	; 255
  a0:	90 e0       	ldi	r25, 0x00	; 0
  a2:	9b bd       	out	0x2b, r25	; 43
  a4:	8a bd       	out	0x2a, r24	; 42
OCR1B=255;
  a6:	99 bd       	out	0x29, r25	; 41
  a8:	88 bd       	out	0x28, r24	; 40
  aa:	08 95       	ret

000000ac <left>:
}
}

void left(void)
{
if((PINA==0b00110000||PINA==0b00111000||PINA==0b01011000||PINA==0b01111000||PINA==0b11011000||PINA==0b01110000||PINA==0b10011000||PINA==0b11111000||PINA==0b11000000))
  ac:	89 b3       	in	r24, 0x19	; 25
  ae:	80 33       	cpi	r24, 0x30	; 48
  b0:	c1 f0       	breq	.+48     	; 0xe2 <left+0x36>
  b2:	89 b3       	in	r24, 0x19	; 25
  b4:	88 33       	cpi	r24, 0x38	; 56
  b6:	a9 f0       	breq	.+42     	; 0xe2 <left+0x36>
  b8:	89 b3       	in	r24, 0x19	; 25
  ba:	88 35       	cpi	r24, 0x58	; 88
  bc:	91 f0       	breq	.+36     	; 0xe2 <left+0x36>
  be:	89 b3       	in	r24, 0x19	; 25
  c0:	88 37       	cpi	r24, 0x78	; 120
  c2:	79 f0       	breq	.+30     	; 0xe2 <left+0x36>
  c4:	89 b3       	in	r24, 0x19	; 25
  c6:	88 3d       	cpi	r24, 0xD8	; 216
  c8:	61 f0       	breq	.+24     	; 0xe2 <left+0x36>
  ca:	89 b3       	in	r24, 0x19	; 25
  cc:	80 37       	cpi	r24, 0x70	; 112
  ce:	49 f0       	breq	.+18     	; 0xe2 <left+0x36>
  d0:	89 b3       	in	r24, 0x19	; 25
  d2:	88 39       	cpi	r24, 0x98	; 152
  d4:	31 f0       	breq	.+12     	; 0xe2 <left+0x36>
  d6:	89 b3       	in	r24, 0x19	; 25
  d8:	88 3f       	cpi	r24, 0xF8	; 248
  da:	19 f0       	breq	.+6      	; 0xe2 <left+0x36>
  dc:	89 b3       	in	r24, 0x19	; 25
  de:	80 3c       	cpi	r24, 0xC0	; 192
  e0:	51 f4       	brne	.+20     	; 0xf6 <left+0x4a>
{
PORTD=(0<<PD0) | (0<<PD1) | (0<<PD6) | (1<<PD7);
  e2:	80 e8       	ldi	r24, 0x80	; 128
  e4:	82 bb       	out	0x12, r24	; 18
OCR1A=150;
  e6:	86 e9       	ldi	r24, 0x96	; 150
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	9b bd       	out	0x2b, r25	; 43
  ec:	8a bd       	out	0x2a, r24	; 42
OCR1B=250;
  ee:	8a ef       	ldi	r24, 0xFA	; 250
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	99 bd       	out	0x29, r25	; 41
  f4:	88 bd       	out	0x28, r24	; 40
  f6:	08 95       	ret

000000f8 <right>:
}
}

void right(void)
{
if((PINA==0b00001100||PINA==0b00011100||PINA==0b00011010||PINA==0b00011110||PINA==0b00011011||PINA==0b00001110||PINA==0b00011001||PINA==0b00011111||PINA==0b00000011))
  f8:	89 b3       	in	r24, 0x19	; 25
  fa:	8c 30       	cpi	r24, 0x0C	; 12
  fc:	c1 f0       	breq	.+48     	; 0x12e <right+0x36>
  fe:	89 b3       	in	r24, 0x19	; 25
 100:	8c 31       	cpi	r24, 0x1C	; 28
 102:	a9 f0       	breq	.+42     	; 0x12e <right+0x36>
 104:	89 b3       	in	r24, 0x19	; 25
 106:	8a 31       	cpi	r24, 0x1A	; 26
 108:	91 f0       	breq	.+36     	; 0x12e <right+0x36>
 10a:	89 b3       	in	r24, 0x19	; 25
 10c:	8e 31       	cpi	r24, 0x1E	; 30
 10e:	79 f0       	breq	.+30     	; 0x12e <right+0x36>
 110:	89 b3       	in	r24, 0x19	; 25
 112:	8b 31       	cpi	r24, 0x1B	; 27
 114:	61 f0       	breq	.+24     	; 0x12e <right+0x36>
 116:	89 b3       	in	r24, 0x19	; 25
 118:	8e 30       	cpi	r24, 0x0E	; 14
 11a:	49 f0       	breq	.+18     	; 0x12e <right+0x36>
 11c:	89 b3       	in	r24, 0x19	; 25
 11e:	89 31       	cpi	r24, 0x19	; 25
 120:	31 f0       	breq	.+12     	; 0x12e <right+0x36>
 122:	89 b3       	in	r24, 0x19	; 25
 124:	8f 31       	cpi	r24, 0x1F	; 31
 126:	19 f0       	breq	.+6      	; 0x12e <right+0x36>
 128:	89 b3       	in	r24, 0x19	; 25
 12a:	83 30       	cpi	r24, 0x03	; 3
 12c:	51 f4       	brne	.+20     	; 0x142 <right+0x4a>
{
PORTD=(0<<PD0) | (1<<PD1) | (0<<PD6) | (0<<PD7);
 12e:	82 e0       	ldi	r24, 0x02	; 2
 130:	82 bb       	out	0x12, r24	; 18
OCR1A=250;
 132:	8a ef       	ldi	r24, 0xFA	; 250
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	9b bd       	out	0x2b, r25	; 43
 138:	8a bd       	out	0x2a, r24	; 42
OCR1B=150;
 13a:	86 e9       	ldi	r24, 0x96	; 150
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	99 bd       	out	0x29, r25	; 41
 140:	88 bd       	out	0x28, r24	; 40
 142:	08 95       	ret

00000144 <stop>:
}
}

void stop(void)
{
if((PINA==0b11111111))
 144:	89 b3       	in	r24, 0x19	; 25
 146:	8f 3f       	cpi	r24, 0xFF	; 255
 148:	29 f4       	brne	.+10     	; 0x154 <stop+0x10>
{
PORTD=0b00000000;
 14a:	12 ba       	out	0x12, r1	; 18
OCR1A=0;
 14c:	1b bc       	out	0x2b, r1	; 43
 14e:	1a bc       	out	0x2a, r1	; 42
OCR1B=0;
 150:	19 bc       	out	0x29, r1	; 41
 152:	18 bc       	out	0x28, r1	; 40
 154:	08 95       	ret

00000156 <junction>:



void junction(void)
{
if((PINA==0b00111100||PINA==0b01011010||PINA==0b10011001))
 156:	89 b3       	in	r24, 0x19	; 25
 158:	8c 33       	cpi	r24, 0x3C	; 60
 15a:	31 f0       	breq	.+12     	; 0x168 <junction+0x12>
 15c:	89 b3       	in	r24, 0x19	; 25
 15e:	8a 35       	cpi	r24, 0x5A	; 90
 160:	19 f0       	breq	.+6      	; 0x168 <junction+0x12>
 162:	89 b3       	in	r24, 0x19	; 25
 164:	89 39       	cpi	r24, 0x99	; 153
 166:	41 f4       	brne	.+16     	; 0x178 <junction+0x22>
{
PORTD=(0<<PD0) | (1<<PD1) | (0<<PD6) | (1<<PD7);
 168:	82 e8       	ldi	r24, 0x82	; 130
 16a:	82 bb       	out	0x12, r24	; 18
OCR1A=250;
 16c:	8a ef       	ldi	r24, 0xFA	; 250
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	9b bd       	out	0x2b, r25	; 43
 172:	8a bd       	out	0x2a, r24	; 42
OCR1B=250;
 174:	99 bd       	out	0x29, r25	; 41
 176:	88 bd       	out	0x28, r24	; 40
 178:	08 95       	ret

0000017a <sharp_right>:
}
}

void sharp_right(void)
{
if((PINA==0b00000100||PINA==0b00000010||PINA==0b00000001||PINA==0b00000110||PINA==0b00000011))
 17a:	89 b3       	in	r24, 0x19	; 25
 17c:	84 30       	cpi	r24, 0x04	; 4
 17e:	61 f0       	breq	.+24     	; 0x198 <sharp_right+0x1e>
 180:	89 b3       	in	r24, 0x19	; 25
 182:	82 30       	cpi	r24, 0x02	; 2
 184:	49 f0       	breq	.+18     	; 0x198 <sharp_right+0x1e>
 186:	89 b3       	in	r24, 0x19	; 25
 188:	81 30       	cpi	r24, 0x01	; 1
 18a:	31 f0       	breq	.+12     	; 0x198 <sharp_right+0x1e>
 18c:	89 b3       	in	r24, 0x19	; 25
 18e:	86 30       	cpi	r24, 0x06	; 6
 190:	19 f0       	breq	.+6      	; 0x198 <sharp_right+0x1e>
 192:	89 b3       	in	r24, 0x19	; 25
 194:	83 30       	cpi	r24, 0x03	; 3
 196:	71 f4       	brne	.+28     	; 0x1b4 <sharp_right+0x3a>
{
PORTD=(0<<PD0) | (1<<PD1) | (1<<PD6) | (0<<PD7);
 198:	82 e4       	ldi	r24, 0x42	; 66
 19a:	82 bb       	out	0x12, r24	; 18
OCR1A=250;
 19c:	8a ef       	ldi	r24, 0xFA	; 250
 19e:	90 e0       	ldi	r25, 0x00	; 0
 1a0:	9b bd       	out	0x2b, r25	; 43
 1a2:	8a bd       	out	0x2a, r24	; 42
OCR1B=150;
 1a4:	86 e9       	ldi	r24, 0x96	; 150
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	99 bd       	out	0x29, r25	; 41
 1aa:	88 bd       	out	0x28, r24	; 40
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 1ac:	80 e5       	ldi	r24, 0x50	; 80
 1ae:	93 ec       	ldi	r25, 0xC3	; 195
 1b0:	01 97       	sbiw	r24, 0x01	; 1
 1b2:	f1 f7       	brne	.-4      	; 0x1b0 <sharp_right+0x36>
 1b4:	08 95       	ret

000001b6 <sharp_left>:
}
}

void sharp_left(void)
{
if((PINA==0b00100000||PINA==0b01000000||PINA==0b10000000||PINA==0b01100000||PINA==0b11000000))
 1b6:	89 b3       	in	r24, 0x19	; 25
 1b8:	80 32       	cpi	r24, 0x20	; 32
 1ba:	61 f0       	breq	.+24     	; 0x1d4 <sharp_left+0x1e>
 1bc:	89 b3       	in	r24, 0x19	; 25
 1be:	80 34       	cpi	r24, 0x40	; 64
 1c0:	49 f0       	breq	.+18     	; 0x1d4 <sharp_left+0x1e>
 1c2:	89 b3       	in	r24, 0x19	; 25
 1c4:	80 38       	cpi	r24, 0x80	; 128
 1c6:	31 f0       	breq	.+12     	; 0x1d4 <sharp_left+0x1e>
 1c8:	89 b3       	in	r24, 0x19	; 25
 1ca:	80 36       	cpi	r24, 0x60	; 96
 1cc:	19 f0       	breq	.+6      	; 0x1d4 <sharp_left+0x1e>
 1ce:	89 b3       	in	r24, 0x19	; 25
 1d0:	80 3c       	cpi	r24, 0xC0	; 192
 1d2:	71 f4       	brne	.+28     	; 0x1f0 <sharp_left+0x3a>
{
PORTD=(1<<PD0) | (0<<PD1) | (0<<PD6) | (1<<PD7);
 1d4:	81 e8       	ldi	r24, 0x81	; 129
 1d6:	82 bb       	out	0x12, r24	; 18
OCR1A=150;
 1d8:	86 e9       	ldi	r24, 0x96	; 150
 1da:	90 e0       	ldi	r25, 0x00	; 0
 1dc:	9b bd       	out	0x2b, r25	; 43
 1de:	8a bd       	out	0x2a, r24	; 42
OCR1B=250;
 1e0:	8a ef       	ldi	r24, 0xFA	; 250
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	99 bd       	out	0x29, r25	; 41
 1e6:	88 bd       	out	0x28, r24	; 40
 1e8:	80 e5       	ldi	r24, 0x50	; 80
 1ea:	93 ec       	ldi	r25, 0xC3	; 195
 1ec:	01 97       	sbiw	r24, 0x01	; 1
 1ee:	f1 f7       	brne	.-4      	; 0x1ec <sharp_left+0x36>
 1f0:	08 95       	ret

000001f2 <reverse>:
}
}

void reverse(void)
{
if((PINA==0b00000000))
 1f2:	89 b3       	in	r24, 0x19	; 25
 1f4:	88 23       	and	r24, r24
 1f6:	41 f4       	brne	.+16     	; 0x208 <reverse+0x16>
{
PORTD=(1<<PD0) | (0<<PD1) | (1<<PD6) | (0<<PD7);
 1f8:	81 e4       	ldi	r24, 0x41	; 65
 1fa:	82 bb       	out	0x12, r24	; 18
OCR1A=250;
 1fc:	8a ef       	ldi	r24, 0xFA	; 250
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	9b bd       	out	0x2b, r25	; 43
 202:	8a bd       	out	0x2a, r24	; 42
OCR1B=250;
 204:	99 bd       	out	0x29, r25	; 41
 206:	88 bd       	out	0x28, r24	; 40
 208:	08 95       	ret

0000020a <main>:
}
}

int main()
{
 20a:	ef 92       	push	r14
 20c:	ff 92       	push	r15
 20e:	0f 93       	push	r16
 210:	1f 93       	push	r17
 212:	cf 93       	push	r28
 214:	df 93       	push	r29

DDRA=0b00000000;
 216:	1a ba       	out	0x1a, r1	; 26
PINA=0b00000000;
 218:	19 ba       	out	0x19, r1	; 25
DDRD=0b11111111;//PWM port & output port
 21a:	8f ef       	ldi	r24, 0xFF	; 255
 21c:	81 bb       	out	0x11, r24	; 17
void sharp_left(void);
void reverse(void);

init_timer(unsigned char TOP)
{
TCCR1A |= 0xA2;//10100010
 21e:	8f b5       	in	r24, 0x2f	; 47
 220:	82 6a       	ori	r24, 0xA2	; 162
 222:	8f bd       	out	0x2f, r24	; 47
TCCR1B |= 0x12;//00010010
 224:	8e b5       	in	r24, 0x2e	; 46
 226:	82 61       	ori	r24, 0x12	; 18
 228:	8e bd       	out	0x2e, r24	; 46
ICR1=TOP;
 22a:	8f ef       	ldi	r24, 0xFF	; 255
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	97 bd       	out	0x27, r25	; 39
 230:	86 bd       	out	0x26, r24	; 38
OCR1A=0;
 232:	1b bc       	out	0x2b, r1	; 43
 234:	1a bc       	out	0x2a, r1	; 42
OCR1B=0;
 236:	19 bc       	out	0x29, r1	; 41
 238:	18 bc       	out	0x28, r1	; 40

void forward(void)
{
if(PINA==0b00011000||PINA==0b0001000||PINA==0b00001000)
{
PORTD=(0<<PD0) | (1<<PD1) | (0<<PD6) | (1<<PD7);
 23a:	92 e8       	ldi	r25, 0x82	; 130
 23c:	f9 2e       	mov	r15, r25
OCR1A=255;
 23e:	0f ef       	ldi	r16, 0xFF	; 255
 240:	10 e0       	ldi	r17, 0x00	; 0
void junction(void)
{
if((PINA==0b00111100||PINA==0b01011010||PINA==0b10011001))
{
PORTD=(0<<PD0) | (1<<PD1) | (0<<PD6) | (1<<PD7);
OCR1A=250;
 242:	ca ef       	ldi	r28, 0xFA	; 250
 244:	d0 e0       	ldi	r29, 0x00	; 0

void reverse(void)
{
if((PINA==0b00000000))
{
PORTD=(1<<PD0) | (0<<PD1) | (1<<PD6) | (0<<PD7);
 246:	81 e4       	ldi	r24, 0x41	; 65
 248:	e8 2e       	mov	r14, r24



void forward(void)
{
if(PINA==0b00011000||PINA==0b0001000||PINA==0b00001000)
 24a:	89 b3       	in	r24, 0x19	; 25
 24c:	88 31       	cpi	r24, 0x18	; 24
 24e:	31 f0       	breq	.+12     	; 0x25c <main+0x52>
 250:	89 b3       	in	r24, 0x19	; 25
 252:	88 30       	cpi	r24, 0x08	; 8
 254:	19 f0       	breq	.+6      	; 0x25c <main+0x52>
 256:	89 b3       	in	r24, 0x19	; 25
 258:	88 30       	cpi	r24, 0x08	; 8
 25a:	29 f4       	brne	.+10     	; 0x266 <main+0x5c>
{
PORTD=(0<<PD0) | (1<<PD1) | (0<<PD6) | (1<<PD7);
 25c:	f2 ba       	out	0x12, r15	; 18
OCR1A=255;
 25e:	1b bd       	out	0x2b, r17	; 43
 260:	0a bd       	out	0x2a, r16	; 42
OCR1B=255;
 262:	19 bd       	out	0x29, r17	; 41
 264:	08 bd       	out	0x28, r16	; 40
init_timer(255);

while(1)
{
forward();
left();
 266:	0e 94 56 00 	call	0xac	; 0xac <left>
right();
 26a:	0e 94 7c 00 	call	0xf8	; 0xf8 <right>
sharp_left();
 26e:	0e 94 db 00 	call	0x1b6	; 0x1b6 <sharp_left>
sharp_right();
 272:	0e 94 bd 00 	call	0x17a	; 0x17a <sharp_right>



void junction(void)
{
if((PINA==0b00111100||PINA==0b01011010||PINA==0b10011001))
 276:	89 b3       	in	r24, 0x19	; 25
 278:	8c 33       	cpi	r24, 0x3C	; 60
 27a:	31 f0       	breq	.+12     	; 0x288 <main+0x7e>
 27c:	89 b3       	in	r24, 0x19	; 25
 27e:	8a 35       	cpi	r24, 0x5A	; 90
 280:	19 f0       	breq	.+6      	; 0x288 <main+0x7e>
 282:	89 b3       	in	r24, 0x19	; 25
 284:	89 39       	cpi	r24, 0x99	; 153
 286:	29 f4       	brne	.+10     	; 0x292 <main+0x88>
{
PORTD=(0<<PD0) | (1<<PD1) | (0<<PD6) | (1<<PD7);
 288:	f2 ba       	out	0x12, r15	; 18
OCR1A=250;
 28a:	db bd       	out	0x2b, r29	; 43
 28c:	ca bd       	out	0x2a, r28	; 42
OCR1B=250;
 28e:	d9 bd       	out	0x29, r29	; 41
 290:	c8 bd       	out	0x28, r28	; 40
}
}

void reverse(void)
{
if((PINA==0b00000000))
 292:	89 b3       	in	r24, 0x19	; 25
 294:	88 23       	and	r24, r24
 296:	29 f4       	brne	.+10     	; 0x2a2 <main+0x98>
{
PORTD=(1<<PD0) | (0<<PD1) | (1<<PD6) | (0<<PD7);
 298:	e2 ba       	out	0x12, r14	; 18
OCR1A=250;
 29a:	db bd       	out	0x2b, r29	; 43
 29c:	ca bd       	out	0x2a, r28	; 42
OCR1B=250;
 29e:	d9 bd       	out	0x29, r29	; 41
 2a0:	c8 bd       	out	0x28, r28	; 40
}
}

void stop(void)
{
if((PINA==0b11111111))
 2a2:	89 b3       	in	r24, 0x19	; 25
 2a4:	8f 3f       	cpi	r24, 0xFF	; 255
 2a6:	89 f6       	brne	.-94     	; 0x24a <main+0x40>
{
PORTD=0b00000000;
 2a8:	12 ba       	out	0x12, r1	; 18
OCR1A=0;
 2aa:	1b bc       	out	0x2b, r1	; 43
 2ac:	1a bc       	out	0x2a, r1	; 42
OCR1B=0;
 2ae:	19 bc       	out	0x29, r1	; 41
 2b0:	18 bc       	out	0x28, r1	; 40
 2b2:	cb cf       	rjmp	.-106    	; 0x24a <main+0x40>

000002b4 <_exit>:
 2b4:	f8 94       	cli

000002b6 <__stop_program>:
 2b6:	ff cf       	rjmp	.-2      	; 0x2b6 <__stop_program>
