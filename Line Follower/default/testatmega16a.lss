
testatmega16a.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000116  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  0000016a  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  0000018a  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000003fa  00000000  00000000  000001a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000d8  00000000  00000000  0000059f  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000002b1  00000000  00000000  00000677  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  00000928  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000af  00000000  00000000  00000948  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000150  00000000  00000000  000009f7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000048  00000000  00000000  00000b47  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 89 00 	jmp	0x112	; 0x112 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include<avr/io.h>
#include<util/delay.h>

void main()
{
  6c:	ef 92       	push	r14
  6e:	ff 92       	push	r15
  70:	0f 93       	push	r16
  72:	1f 93       	push	r17
DDRA=0b11111111;
  74:	8f ef       	ldi	r24, 0xFF	; 255
  76:	8a bb       	out	0x1a, r24	; 26
while(1)
{
PORTA=0b11111111;
  78:	5f ef       	ldi	r21, 0xFF	; 255
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  7a:	28 ea       	ldi	r18, 0xA8	; 168
  7c:	31 e6       	ldi	r19, 0x61	; 97
_delay_ms(100);
PORTA=0b00000000;
_delay_ms(100);
PORTA=0b10101010;
  7e:	9a ea       	ldi	r25, 0xAA	; 170
  80:	e9 2e       	mov	r14, r25
_delay_ms(100);
PORTA=0b01010101;
  82:	85 e5       	ldi	r24, 0x55	; 85
  84:	f8 2e       	mov	r15, r24
_delay_ms(100);
PORTA=0b11001100;
  86:	4c ec       	ldi	r20, 0xCC	; 204
_delay_ms(100);
PORTA=0b00110011;
  88:	03 e3       	ldi	r16, 0x33	; 51
_delay_ms(100);
PORTA=0b11100111;
  8a:	17 ee       	ldi	r17, 0xE7	; 231
_delay_ms(100);
PORTA=0b11001100;
_delay_ms(100);
PORTA=0b10000000;
  8c:	b0 e8       	ldi	r27, 0x80	; 128
_delay_ms(100);
PORTA=0b11000000;
  8e:	a0 ec       	ldi	r26, 0xC0	; 192
_delay_ms(100);
PORTA=0b11100000;
  90:	f0 ee       	ldi	r31, 0xE0	; 224
_delay_ms(100);
PORTA=0b11110000;
  92:	e0 ef       	ldi	r30, 0xF0	; 240
_delay_ms(100);
PORTA=0b11111000;
  94:	78 ef       	ldi	r23, 0xF8	; 248
_delay_ms(100);
PORTA=0b11111110;
  96:	6e ef       	ldi	r22, 0xFE	; 254
void main()
{
DDRA=0b11111111;
while(1)
{
PORTA=0b11111111;
  98:	5b bb       	out	0x1b, r21	; 27
  9a:	c9 01       	movw	r24, r18
  9c:	01 97       	sbiw	r24, 0x01	; 1
  9e:	f1 f7       	brne	.-4      	; 0x9c <main+0x30>
_delay_ms(100);
PORTA=0b00000000;
  a0:	1b ba       	out	0x1b, r1	; 27
  a2:	c9 01       	movw	r24, r18
  a4:	01 97       	sbiw	r24, 0x01	; 1
  a6:	f1 f7       	brne	.-4      	; 0xa4 <main+0x38>
_delay_ms(100);
PORTA=0b10101010;
  a8:	eb ba       	out	0x1b, r14	; 27
  aa:	c9 01       	movw	r24, r18
  ac:	01 97       	sbiw	r24, 0x01	; 1
  ae:	f1 f7       	brne	.-4      	; 0xac <main+0x40>
_delay_ms(100);
PORTA=0b01010101;
  b0:	fb ba       	out	0x1b, r15	; 27
  b2:	c9 01       	movw	r24, r18
  b4:	01 97       	sbiw	r24, 0x01	; 1
  b6:	f1 f7       	brne	.-4      	; 0xb4 <main+0x48>
_delay_ms(100);
PORTA=0b11001100;
  b8:	4b bb       	out	0x1b, r20	; 27
  ba:	c9 01       	movw	r24, r18
  bc:	01 97       	sbiw	r24, 0x01	; 1
  be:	f1 f7       	brne	.-4      	; 0xbc <main+0x50>
_delay_ms(100);
PORTA=0b00110011;
  c0:	0b bb       	out	0x1b, r16	; 27
  c2:	c9 01       	movw	r24, r18
  c4:	01 97       	sbiw	r24, 0x01	; 1
  c6:	f1 f7       	brne	.-4      	; 0xc4 <main+0x58>
_delay_ms(100);
PORTA=0b11100111;
  c8:	1b bb       	out	0x1b, r17	; 27
  ca:	c9 01       	movw	r24, r18
  cc:	01 97       	sbiw	r24, 0x01	; 1
  ce:	f1 f7       	brne	.-4      	; 0xcc <main+0x60>
_delay_ms(100);
PORTA=0b11001100;
  d0:	4b bb       	out	0x1b, r20	; 27
  d2:	c9 01       	movw	r24, r18
  d4:	01 97       	sbiw	r24, 0x01	; 1
  d6:	f1 f7       	brne	.-4      	; 0xd4 <main+0x68>
_delay_ms(100);
PORTA=0b10000000;
  d8:	bb bb       	out	0x1b, r27	; 27
  da:	c9 01       	movw	r24, r18
  dc:	01 97       	sbiw	r24, 0x01	; 1
  de:	f1 f7       	brne	.-4      	; 0xdc <main+0x70>
_delay_ms(100);
PORTA=0b11000000;
  e0:	ab bb       	out	0x1b, r26	; 27
  e2:	c9 01       	movw	r24, r18
  e4:	01 97       	sbiw	r24, 0x01	; 1
  e6:	f1 f7       	brne	.-4      	; 0xe4 <main+0x78>
_delay_ms(100);
PORTA=0b11100000;
  e8:	fb bb       	out	0x1b, r31	; 27
  ea:	c9 01       	movw	r24, r18
  ec:	01 97       	sbiw	r24, 0x01	; 1
  ee:	f1 f7       	brne	.-4      	; 0xec <main+0x80>
_delay_ms(100);
PORTA=0b11110000;
  f0:	eb bb       	out	0x1b, r30	; 27
  f2:	c9 01       	movw	r24, r18
  f4:	01 97       	sbiw	r24, 0x01	; 1
  f6:	f1 f7       	brne	.-4      	; 0xf4 <main+0x88>
_delay_ms(100);
PORTA=0b11111000;
  f8:	7b bb       	out	0x1b, r23	; 27
  fa:	c9 01       	movw	r24, r18
  fc:	01 97       	sbiw	r24, 0x01	; 1
  fe:	f1 f7       	brne	.-4      	; 0xfc <main+0x90>
_delay_ms(100);
PORTA=0b11111110;
 100:	6b bb       	out	0x1b, r22	; 27
 102:	c9 01       	movw	r24, r18
 104:	01 97       	sbiw	r24, 0x01	; 1
 106:	f1 f7       	brne	.-4      	; 0x104 <main+0x98>
_delay_ms(100);
PORTA=0b11111111;
 108:	5b bb       	out	0x1b, r21	; 27
 10a:	c9 01       	movw	r24, r18
 10c:	01 97       	sbiw	r24, 0x01	; 1
 10e:	f1 f7       	brne	.-4      	; 0x10c <main+0xa0>
 110:	c3 cf       	rjmp	.-122    	; 0x98 <main+0x2c>

00000112 <_exit>:
 112:	f8 94       	cli

00000114 <__stop_program>:
 114:	ff cf       	rjmp	.-2      	; 0x114 <__stop_program>
