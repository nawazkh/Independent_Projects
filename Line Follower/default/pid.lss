
pid.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001fe4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000001e4  00800060  00001fe4  00002078  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000002e  00800244  00800244  0000225c  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  0000225c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000024f  00000000  00000000  0000227c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000cb8  00000000  00000000  000024cb  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000258  00000000  00000000  00003183  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000ea6  00000000  00000000  000033db  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001a0  00000000  00000000  00004284  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000025b  00000000  00000000  00004424  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000059f  00000000  00000000  0000467f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00004c1e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 72 07 	jmp	0xee4	; 0xee4 <__vector_1>
       8:	0c 94 51 06 	jmp	0xca2	; 0xca2 <__vector_2>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 fa 06 	jmp	0xdf4	; 0xdf4 <__vector_18>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	12 e0       	ldi	r17, 0x02	; 2
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 ee       	ldi	r30, 0xE4	; 228
      68:	ff e1       	ldi	r31, 0x1F	; 31
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a4 34       	cpi	r26, 0x44	; 68
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	12 e0       	ldi	r17, 0x02	; 2
      78:	a4 e4       	ldi	r26, 0x44	; 68
      7a:	b2 e0       	ldi	r27, 0x02	; 2
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a2 37       	cpi	r26, 0x72	; 114
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 cb 04 	call	0x996	; 0x996 <main>
      8a:	0c 94 f0 0f 	jmp	0x1fe0	; 0x1fe0 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <LCDBusyLoop>:
	//This function waits till lcd is BUSY

	uint8_t busy,status=0x00,temp;

	//Change Port to input type because we are reading data
	LCD_DATA_DDR&=0xF0;
      92:	84 b3       	in	r24, 0x14	; 20
      94:	80 7f       	andi	r24, 0xF0	; 240
      96:	84 bb       	out	0x14, r24	; 20

	//change LCD mode
	SET_RW();		//Read mode
      98:	ad 9a       	sbi	0x15, 5	; 21
	CLEAR_RS();		//Read status
      9a:	ac 98       	cbi	0x15, 4	; 21
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
      9c:	81 e0       	ldi	r24, 0x01	; 1
      9e:	8a 95       	dec	r24
      a0:	f1 f7       	brne	.-4      	; 0x9e <LCDBusyLoop+0xc>

	
	do
	{

		SET_E();
      a2:	21 e0       	ldi	r18, 0x01	; 1
      a4:	ae 9a       	sbi	0x15, 6	; 21
      a6:	82 2f       	mov	r24, r18
      a8:	8a 95       	dec	r24
      aa:	f1 f7       	brne	.-4      	; 0xa8 <LCDBusyLoop+0x16>

		//Wait tDA for data to become available
		_delay_us(0.5);

		status=LCD_DATA_PIN;
      ac:	83 b3       	in	r24, 0x13	; 19
		status=status<<4;
      ae:	82 95       	swap	r24
      b0:	80 7f       	andi	r24, 0xF0	; 240
      b2:	92 2f       	mov	r25, r18
      b4:	9a 95       	dec	r25
      b6:	f1 f7       	brne	.-4      	; 0xb4 <LCDBusyLoop+0x22>

		_delay_us(0.5);

		//Pull E low
		CLEAR_E();
      b8:	ae 98       	cbi	0x15, 6	; 21
      ba:	92 2f       	mov	r25, r18
      bc:	9a 95       	dec	r25
      be:	f1 f7       	brne	.-4      	; 0xbc <LCDBusyLoop+0x2a>
		_delay_us(1);	//tEL

		SET_E();
      c0:	ae 9a       	sbi	0x15, 6	; 21
      c2:	92 2f       	mov	r25, r18
      c4:	9a 95       	dec	r25
      c6:	f1 f7       	brne	.-4      	; 0xc4 <LCDBusyLoop+0x32>
		_delay_us(0.5);

		temp=LCD_DATA_PIN;
      c8:	93 b3       	in	r25, 0x13	; 19
      ca:	92 2f       	mov	r25, r18
      cc:	9a 95       	dec	r25
      ce:	f1 f7       	brne	.-4      	; 0xcc <LCDBusyLoop+0x3a>
		status=status|temp;

		busy=status & 0b10000000;

		_delay_us(0.5);
		CLEAR_E();
      d0:	ae 98       	cbi	0x15, 6	; 21
      d2:	92 2f       	mov	r25, r18
      d4:	9a 95       	dec	r25
      d6:	f1 f7       	brne	.-4      	; 0xd4 <LCDBusyLoop+0x42>
		_delay_us(1);	//tEL
	}while(busy);
      d8:	87 fd       	sbrc	r24, 7
      da:	e4 cf       	rjmp	.-56     	; 0xa4 <LCDBusyLoop+0x12>

	CLEAR_RW();		//write mode
      dc:	ad 98       	cbi	0x15, 5	; 21
	//Change Port to output
	LCD_DATA_DDR|=0x0F;
      de:	84 b3       	in	r24, 0x14	; 20
      e0:	8f 60       	ori	r24, 0x0F	; 15
      e2:	84 bb       	out	0x14, r24	; 20

}
      e4:	08 95       	ret

000000e6 <LCDByte>:
#define CLEAR_RW() (LCD_RW_PORT&=(~(1<<LCD_RW_POS)))



void LCDByte(uint8_t c,uint8_t isdata)
{
      e6:	38 2f       	mov	r19, r24
uint8_t temp;

hn=c>>4;
ln=(c & 0x0F);

if(isdata==0)
      e8:	66 23       	and	r22, r22
      ea:	11 f4       	brne	.+4      	; 0xf0 <LCDByte+0xa>
	CLEAR_RS();
      ec:	ac 98       	cbi	0x15, 4	; 21
      ee:	01 c0       	rjmp	.+2      	; 0xf2 <LCDByte+0xc>
else
	SET_RS();
      f0:	ac 9a       	sbi	0x15, 4	; 21
      f2:	21 e0       	ldi	r18, 0x01	; 1
      f4:	82 2f       	mov	r24, r18
      f6:	8a 95       	dec	r24
      f8:	f1 f7       	brne	.-4      	; 0xf6 <LCDByte+0x10>

_delay_us(0.500);		//tAS

SET_E();
      fa:	ae 9a       	sbi	0x15, 6	; 21

//Send high nibble

temp=(LCD_DATA_PORT & 0XF0)|(hn);
      fc:	85 b3       	in	r24, 0x15	; 21
      fe:	93 2f       	mov	r25, r19
     100:	92 95       	swap	r25
     102:	9f 70       	andi	r25, 0x0F	; 15
     104:	80 7f       	andi	r24, 0xF0	; 240
     106:	98 2b       	or	r25, r24
LCD_DATA_PORT=temp;
     108:	95 bb       	out	0x15, r25	; 21
     10a:	82 2f       	mov	r24, r18
     10c:	8a 95       	dec	r24
     10e:	f1 f7       	brne	.-4      	; 0x10c <LCDByte+0x26>

_delay_us(1);			//tEH

//Now data lines are stable pull E low for transmission

CLEAR_E();
     110:	ae 98       	cbi	0x15, 6	; 21
     112:	82 2f       	mov	r24, r18
     114:	8a 95       	dec	r24
     116:	f1 f7       	brne	.-4      	; 0x114 <LCDByte+0x2e>

_delay_us(1);

//Send the lower nibble
SET_E();
     118:	ae 9a       	sbi	0x15, 6	; 21

temp=(LCD_DATA_PORT & 0XF0)|(ln);
     11a:	85 b3       	in	r24, 0x15	; 21
     11c:	3f 70       	andi	r19, 0x0F	; 15
     11e:	80 7f       	andi	r24, 0xF0	; 240
     120:	83 2b       	or	r24, r19

LCD_DATA_PORT=temp;
     122:	85 bb       	out	0x15, r24	; 21
     124:	82 2f       	mov	r24, r18
     126:	8a 95       	dec	r24
     128:	f1 f7       	brne	.-4      	; 0x126 <LCDByte+0x40>

_delay_us(1);			//tEH

//SEND

CLEAR_E();
     12a:	ae 98       	cbi	0x15, 6	; 21
     12c:	2a 95       	dec	r18
     12e:	f1 f7       	brne	.-4      	; 0x12c <LCDByte+0x46>

_delay_us(1);			//tEL

LCDBusyLoop();
     130:	0e 94 49 00 	call	0x92	; 0x92 <LCDBusyLoop>
}
     134:	08 95       	ret

00000136 <InitLCD>:
	LCD_DATA_DDR|=0x0F;

}

void InitLCD(uint8_t style)
{
     136:	1f 93       	push	r17
     138:	18 2f       	mov	r17, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     13a:	8c e4       	ldi	r24, 0x4C	; 76
     13c:	9d e1       	ldi	r25, 0x1D	; 29
     13e:	01 97       	sbiw	r24, 0x01	; 1
     140:	f1 f7       	brne	.-4      	; 0x13e <InitLCD+0x8>
	
	//After power on Wait for LCD to Initialize
	_delay_ms(30);
	
	//Set IO Ports
	LCD_DATA_DDR|=(0x0F);
     142:	84 b3       	in	r24, 0x14	; 20
     144:	8f 60       	ori	r24, 0x0F	; 15
     146:	84 bb       	out	0x14, r24	; 20
	LCD_E_DDR|=(1<<LCD_E_POS);
     148:	a6 9a       	sbi	0x14, 6	; 20
	LCD_RS_DDR|=(1<<LCD_RS_POS);
     14a:	a4 9a       	sbi	0x14, 4	; 20
	LCD_RW_DDR|=(1<<LCD_RW_POS);
     14c:	a5 9a       	sbi	0x14, 5	; 20

	LCD_DATA_PORT&=0XF0;
     14e:	85 b3       	in	r24, 0x15	; 21
     150:	80 7f       	andi	r24, 0xF0	; 240
     152:	85 bb       	out	0x15, r24	; 21
	CLEAR_E();
     154:	ae 98       	cbi	0x15, 6	; 21
	CLEAR_RW();
     156:	ad 98       	cbi	0x15, 5	; 21
	CLEAR_RS();
     158:	ac 98       	cbi	0x15, 4	; 21
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     15a:	81 e0       	ldi	r24, 0x01	; 1
     15c:	98 2f       	mov	r25, r24
     15e:	9a 95       	dec	r25
     160:	f1 f7       	brne	.-4      	; 0x15e <InitLCD+0x28>

	//Set 4-bit mode
	_delay_us(0.3);	//tAS

	SET_E();
     162:	ae 9a       	sbi	0x15, 6	; 21
	LCD_DATA_PORT|=(0b00000010); //[B] To transfer 0b00100000 i was using LCD_DATA_PORT|=0b00100000
     164:	a9 9a       	sbi	0x15, 1	; 21
     166:	98 2f       	mov	r25, r24
     168:	9a 95       	dec	r25
     16a:	f1 f7       	brne	.-4      	; 0x168 <InitLCD+0x32>
	_delay_us(1);
	CLEAR_E();
     16c:	ae 98       	cbi	0x15, 6	; 21
     16e:	8a 95       	dec	r24
     170:	f1 f7       	brne	.-4      	; 0x16e <InitLCD+0x38>
	_delay_us(1);
	
	//Wait for LCD to execute the Functionset Command
	LCDBusyLoop();                                    //[B] Forgot this delay
     172:	0e 94 49 00 	call	0x92	; 0x92 <LCDBusyLoop>

	//Now the LCD is in 4-bit mode

	LCDCmd(0b00001100|style);	//Display On
     176:	81 2f       	mov	r24, r17
     178:	8c 60       	ori	r24, 0x0C	; 12
     17a:	60 e0       	ldi	r22, 0x00	; 0
     17c:	0e 94 73 00 	call	0xe6	; 0xe6 <LCDByte>
	LCDCmd(0b00101000);			//function set 4-bit,2 line 5x7 dot format
     180:	88 e2       	ldi	r24, 0x28	; 40
     182:	60 e0       	ldi	r22, 0x00	; 0
     184:	0e 94 73 00 	call	0xe6	; 0xe6 <LCDByte>
}
     188:	1f 91       	pop	r17
     18a:	08 95       	ret

0000018c <LCDWriteString>:
void LCDWriteString(const char *msg)
{
     18c:	cf 93       	push	r28
     18e:	df 93       	push	r29
     190:	ec 01       	movw	r28, r24
     192:	04 c0       	rjmp	.+8      	; 0x19c <LCDWriteString+0x10>


	*****************************************************************/
 while(*msg!='\0')
 {
	LCDData(*msg);
     194:	61 e0       	ldi	r22, 0x01	; 1
     196:	0e 94 73 00 	call	0xe6	; 0xe6 <LCDByte>
	msg++;
     19a:	21 96       	adiw	r28, 0x01	; 1
	Arguments:
	msg: a null terminated string to print


	*****************************************************************/
 while(*msg!='\0')
     19c:	88 81       	ld	r24, Y
     19e:	88 23       	and	r24, r24
     1a0:	c9 f7       	brne	.-14     	; 0x194 <LCDWriteString+0x8>
 {
	LCDData(*msg);
	msg++;
 }
}
     1a2:	df 91       	pop	r29
     1a4:	cf 91       	pop	r28
     1a6:	08 95       	ret

000001a8 <LCDWriteInt>:

void LCDWriteInt(int val,unsigned int field_length)
{
     1a8:	ef 92       	push	r14
     1aa:	ff 92       	push	r15
     1ac:	0f 93       	push	r16
     1ae:	1f 93       	push	r17
     1b0:	df 93       	push	r29
     1b2:	cf 93       	push	r28
     1b4:	00 d0       	rcall	.+0      	; 0x1b6 <LCDWriteInt+0xe>
     1b6:	00 d0       	rcall	.+0      	; 0x1b8 <LCDWriteInt+0x10>
     1b8:	0f 92       	push	r0
     1ba:	cd b7       	in	r28, 0x3d	; 61
     1bc:	de b7       	in	r29, 0x3e	; 62
     1be:	9c 01       	movw	r18, r24
     1c0:	8b 01       	movw	r16, r22
	2)unsigned int field_length :total length of field in which the value is printed
	must be between 1-5 if it is -1 the field length is no of digits in the val

	****************************************************************/

	char str[5]={0,0,0,0,0};
     1c2:	fe 01       	movw	r30, r28
     1c4:	31 96       	adiw	r30, 0x01	; 1
     1c6:	85 e0       	ldi	r24, 0x05	; 5
     1c8:	df 01       	movw	r26, r30
     1ca:	1d 92       	st	X+, r1
     1cc:	8a 95       	dec	r24
     1ce:	e9 f7       	brne	.-6      	; 0x1ca <LCDWriteInt+0x22>
     1d0:	fe 01       	movw	r30, r28
     1d2:	35 96       	adiw	r30, 0x05	; 5
     1d4:	0d c0       	rjmp	.+26     	; 0x1f0 <LCDWriteInt+0x48>
	int i=4,j=0;
	while(val)
	{
	str[i]=val%10;
     1d6:	c9 01       	movw	r24, r18
     1d8:	6a e0       	ldi	r22, 0x0A	; 10
     1da:	70 e0       	ldi	r23, 0x00	; 0
     1dc:	0e 94 92 0f 	call	0x1f24	; 0x1f24 <__divmodhi4>
     1e0:	80 83       	st	Z, r24
	val=val/10;
     1e2:	c9 01       	movw	r24, r18
     1e4:	6a e0       	ldi	r22, 0x0A	; 10
     1e6:	70 e0       	ldi	r23, 0x00	; 0
     1e8:	0e 94 92 0f 	call	0x1f24	; 0x1f24 <__divmodhi4>
     1ec:	9b 01       	movw	r18, r22
     1ee:	31 97       	sbiw	r30, 0x01	; 1

	****************************************************************/

	char str[5]={0,0,0,0,0};
	int i=4,j=0;
	while(val)
     1f0:	21 15       	cp	r18, r1
     1f2:	31 05       	cpc	r19, r1
     1f4:	81 f7       	brne	.-32     	; 0x1d6 <LCDWriteInt+0x2e>
	{
	str[i]=val%10;
	val=val/10;
	i--;
	}
	if(field_length==-1)
     1f6:	bf ef       	ldi	r27, 0xFF	; 255
     1f8:	0f 3f       	cpi	r16, 0xFF	; 255
     1fa:	1b 07       	cpc	r17, r27
     1fc:	79 f4       	brne	.+30     	; 0x21c <LCDWriteInt+0x74>
     1fe:	20 e0       	ldi	r18, 0x00	; 0
     200:	30 e0       	ldi	r19, 0x00	; 0
		while(str[j]==0) j++;
     202:	ae 01       	movw	r20, r28
     204:	4f 5f       	subi	r20, 0xFF	; 255
     206:	5f 4f       	sbci	r21, 0xFF	; 255
     208:	02 c0       	rjmp	.+4      	; 0x20e <LCDWriteInt+0x66>
     20a:	2f 5f       	subi	r18, 0xFF	; 255
     20c:	3f 4f       	sbci	r19, 0xFF	; 255
     20e:	fa 01       	movw	r30, r20
     210:	e2 0f       	add	r30, r18
     212:	f3 1f       	adc	r31, r19
     214:	80 81       	ld	r24, Z
     216:	88 23       	and	r24, r24
     218:	c1 f3       	breq	.-16     	; 0x20a <LCDWriteInt+0x62>
     21a:	04 c0       	rjmp	.+8      	; 0x224 <LCDWriteInt+0x7c>
	else
		j=5-field_length;
     21c:	25 e0       	ldi	r18, 0x05	; 5
     21e:	30 e0       	ldi	r19, 0x00	; 0
     220:	20 1b       	sub	r18, r16
     222:	31 0b       	sbc	r19, r17
     224:	7e 01       	movw	r14, r28
     226:	08 94       	sec
     228:	e1 1c       	adc	r14, r1
     22a:	f1 1c       	adc	r15, r1
     22c:	e2 0e       	add	r14, r18
     22e:	f3 1e       	adc	r15, r19
     230:	89 01       	movw	r16, r18
     232:	09 c0       	rjmp	.+18     	; 0x246 <LCDWriteInt+0x9e>

	if(val<0) LCDData('-');
	for(i=j;i<5;i++)
	{
	LCDData(48+str[i]);
     234:	f7 01       	movw	r30, r14
     236:	81 91       	ld	r24, Z+
     238:	7f 01       	movw	r14, r30
     23a:	80 5d       	subi	r24, 0xD0	; 208
     23c:	61 e0       	ldi	r22, 0x01	; 1
     23e:	0e 94 73 00 	call	0xe6	; 0xe6 <LCDByte>
		while(str[j]==0) j++;
	else
		j=5-field_length;

	if(val<0) LCDData('-');
	for(i=j;i<5;i++)
     242:	0f 5f       	subi	r16, 0xFF	; 255
     244:	1f 4f       	sbci	r17, 0xFF	; 255
     246:	05 30       	cpi	r16, 0x05	; 5
     248:	11 05       	cpc	r17, r1
     24a:	a4 f3       	brlt	.-24     	; 0x234 <LCDWriteInt+0x8c>
	{
	LCDData(48+str[i]);
	}
}
     24c:	0f 90       	pop	r0
     24e:	0f 90       	pop	r0
     250:	0f 90       	pop	r0
     252:	0f 90       	pop	r0
     254:	0f 90       	pop	r0
     256:	cf 91       	pop	r28
     258:	df 91       	pop	r29
     25a:	1f 91       	pop	r17
     25c:	0f 91       	pop	r16
     25e:	ff 90       	pop	r15
     260:	ef 90       	pop	r14
     262:	08 95       	ret

00000264 <LCDGotoXY>:
void LCDGotoXY(uint8_t x,uint8_t y)
{
 if(x<40)
     264:	88 32       	cpi	r24, 0x28	; 40
     266:	30 f4       	brcc	.+12     	; 0x274 <LCDGotoXY+0x10>
 {
  if(y) x|=0b01000000;
     268:	61 11       	cpse	r22, r1
     26a:	80 64       	ori	r24, 0x40	; 64
  x|=0b10000000;
  LCDCmd(x);
     26c:	80 68       	ori	r24, 0x80	; 128
     26e:	60 e0       	ldi	r22, 0x00	; 0
     270:	0e 94 73 00 	call	0xe6	; 0xe6 <LCDByte>
     274:	08 95       	ret

00000276 <InitPorts>:
unsigned short int basespeed = 175, Kp = 30 , Ki = 4,Kd = 8;
float P, I, D, correction;

void InitPorts(void) 						//initialize the pins 
{
	sbi(DDRC, PC7);						//set LCD Baklight pin as output
     276:	a7 9a       	sbi	0x14, 7	; 20
	cbi(PORTC, PC7);		
     278:	af 98       	cbi	0x15, 7	; 21
	
	//initializes the pins connected to motor driver as output
	sbi(DDRD, PD5);						
     27a:	8d 9a       	sbi	0x11, 5	; 17
	sbi(DDRD, PD6);
     27c:	8e 9a       	sbi	0x11, 6	; 17
	sbi(DDRD, PD7);	
     27e:	8f 9a       	sbi	0x11, 7	; 17
	sbi(DDRD, PD4);
     280:	8c 9a       	sbi	0x11, 4	; 17
	sbi(DDRD, PD0);
     282:	88 9a       	sbi	0x11, 0	; 17
	sbi(DDRD, PD1);
     284:	89 9a       	sbi	0x11, 1	; 17
	cbi(PORTD, PD5);
     286:	95 98       	cbi	0x12, 5	; 18
	cbi(PORTD, PD6);
     288:	96 98       	cbi	0x12, 6	; 18
	cbi(PORTD, PD7);	
     28a:	97 98       	cbi	0x12, 7	; 18
	cbi(PORTD, PD4);
     28c:	94 98       	cbi	0x12, 4	; 18
	cbi(PORTD, PD0);
     28e:	90 98       	cbi	0x12, 0	; 18
	cbi(PORTD, PD1);	
     290:	91 98       	cbi	0x12, 1	; 18
	
	//initiallizes the motor enable pins as output
	sbi(PORTD, PD4);	
     292:	94 9a       	sbi	0x12, 4	; 18
	sbi(PORTD, PD5);		
     294:	95 9a       	sbi	0x12, 5	; 18
	

	
	//the following statements set the seitch pins as input pins
	cbi(DDRD, PD2);
     296:	8a 98       	cbi	0x11, 2	; 17
	cbi(DDRD, PD3);
     298:	8b 98       	cbi	0x11, 3	; 17
	cbi(DDRB, PB2);
     29a:	ba 98       	cbi	0x17, 2	; 23
	
	DDRA = 0;    								//sets the port connected to sensors as input	
     29c:	1a ba       	out	0x1a, r1	; 26
	PORTA = 0;   								//enable pull up	
     29e:	1b ba       	out	0x1b, r1	; 27
}
     2a0:	08 95       	ret

000002a2 <InitPWM>:
	
void InitPWM(void)								//initialize PWM				
{	
	TCCR1A = _BV(WGM10)   					    // 8 bit fast PWM
     2a2:	81 ea       	ldi	r24, 0xA1	; 161
     2a4:	8f bd       	out	0x2f, r24	; 47
		   | _BV(COM1A1)  						// set OC1A/B on compare match
		   | _BV(COM1B1);		
	TCCR1B = _BV(CS11)  	   				   // 1/8 prescale fast PWM
     2a6:	8a e0       	ldi	r24, 0x0A	; 10
     2a8:	8e bd       	out	0x2e, r24	; 46
		   | _BV(WGM12) ;  				
}	
     2aa:	08 95       	ret

000002ac <InitInterrupts>:

void InitInterrupts(void)
{
	cbi(MCUCR, ISC10);
     2ac:	85 b7       	in	r24, 0x35	; 53
     2ae:	8b 7f       	andi	r24, 0xFB	; 251
     2b0:	85 bf       	out	0x35, r24	; 53
	cbi(MCUCR, ISC11);
     2b2:	85 b7       	in	r24, 0x35	; 53
     2b4:	87 7f       	andi	r24, 0xF7	; 247
     2b6:	85 bf       	out	0x35, r24	; 53
	
	cbi(MCUCR, ISC00);
     2b8:	85 b7       	in	r24, 0x35	; 53
     2ba:	8e 7f       	andi	r24, 0xFE	; 254
     2bc:	85 bf       	out	0x35, r24	; 53
	cbi(MCUCR, ISC01);
     2be:	85 b7       	in	r24, 0x35	; 53
     2c0:	8d 7f       	andi	r24, 0xFD	; 253
     2c2:	85 bf       	out	0x35, r24	; 53
	
	cbi(MCUCR, ISC2);
     2c4:	85 b7       	in	r24, 0x35	; 53
     2c6:	8f 7b       	andi	r24, 0xBF	; 191
     2c8:	85 bf       	out	0x35, r24	; 53
	
	GICR  |= (1<<INT0);
     2ca:	8b b7       	in	r24, 0x3b	; 59
     2cc:	80 64       	ori	r24, 0x40	; 64
     2ce:	8b bf       	out	0x3b, r24	; 59
	GICR  |= (1<<INT1);
     2d0:	8b b7       	in	r24, 0x3b	; 59
     2d2:	80 68       	ori	r24, 0x80	; 128
     2d4:	8b bf       	out	0x3b, r24	; 59
	GICR  |= (1<<INT2);
     2d6:	8b b7       	in	r24, 0x3b	; 59
     2d8:	80 62       	ori	r24, 0x20	; 32
     2da:	8b bf       	out	0x3b, r24	; 59
}
     2dc:	08 95       	ret

000002de <CalcError>:

void CalcError()								//calculates the current error
{				
     2de:	2f 92       	push	r2
     2e0:	3f 92       	push	r3
     2e2:	4f 92       	push	r4
     2e4:	5f 92       	push	r5
     2e6:	6f 92       	push	r6
     2e8:	7f 92       	push	r7
     2ea:	8f 92       	push	r8
     2ec:	9f 92       	push	r9
     2ee:	af 92       	push	r10
     2f0:	bf 92       	push	r11
     2f2:	cf 92       	push	r12
     2f4:	df 92       	push	r13
     2f6:	ef 92       	push	r14
     2f8:	ff 92       	push	r15
     2fa:	0f 93       	push	r16
     2fc:	1f 93       	push	r17
     2fe:	df 93       	push	r29
     300:	cf 93       	push	r28
     302:	00 d0       	rcall	.+0      	; 0x304 <CalcError+0x26>
     304:	00 d0       	rcall	.+0      	; 0x306 <CalcError+0x28>
     306:	cd b7       	in	r28, 0x3d	; 61
     308:	de b7       	in	r29, 0x3e	; 62
	s1 = 1;
     30a:	81 e0       	ldi	r24, 0x01	; 1
     30c:	90 e0       	ldi	r25, 0x00	; 0
     30e:	90 93 55 02 	sts	0x0255, r25
     312:	80 93 54 02 	sts	0x0254, r24
	s2 = 1;
     316:	90 93 63 02 	sts	0x0263, r25
     31a:	80 93 62 02 	sts	0x0262, r24
	s3 = 1;
     31e:	90 93 6b 02 	sts	0x026B, r25
     322:	80 93 6a 02 	sts	0x026A, r24
	s4 = 1;
     326:	90 93 57 02 	sts	0x0257, r25
     32a:	80 93 56 02 	sts	0x0256, r24
	s5 = 1;
     32e:	90 93 61 02 	sts	0x0261, r25
     332:	80 93 60 02 	sts	0x0260, r24
	s6 = 1;	
     336:	90 93 53 02 	sts	0x0253, r25
     33a:	80 93 52 02 	sts	0x0252, r24
	s7 = 1; 
     33e:	90 93 6d 02 	sts	0x026D, r25
     342:	80 93 6c 02 	sts	0x026C, r24
	s8 = 1;
     346:	90 93 59 02 	sts	0x0259, r25
     34a:	80 93 58 02 	sts	0x0258, r24
	
	if(bit_is_clear(PINA, PA7))		
     34e:	cf 99       	sbic	0x19, 7	; 25
     350:	07 c0       	rjmp	.+14     	; 0x360 <CalcError+0x82>
	{
		lastreading = 'l';
     352:	8c e6       	ldi	r24, 0x6C	; 108
     354:	80 93 31 01 	sts	0x0131, r24
		s1 = 0;	
     358:	10 92 55 02 	sts	0x0255, r1
     35c:	10 92 54 02 	sts	0x0254, r1
	}
	if(bit_is_clear(PINA, PA6))	
     360:	ce 99       	sbic	0x19, 6	; 25
     362:	04 c0       	rjmp	.+8      	; 0x36c <CalcError+0x8e>
		s2 = 0;
     364:	10 92 63 02 	sts	0x0263, r1
     368:	10 92 62 02 	sts	0x0262, r1
	if(bit_is_clear(PINA, PA5))	
     36c:	cd 99       	sbic	0x19, 5	; 25
     36e:	04 c0       	rjmp	.+8      	; 0x378 <CalcError+0x9a>
		s3 = 0;	
     370:	10 92 6b 02 	sts	0x026B, r1
     374:	10 92 6a 02 	sts	0x026A, r1
	if(bit_is_clear(PINA, PA4))		
     378:	cc 99       	sbic	0x19, 4	; 25
     37a:	04 c0       	rjmp	.+8      	; 0x384 <CalcError+0xa6>
		s4 = 0;		
     37c:	10 92 57 02 	sts	0x0257, r1
     380:	10 92 56 02 	sts	0x0256, r1
	if(bit_is_clear(PINA, PA3))
     384:	cb 99       	sbic	0x19, 3	; 25
     386:	04 c0       	rjmp	.+8      	; 0x390 <CalcError+0xb2>
		s5 = 0;		
     388:	10 92 61 02 	sts	0x0261, r1
     38c:	10 92 60 02 	sts	0x0260, r1
	if(bit_is_clear(PINA, PA2))		
     390:	ca 99       	sbic	0x19, 2	; 25
     392:	04 c0       	rjmp	.+8      	; 0x39c <CalcError+0xbe>
		s6 = 0;				
     394:	10 92 53 02 	sts	0x0253, r1
     398:	10 92 52 02 	sts	0x0252, r1
	if(bit_is_clear(PINA, PA1))		
     39c:	c9 99       	sbic	0x19, 1	; 25
     39e:	04 c0       	rjmp	.+8      	; 0x3a8 <CalcError+0xca>
		s7 = 0;	
     3a0:	10 92 6d 02 	sts	0x026D, r1
     3a4:	10 92 6c 02 	sts	0x026C, r1
	if(bit_is_clear(PINA, PA0))
     3a8:	c8 99       	sbic	0x19, 0	; 25
     3aa:	07 c0       	rjmp	.+14     	; 0x3ba <CalcError+0xdc>
	{
		lastreading = 'r';
     3ac:	82 e7       	ldi	r24, 0x72	; 114
     3ae:	80 93 31 01 	sts	0x0131, r24
		s8 = 0;	
     3b2:	10 92 59 02 	sts	0x0259, r1
     3b6:	10 92 58 02 	sts	0x0258, r1
	}		
	
	perror = error;
     3ba:	80 91 44 02 	lds	r24, 0x0244
     3be:	90 91 45 02 	lds	r25, 0x0245
     3c2:	a0 91 46 02 	lds	r26, 0x0246
     3c6:	b0 91 47 02 	lds	r27, 0x0247
     3ca:	80 93 48 02 	sts	0x0248, r24
     3ce:	90 93 49 02 	sts	0x0249, r25
     3d2:	a0 93 4a 02 	sts	0x024A, r26
     3d6:	b0 93 4b 02 	sts	0x024B, r27
	
	//the following statements calculate the error
	
	error = (s1 * 1) + (s2 * 2) + (s3 * 3) + (s4 * 4) + (s5 * 5) + (s6 * 6) +(s7 * 7) + (s8*8);
     3da:	80 91 54 02 	lds	r24, 0x0254
     3de:	90 91 55 02 	lds	r25, 0x0255
     3e2:	9a 83       	std	Y+2, r25	; 0x02
     3e4:	89 83       	std	Y+1, r24	; 0x01
     3e6:	e0 90 6a 02 	lds	r14, 0x026A
     3ea:	f0 90 6b 02 	lds	r15, 0x026B
     3ee:	20 90 62 02 	lds	r2, 0x0262
     3f2:	30 90 63 02 	lds	r3, 0x0263
     3f6:	80 90 60 02 	lds	r8, 0x0260
     3fa:	90 90 61 02 	lds	r9, 0x0261
     3fe:	00 91 56 02 	lds	r16, 0x0256
     402:	10 91 57 02 	lds	r17, 0x0257
     406:	60 90 6c 02 	lds	r6, 0x026C
     40a:	70 90 6d 02 	lds	r7, 0x026D
     40e:	40 90 52 02 	lds	r4, 0x0252
     412:	50 90 53 02 	lds	r5, 0x0253
     416:	e0 91 58 02 	lds	r30, 0x0258
     41a:	f0 91 59 02 	lds	r31, 0x0259
     41e:	fc 83       	std	Y+4, r31	; 0x04
     420:	eb 83       	std	Y+3, r30	; 0x03
	error = (error)/(s1+s2+s3+s4+s5+s6+s7+s8);	
	error = error - 4.5;
     422:	b7 01       	movw	r22, r14
     424:	66 0f       	add	r22, r22
     426:	77 1f       	adc	r23, r23
     428:	6e 0d       	add	r22, r14
     42a:	7f 1d       	adc	r23, r15
     42c:	91 01       	movw	r18, r2
     42e:	22 0f       	add	r18, r18
     430:	33 1f       	adc	r19, r19
     432:	62 0f       	add	r22, r18
     434:	73 1f       	adc	r23, r19
     436:	68 0f       	add	r22, r24
     438:	79 1f       	adc	r23, r25
     43a:	94 01       	movw	r18, r8
     43c:	22 0f       	add	r18, r18
     43e:	33 1f       	adc	r19, r19
     440:	22 0f       	add	r18, r18
     442:	33 1f       	adc	r19, r19
     444:	28 0d       	add	r18, r8
     446:	39 1d       	adc	r19, r9
     448:	62 0f       	add	r22, r18
     44a:	73 1f       	adc	r23, r19
     44c:	98 01       	movw	r18, r16
     44e:	22 0f       	add	r18, r18
     450:	33 1f       	adc	r19, r19
     452:	22 0f       	add	r18, r18
     454:	33 1f       	adc	r19, r19
     456:	62 0f       	add	r22, r18
     458:	73 1f       	adc	r23, r19
     45a:	93 01       	movw	r18, r6
     45c:	53 e0       	ldi	r21, 0x03	; 3
     45e:	22 0f       	add	r18, r18
     460:	33 1f       	adc	r19, r19
     462:	5a 95       	dec	r21
     464:	e1 f7       	brne	.-8      	; 0x45e <CalcError+0x180>
     466:	26 19       	sub	r18, r6
     468:	37 09       	sbc	r19, r7
     46a:	62 0f       	add	r22, r18
     46c:	73 1f       	adc	r23, r19
     46e:	92 01       	movw	r18, r4
     470:	22 0f       	add	r18, r18
     472:	33 1f       	adc	r19, r19
     474:	24 0d       	add	r18, r4
     476:	35 1d       	adc	r19, r5
     478:	22 0f       	add	r18, r18
     47a:	33 1f       	adc	r19, r19
     47c:	62 0f       	add	r22, r18
     47e:	73 1f       	adc	r23, r19
     480:	9f 01       	movw	r18, r30
     482:	83 e0       	ldi	r24, 0x03	; 3
     484:	22 0f       	add	r18, r18
     486:	33 1f       	adc	r19, r19
     488:	8a 95       	dec	r24
     48a:	e1 f7       	brne	.-8      	; 0x484 <__stack+0x25>
     48c:	62 0f       	add	r22, r18
     48e:	73 1f       	adc	r23, r19
     490:	80 e0       	ldi	r24, 0x00	; 0
     492:	90 e0       	ldi	r25, 0x00	; 0
     494:	0e 94 24 0d 	call	0x1a48	; 0x1a48 <__floatunsisf>
     498:	5b 01       	movw	r10, r22
     49a:	6c 01       	movw	r12, r24
     49c:	89 81       	ldd	r24, Y+1	; 0x01
     49e:	9a 81       	ldd	r25, Y+2	; 0x02
     4a0:	e8 0e       	add	r14, r24
     4a2:	f9 1e       	adc	r15, r25
     4a4:	e2 0c       	add	r14, r2
     4a6:	f3 1c       	adc	r15, r3
     4a8:	e8 0c       	add	r14, r8
     4aa:	f9 1c       	adc	r15, r9
     4ac:	e0 0e       	add	r14, r16
     4ae:	f1 1e       	adc	r15, r17
     4b0:	e6 0c       	add	r14, r6
     4b2:	f7 1c       	adc	r15, r7
     4b4:	e4 0c       	add	r14, r4
     4b6:	f5 1c       	adc	r15, r5
     4b8:	eb 81       	ldd	r30, Y+3	; 0x03
     4ba:	fc 81       	ldd	r31, Y+4	; 0x04
     4bc:	ee 0e       	add	r14, r30
     4be:	ff 1e       	adc	r15, r31
     4c0:	00 e0       	ldi	r16, 0x00	; 0
     4c2:	10 e0       	ldi	r17, 0x00	; 0
     4c4:	c8 01       	movw	r24, r16
     4c6:	b7 01       	movw	r22, r14
     4c8:	0e 94 24 0d 	call	0x1a48	; 0x1a48 <__floatunsisf>
     4cc:	9b 01       	movw	r18, r22
     4ce:	ac 01       	movw	r20, r24
     4d0:	c6 01       	movw	r24, r12
     4d2:	b5 01       	movw	r22, r10
     4d4:	0e 94 06 0b 	call	0x160c	; 0x160c <__divsf3>
     4d8:	20 e0       	ldi	r18, 0x00	; 0
     4da:	30 e0       	ldi	r19, 0x00	; 0
     4dc:	40 e9       	ldi	r20, 0x90	; 144
     4de:	50 e4       	ldi	r21, 0x40	; 64
     4e0:	0e 94 ae 09 	call	0x135c	; 0x135c <__subsf3>
     4e4:	60 93 44 02 	sts	0x0244, r22
     4e8:	70 93 45 02 	sts	0x0245, r23
     4ec:	80 93 46 02 	sts	0x0246, r24
     4f0:	90 93 47 02 	sts	0x0247, r25
}
     4f4:	0f 90       	pop	r0
     4f6:	0f 90       	pop	r0
     4f8:	0f 90       	pop	r0
     4fa:	0f 90       	pop	r0
     4fc:	cf 91       	pop	r28
     4fe:	df 91       	pop	r29
     500:	1f 91       	pop	r17
     502:	0f 91       	pop	r16
     504:	ff 90       	pop	r15
     506:	ef 90       	pop	r14
     508:	df 90       	pop	r13
     50a:	cf 90       	pop	r12
     50c:	bf 90       	pop	r11
     50e:	af 90       	pop	r10
     510:	9f 90       	pop	r9
     512:	8f 90       	pop	r8
     514:	7f 90       	pop	r7
     516:	6f 90       	pop	r6
     518:	5f 90       	pop	r5
     51a:	4f 90       	pop	r4
     51c:	3f 90       	pop	r3
     51e:	2f 90       	pop	r2
     520:	08 95       	ret

00000522 <LeftMB>:

void LeftMB(void)	
{
	sbi(PORTD, PD5);
     522:	95 9a       	sbi	0x12, 5	; 18
	cbi(PORTD, PD6);
     524:	96 98       	cbi	0x12, 6	; 18
	sbi(PORTD, PD7);
     526:	97 9a       	sbi	0x12, 7	; 18
}
     528:	08 95       	ret

0000052a <RightMF>:

void RightMF(void)
{
	sbi(PORTD, PD4);
     52a:	94 9a       	sbi	0x12, 4	; 18
	cbi(PORTD, PD0);
     52c:	90 98       	cbi	0x12, 0	; 18
	sbi(PORTD, PD1);
     52e:	91 9a       	sbi	0x12, 1	; 18
}
     530:	08 95       	ret

00000532 <LeftMF>:
void LeftMF(void)
{
	sbi(PORTD, PD5);
     532:	95 9a       	sbi	0x12, 5	; 18
	sbi(PORTD, PD6);
     534:	96 9a       	sbi	0x12, 6	; 18
	cbi(PORTD, PD7);
     536:	97 98       	cbi	0x12, 7	; 18
}
     538:	08 95       	ret

0000053a <RightMB>:

void RightMB(void)
{
	sbi(PORTD, PD4);
     53a:	94 9a       	sbi	0x12, 4	; 18
	sbi(PORTD, PD0);
     53c:	90 9a       	sbi	0x12, 0	; 18
	cbi(PORTD, PD1);
     53e:	91 98       	cbi	0x12, 1	; 18
}
     540:	08 95       	ret

00000542 <LeftMS>:
void LeftMS(void)
{
	sbi(PORTD, PD5);
     542:	95 9a       	sbi	0x12, 5	; 18
	sbi(PORTD, PD6);
     544:	96 9a       	sbi	0x12, 6	; 18
	sbi(PORTD, PD7);
     546:	97 9a       	sbi	0x12, 7	; 18
}
     548:	08 95       	ret

0000054a <RightMS>:

void RightMS(void)
{
	sbi(PORTD, PD4);
     54a:	94 9a       	sbi	0x12, 4	; 18
	sbi(PORTD, PD0);
     54c:	90 9a       	sbi	0x12, 0	; 18
	sbi(PORTD, PD1);
     54e:	91 9a       	sbi	0x12, 1	; 18
}
     550:	08 95       	ret

00000552 <delay>:

void delay(float n)
{
     552:	cf 92       	push	r12
     554:	df 92       	push	r13
     556:	ef 92       	push	r14
     558:	ff 92       	push	r15
     55a:	0f 93       	push	r16
     55c:	1f 93       	push	r17
     55e:	cf 93       	push	r28
     560:	df 93       	push	r29
	n *= 10;
     562:	20 e0       	ldi	r18, 0x00	; 0
     564:	30 e0       	ldi	r19, 0x00	; 0
     566:	40 e2       	ldi	r20, 0x20	; 32
     568:	51 e4       	ldi	r21, 0x41	; 65
     56a:	0e 94 0c 0a 	call	0x1418	; 0x1418 <__mulsf3>
     56e:	7b 01       	movw	r14, r22
     570:	8c 01       	movw	r16, r24
     572:	c0 e0       	ldi	r28, 0x00	; 0
     574:	d0 e0       	ldi	r29, 0x00	; 0
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     576:	68 ea       	ldi	r22, 0xA8	; 168
     578:	c6 2e       	mov	r12, r22
     57a:	61 e6       	ldi	r22, 0x61	; 97
     57c:	d6 2e       	mov	r13, r22
     57e:	04 c0       	rjmp	.+8      	; 0x588 <delay+0x36>
     580:	c6 01       	movw	r24, r12
     582:	01 97       	sbiw	r24, 0x01	; 1
     584:	f1 f7       	brne	.-4      	; 0x582 <delay+0x30>
	for(int i = 0; i < n; i++)
     586:	21 96       	adiw	r28, 0x01	; 1
     588:	be 01       	movw	r22, r28
     58a:	88 27       	eor	r24, r24
     58c:	77 fd       	sbrc	r23, 7
     58e:	80 95       	com	r24
     590:	98 2f       	mov	r25, r24
     592:	0e 94 72 0c 	call	0x18e4	; 0x18e4 <__floatsisf>
     596:	a8 01       	movw	r20, r16
     598:	97 01       	movw	r18, r14
     59a:	0e 94 42 0c 	call	0x1884	; 0x1884 <__ltsf2>
     59e:	87 fd       	sbrc	r24, 7
     5a0:	ef cf       	rjmp	.-34     	; 0x580 <delay+0x2e>
		_delay_ms(F_CPU/10000);
}
     5a2:	df 91       	pop	r29
     5a4:	cf 91       	pop	r28
     5a6:	1f 91       	pop	r17
     5a8:	0f 91       	pop	r16
     5aa:	ff 90       	pop	r15
     5ac:	ef 90       	pop	r14
     5ae:	df 90       	pop	r13
     5b0:	cf 90       	pop	r12
     5b2:	08 95       	ret

000005b4 <BacklightOn>:

void BacklightOn(void)
{
	sbi(PORTC, PC7);
     5b4:	af 9a       	sbi	0x15, 7	; 21
}
     5b6:	08 95       	ret

000005b8 <BacklightOff>:

void BacklightOff(void)
{
	cbi(PORTC, PC7);
     5b8:	af 98       	cbi	0x15, 7	; 21
     5ba:	08 95       	ret

000005bc <DispAdjustmentMenu>:
}

void DispAdjustmentMenu(void)
{		
	
	LCDGotoXY(0, 1);
     5bc:	80 e0       	ldi	r24, 0x00	; 0
     5be:	61 e0       	ldi	r22, 0x01	; 1
     5c0:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
	LCDWriteInt(s1, 1);	
     5c4:	80 91 54 02 	lds	r24, 0x0254
     5c8:	90 91 55 02 	lds	r25, 0x0255
     5cc:	61 e0       	ldi	r22, 0x01	; 1
     5ce:	70 e0       	ldi	r23, 0x00	; 0
     5d0:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDWriteInt>
	
	LCDGotoXY(2, 1);
     5d4:	82 e0       	ldi	r24, 0x02	; 2
     5d6:	61 e0       	ldi	r22, 0x01	; 1
     5d8:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
	LCDWriteInt(s2, 1);
     5dc:	80 91 62 02 	lds	r24, 0x0262
     5e0:	90 91 63 02 	lds	r25, 0x0263
     5e4:	61 e0       	ldi	r22, 0x01	; 1
     5e6:	70 e0       	ldi	r23, 0x00	; 0
     5e8:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDWriteInt>
	
	LCDGotoXY(4, 1);
     5ec:	84 e0       	ldi	r24, 0x04	; 4
     5ee:	61 e0       	ldi	r22, 0x01	; 1
     5f0:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
	LCDWriteInt(s3, 1);
     5f4:	80 91 6a 02 	lds	r24, 0x026A
     5f8:	90 91 6b 02 	lds	r25, 0x026B
     5fc:	61 e0       	ldi	r22, 0x01	; 1
     5fe:	70 e0       	ldi	r23, 0x00	; 0
     600:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDWriteInt>

	LCDGotoXY(6, 1);
     604:	86 e0       	ldi	r24, 0x06	; 6
     606:	61 e0       	ldi	r22, 0x01	; 1
     608:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
	LCDWriteInt(s4, 1);
     60c:	80 91 56 02 	lds	r24, 0x0256
     610:	90 91 57 02 	lds	r25, 0x0257
     614:	61 e0       	ldi	r22, 0x01	; 1
     616:	70 e0       	ldi	r23, 0x00	; 0
     618:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDWriteInt>
	
	LCDGotoXY(9,1);
     61c:	89 e0       	ldi	r24, 0x09	; 9
     61e:	61 e0       	ldi	r22, 0x01	; 1
     620:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
	LCDWriteInt(s5, 1);
     624:	80 91 60 02 	lds	r24, 0x0260
     628:	90 91 61 02 	lds	r25, 0x0261
     62c:	61 e0       	ldi	r22, 0x01	; 1
     62e:	70 e0       	ldi	r23, 0x00	; 0
     630:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDWriteInt>

	LCDGotoXY(11, 1);
     634:	8b e0       	ldi	r24, 0x0B	; 11
     636:	61 e0       	ldi	r22, 0x01	; 1
     638:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
	LCDWriteInt(s6, 1);	
     63c:	80 91 52 02 	lds	r24, 0x0252
     640:	90 91 53 02 	lds	r25, 0x0253
     644:	61 e0       	ldi	r22, 0x01	; 1
     646:	70 e0       	ldi	r23, 0x00	; 0
     648:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDWriteInt>

	LCDGotoXY(13, 1);
     64c:	8d e0       	ldi	r24, 0x0D	; 13
     64e:	61 e0       	ldi	r22, 0x01	; 1
     650:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
	LCDWriteInt(s7, 1);	
     654:	80 91 6c 02 	lds	r24, 0x026C
     658:	90 91 6d 02 	lds	r25, 0x026D
     65c:	61 e0       	ldi	r22, 0x01	; 1
     65e:	70 e0       	ldi	r23, 0x00	; 0
     660:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDWriteInt>
	
	LCDGotoXY(15, 1);
     664:	8f e0       	ldi	r24, 0x0F	; 15
     666:	61 e0       	ldi	r22, 0x01	; 1
     668:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
	LCDWriteInt(s8, 1);			
     66c:	80 91 58 02 	lds	r24, 0x0258
     670:	90 91 59 02 	lds	r25, 0x0259
     674:	61 e0       	ldi	r22, 0x01	; 1
     676:	70 e0       	ldi	r23, 0x00	; 0
     678:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDWriteInt>
	
		
}
     67c:	08 95       	ret

0000067e <DispMenu>:
		
}

void DispMenu(int m)
{
	switch(m)
     67e:	8d 32       	cpi	r24, 0x2D	; 45
     680:	91 05       	cpc	r25, r1
     682:	09 f4       	brne	.+2      	; 0x686 <DispMenu+0x8>
     684:	2a c1       	rjmp	.+596    	; 0x8da <DispMenu+0x25c>
     686:	8e 32       	cpi	r24, 0x2E	; 46
     688:	91 05       	cpc	r25, r1
     68a:	f4 f4       	brge	.+60     	; 0x6c8 <DispMenu+0x4a>
     68c:	89 31       	cpi	r24, 0x19	; 25
     68e:	91 05       	cpc	r25, r1
     690:	09 f4       	brne	.+2      	; 0x694 <DispMenu+0x16>
     692:	ef c0       	rjmp	.+478    	; 0x872 <DispMenu+0x1f4>
     694:	8a 31       	cpi	r24, 0x1A	; 26
     696:	91 05       	cpc	r25, r1
     698:	5c f4       	brge	.+22     	; 0x6b0 <DispMenu+0x32>
     69a:	8a 30       	cpi	r24, 0x0A	; 10
     69c:	91 05       	cpc	r25, r1
     69e:	09 f4       	brne	.+2      	; 0x6a2 <DispMenu+0x24>
     6a0:	46 c0       	rjmp	.+140    	; 0x72e <DispMenu+0xb0>
     6a2:	84 31       	cpi	r24, 0x14	; 20
     6a4:	91 05       	cpc	r25, r1
     6a6:	09 f4       	brne	.+2      	; 0x6aa <DispMenu+0x2c>
     6a8:	5d c0       	rjmp	.+186    	; 0x764 <DispMenu+0xe6>
     6aa:	89 2b       	or	r24, r25
     6ac:	69 f1       	breq	.+90     	; 0x708 <DispMenu+0x8a>
     6ae:	08 95       	ret
     6b0:	83 32       	cpi	r24, 0x23	; 35
     6b2:	91 05       	cpc	r25, r1
     6b4:	09 f4       	brne	.+2      	; 0x6b8 <DispMenu+0x3a>
     6b6:	f6 c0       	rjmp	.+492    	; 0x8a4 <DispMenu+0x226>
     6b8:	88 32       	cpi	r24, 0x28	; 40
     6ba:	91 05       	cpc	r25, r1
     6bc:	09 f4       	brne	.+2      	; 0x6c0 <DispMenu+0x42>
     6be:	78 c0       	rjmp	.+240    	; 0x7b0 <DispMenu+0x132>
     6c0:	4e 97       	sbiw	r24, 0x1e	; 30
     6c2:	09 f0       	breq	.+2      	; 0x6c6 <DispMenu+0x48>
     6c4:	67 c1       	rjmp	.+718    	; 0x994 <DispMenu+0x316>
     6c6:	61 c0       	rjmp	.+194    	; 0x78a <DispMenu+0x10c>
     6c8:	81 34       	cpi	r24, 0x41	; 65
     6ca:	91 05       	cpc	r25, r1
     6cc:	09 f4       	brne	.+2      	; 0x6d0 <DispMenu+0x52>
     6ce:	37 c1       	rjmp	.+622    	; 0x93e <DispMenu+0x2c0>
     6d0:	82 34       	cpi	r24, 0x42	; 66
     6d2:	91 05       	cpc	r25, r1
     6d4:	64 f4       	brge	.+24     	; 0x6ee <DispMenu+0x70>
     6d6:	87 33       	cpi	r24, 0x37	; 55
     6d8:	91 05       	cpc	r25, r1
     6da:	09 f4       	brne	.+2      	; 0x6de <DispMenu+0x60>
     6dc:	17 c1       	rjmp	.+558    	; 0x90c <DispMenu+0x28e>
     6de:	8c 33       	cpi	r24, 0x3C	; 60
     6e0:	91 05       	cpc	r25, r1
     6e2:	09 f4       	brne	.+2      	; 0x6e6 <DispMenu+0x68>
     6e4:	8b c0       	rjmp	.+278    	; 0x7fc <DispMenu+0x17e>
     6e6:	c2 97       	sbiw	r24, 0x32	; 50
     6e8:	09 f0       	breq	.+2      	; 0x6ec <DispMenu+0x6e>
     6ea:	54 c1       	rjmp	.+680    	; 0x994 <DispMenu+0x316>
     6ec:	74 c0       	rjmp	.+232    	; 0x7d6 <DispMenu+0x158>
     6ee:	8b 34       	cpi	r24, 0x4B	; 75
     6f0:	91 05       	cpc	r25, r1
     6f2:	09 f4       	brne	.+2      	; 0x6f6 <DispMenu+0x78>
     6f4:	41 c1       	rjmp	.+642    	; 0x978 <DispMenu+0x2fa>
     6f6:	80 35       	cpi	r24, 0x50	; 80
     6f8:	91 05       	cpc	r25, r1
     6fa:	09 f4       	brne	.+2      	; 0x6fe <DispMenu+0x80>
     6fc:	a5 c0       	rjmp	.+330    	; 0x848 <DispMenu+0x1ca>
     6fe:	86 34       	cpi	r24, 0x46	; 70
     700:	91 05       	cpc	r25, r1
     702:	09 f0       	breq	.+2      	; 0x706 <DispMenu+0x88>
     704:	47 c1       	rjmp	.+654    	; 0x994 <DispMenu+0x316>
     706:	8d c0       	rjmp	.+282    	; 0x822 <DispMenu+0x1a4>
	{
		case 0:
			
			LCDClear();
     708:	81 e0       	ldi	r24, 0x01	; 1
     70a:	60 e0       	ldi	r22, 0x00	; 0
     70c:	0e 94 73 00 	call	0xe6	; 0xe6 <LCDByte>
			LCDGotoXY(0, 0);
     710:	80 e0       	ldi	r24, 0x00	; 0
     712:	60 e0       	ldi	r22, 0x00	; 0
     714:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
			LCDWriteString("Lord ofthe Lines");
     718:	80 e6       	ldi	r24, 0x60	; 96
     71a:	90 e0       	ldi	r25, 0x00	; 0
     71c:	0e 94 c6 00 	call	0x18c	; 0x18c <LCDWriteString>
			
			LCDGotoXY(0 ,1);
     720:	80 e0       	ldi	r24, 0x00	; 0
     722:	61 e0       	ldi	r22, 0x01	; 1
     724:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
			LCDWriteString("Start");	
     728:	81 e7       	ldi	r24, 0x71	; 113
     72a:	90 e0       	ldi	r25, 0x00	; 0
     72c:	12 c0       	rjmp	.+36     	; 0x752 <DispMenu+0xd4>
			LCDGotoXY(8 ,1);
			LCDWriteString("Settings");
			break;
			
		case 10:
			LCDClear();
     72e:	81 e0       	ldi	r24, 0x01	; 1
     730:	60 e0       	ldi	r22, 0x00	; 0
     732:	0e 94 73 00 	call	0xe6	; 0xe6 <LCDByte>
			LCDGotoXY(0, 0);
     736:	80 e0       	ldi	r24, 0x00	; 0
     738:	60 e0       	ldi	r22, 0x00	; 0
     73a:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
			LCDWriteString("Lord ofthe Lines");
     73e:	80 e6       	ldi	r24, 0x60	; 96
     740:	90 e0       	ldi	r25, 0x00	; 0
     742:	0e 94 c6 00 	call	0x18c	; 0x18c <LCDWriteString>
			
			LCDGotoXY(0 ,1);
     746:	80 e0       	ldi	r24, 0x00	; 0
     748:	61 e0       	ldi	r22, 0x01	; 1
     74a:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
			LCDWriteString("Pause");	
     74e:	80 e8       	ldi	r24, 0x80	; 128
     750:	90 e0       	ldi	r25, 0x00	; 0
     752:	0e 94 c6 00 	call	0x18c	; 0x18c <LCDWriteString>
			LCDGotoXY(8 ,1);
     756:	88 e0       	ldi	r24, 0x08	; 8
     758:	61 e0       	ldi	r22, 0x01	; 1
     75a:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
			LCDWriteString("Settings");
     75e:	87 e7       	ldi	r24, 0x77	; 119
     760:	90 e0       	ldi	r25, 0x00	; 0
     762:	84 c0       	rjmp	.+264    	; 0x86c <DispMenu+0x1ee>
			break;
		
		case 20:
			LCDClear();
     764:	81 e0       	ldi	r24, 0x01	; 1
     766:	60 e0       	ldi	r22, 0x00	; 0
     768:	0e 94 73 00 	call	0xe6	; 0xe6 <LCDByte>
			LCDGotoXY(0, 0);
     76c:	80 e0       	ldi	r24, 0x00	; 0
     76e:	60 e0       	ldi	r22, 0x00	; 0
     770:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
			LCDWriteString("Settings");
     774:	87 e7       	ldi	r24, 0x77	; 119
     776:	90 e0       	ldi	r25, 0x00	; 0
     778:	0e 94 c6 00 	call	0x18c	; 0x18c <LCDWriteString>
			
			LCDGotoXY(0, 1);
     77c:	80 e0       	ldi	r24, 0x00	; 0
     77e:	61 e0       	ldi	r22, 0x01	; 1
     780:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
			LCDWriteString("1. Max Speed");
     784:	86 e8       	ldi	r24, 0x86	; 134
     786:	90 e0       	ldi	r25, 0x00	; 0
     788:	71 c0       	rjmp	.+226    	; 0x86c <DispMenu+0x1ee>
			break;		
			
		case 30:
			LCDClear();
     78a:	81 e0       	ldi	r24, 0x01	; 1
     78c:	60 e0       	ldi	r22, 0x00	; 0
     78e:	0e 94 73 00 	call	0xe6	; 0xe6 <LCDByte>
			LCDGotoXY(0, 0);
     792:	80 e0       	ldi	r24, 0x00	; 0
     794:	60 e0       	ldi	r22, 0x00	; 0
     796:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
			LCDWriteString("Settings");
     79a:	87 e7       	ldi	r24, 0x77	; 119
     79c:	90 e0       	ldi	r25, 0x00	; 0
     79e:	0e 94 c6 00 	call	0x18c	; 0x18c <LCDWriteString>
			
			LCDGotoXY(0, 1);
     7a2:	80 e0       	ldi	r24, 0x00	; 0
     7a4:	61 e0       	ldi	r22, 0x01	; 1
     7a6:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
			LCDWriteString("2. Base Speed");
     7aa:	83 e9       	ldi	r24, 0x93	; 147
     7ac:	90 e0       	ldi	r25, 0x00	; 0
     7ae:	5e c0       	rjmp	.+188    	; 0x86c <DispMenu+0x1ee>
			break;
			
		case 40:
			LCDClear();
     7b0:	81 e0       	ldi	r24, 0x01	; 1
     7b2:	60 e0       	ldi	r22, 0x00	; 0
     7b4:	0e 94 73 00 	call	0xe6	; 0xe6 <LCDByte>
			LCDGotoXY(0, 0);
     7b8:	80 e0       	ldi	r24, 0x00	; 0
     7ba:	60 e0       	ldi	r22, 0x00	; 0
     7bc:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
			LCDWriteString("Settings");
     7c0:	87 e7       	ldi	r24, 0x77	; 119
     7c2:	90 e0       	ldi	r25, 0x00	; 0
     7c4:	0e 94 c6 00 	call	0x18c	; 0x18c <LCDWriteString>
			
			LCDGotoXY(0, 1);
     7c8:	80 e0       	ldi	r24, 0x00	; 0
     7ca:	61 e0       	ldi	r22, 0x01	; 1
     7cc:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
			LCDWriteString("3. Propotional");
     7d0:	81 ea       	ldi	r24, 0xA1	; 161
     7d2:	90 e0       	ldi	r25, 0x00	; 0
     7d4:	4b c0       	rjmp	.+150    	; 0x86c <DispMenu+0x1ee>
			break;
		
		case 50:
			LCDClear();
     7d6:	81 e0       	ldi	r24, 0x01	; 1
     7d8:	60 e0       	ldi	r22, 0x00	; 0
     7da:	0e 94 73 00 	call	0xe6	; 0xe6 <LCDByte>
			LCDGotoXY(0, 0);
     7de:	80 e0       	ldi	r24, 0x00	; 0
     7e0:	60 e0       	ldi	r22, 0x00	; 0
     7e2:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
			LCDWriteString("Settings");
     7e6:	87 e7       	ldi	r24, 0x77	; 119
     7e8:	90 e0       	ldi	r25, 0x00	; 0
     7ea:	0e 94 c6 00 	call	0x18c	; 0x18c <LCDWriteString>
			
			LCDGotoXY(0, 1);
     7ee:	80 e0       	ldi	r24, 0x00	; 0
     7f0:	61 e0       	ldi	r22, 0x01	; 1
     7f2:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
			LCDWriteString("4. Integral");
     7f6:	80 eb       	ldi	r24, 0xB0	; 176
     7f8:	90 e0       	ldi	r25, 0x00	; 0
     7fa:	38 c0       	rjmp	.+112    	; 0x86c <DispMenu+0x1ee>
			break;
			
		case 60:
			LCDClear();
     7fc:	81 e0       	ldi	r24, 0x01	; 1
     7fe:	60 e0       	ldi	r22, 0x00	; 0
     800:	0e 94 73 00 	call	0xe6	; 0xe6 <LCDByte>
			LCDGotoXY(0, 0);
     804:	80 e0       	ldi	r24, 0x00	; 0
     806:	60 e0       	ldi	r22, 0x00	; 0
     808:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
			LCDWriteString("Settings");
     80c:	87 e7       	ldi	r24, 0x77	; 119
     80e:	90 e0       	ldi	r25, 0x00	; 0
     810:	0e 94 c6 00 	call	0x18c	; 0x18c <LCDWriteString>
			
			LCDGotoXY(0, 1);
     814:	80 e0       	ldi	r24, 0x00	; 0
     816:	61 e0       	ldi	r22, 0x01	; 1
     818:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
			LCDWriteString("5. Derivative");
     81c:	8c eb       	ldi	r24, 0xBC	; 188
     81e:	90 e0       	ldi	r25, 0x00	; 0
     820:	25 c0       	rjmp	.+74     	; 0x86c <DispMenu+0x1ee>
			break;
		
		case 70:
			LCDClear();
     822:	81 e0       	ldi	r24, 0x01	; 1
     824:	60 e0       	ldi	r22, 0x00	; 0
     826:	0e 94 73 00 	call	0xe6	; 0xe6 <LCDByte>
			LCDGotoXY(0, 0);
     82a:	80 e0       	ldi	r24, 0x00	; 0
     82c:	60 e0       	ldi	r22, 0x00	; 0
     82e:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
			LCDWriteString("Settings");
     832:	87 e7       	ldi	r24, 0x77	; 119
     834:	90 e0       	ldi	r25, 0x00	; 0
     836:	0e 94 c6 00 	call	0x18c	; 0x18c <LCDWriteString>
			
			LCDGotoXY(0, 1);
     83a:	80 e0       	ldi	r24, 0x00	; 0
     83c:	61 e0       	ldi	r22, 0x01	; 1
     83e:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
			LCDWriteString("7. Adjust Sensor");
     842:	8a ec       	ldi	r24, 0xCA	; 202
     844:	90 e0       	ldi	r25, 0x00	; 0
     846:	12 c0       	rjmp	.+36     	; 0x86c <DispMenu+0x1ee>
			break;
		
		case 80:
			LCDClear();
     848:	81 e0       	ldi	r24, 0x01	; 1
     84a:	60 e0       	ldi	r22, 0x00	; 0
     84c:	0e 94 73 00 	call	0xe6	; 0xe6 <LCDByte>
			LCDGotoXY(0, 0);
     850:	80 e0       	ldi	r24, 0x00	; 0
     852:	60 e0       	ldi	r22, 0x00	; 0
     854:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
			LCDWriteString("Settings");
     858:	87 e7       	ldi	r24, 0x77	; 119
     85a:	90 e0       	ldi	r25, 0x00	; 0
     85c:	0e 94 c6 00 	call	0x18c	; 0x18c <LCDWriteString>
			
			LCDGotoXY(0, 1);
     860:	80 e0       	ldi	r24, 0x00	; 0
     862:	61 e0       	ldi	r22, 0x01	; 1
     864:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
			LCDWriteString("6. Done");
     868:	8b ed       	ldi	r24, 0xDB	; 219
     86a:	90 e0       	ldi	r25, 0x00	; 0
     86c:	0e 94 c6 00 	call	0x18c	; 0x18c <LCDWriteString>
     870:	08 95       	ret
			break;
		
		case 25:
			LCDClear();
     872:	81 e0       	ldi	r24, 0x01	; 1
     874:	60 e0       	ldi	r22, 0x00	; 0
     876:	0e 94 73 00 	call	0xe6	; 0xe6 <LCDByte>
			LCDGotoXY(0, 0);
     87a:	80 e0       	ldi	r24, 0x00	; 0
     87c:	60 e0       	ldi	r22, 0x00	; 0
     87e:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
			LCDWriteString("Settings");
     882:	87 e7       	ldi	r24, 0x77	; 119
     884:	90 e0       	ldi	r25, 0x00	; 0
     886:	0e 94 c6 00 	call	0x18c	; 0x18c <LCDWriteString>
			
			LCDGotoXY(0, 1);
     88a:	80 e0       	ldi	r24, 0x00	; 0
     88c:	61 e0       	ldi	r22, 0x01	; 1
     88e:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
			LCDWriteString("Max Speed: ");
     892:	83 ee       	ldi	r24, 0xE3	; 227
     894:	90 e0       	ldi	r25, 0x00	; 0
     896:	0e 94 c6 00 	call	0x18c	; 0x18c <LCDWriteString>
			LCDWriteInt(maxspeed, 3);
     89a:	80 91 32 01 	lds	r24, 0x0132
     89e:	90 91 33 01 	lds	r25, 0x0133
     8a2:	18 c0       	rjmp	.+48     	; 0x8d4 <DispMenu+0x256>
			break;		
			
		case 35:
			LCDClear();
     8a4:	81 e0       	ldi	r24, 0x01	; 1
     8a6:	60 e0       	ldi	r22, 0x00	; 0
     8a8:	0e 94 73 00 	call	0xe6	; 0xe6 <LCDByte>
			LCDGotoXY(0, 0);
     8ac:	80 e0       	ldi	r24, 0x00	; 0
     8ae:	60 e0       	ldi	r22, 0x00	; 0
     8b0:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
			LCDWriteString("Settings");
     8b4:	87 e7       	ldi	r24, 0x77	; 119
     8b6:	90 e0       	ldi	r25, 0x00	; 0
     8b8:	0e 94 c6 00 	call	0x18c	; 0x18c <LCDWriteString>
			
			LCDGotoXY(0, 1);
     8bc:	80 e0       	ldi	r24, 0x00	; 0
     8be:	61 e0       	ldi	r22, 0x01	; 1
     8c0:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
			LCDWriteString("Base Speed: ");
     8c4:	8f ee       	ldi	r24, 0xEF	; 239
     8c6:	90 e0       	ldi	r25, 0x00	; 0
     8c8:	0e 94 c6 00 	call	0x18c	; 0x18c <LCDWriteString>
			LCDWriteInt(basespeed, 3);
     8cc:	80 91 34 01 	lds	r24, 0x0134
     8d0:	90 91 35 01 	lds	r25, 0x0135
     8d4:	63 e0       	ldi	r22, 0x03	; 3
     8d6:	70 e0       	ldi	r23, 0x00	; 0
     8d8:	4c c0       	rjmp	.+152    	; 0x972 <DispMenu+0x2f4>
			break;
			
		case 45:
			LCDClear();
     8da:	81 e0       	ldi	r24, 0x01	; 1
     8dc:	60 e0       	ldi	r22, 0x00	; 0
     8de:	0e 94 73 00 	call	0xe6	; 0xe6 <LCDByte>
			LCDGotoXY(0, 0);
     8e2:	80 e0       	ldi	r24, 0x00	; 0
     8e4:	60 e0       	ldi	r22, 0x00	; 0
     8e6:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
			LCDWriteString("Settings");
     8ea:	87 e7       	ldi	r24, 0x77	; 119
     8ec:	90 e0       	ldi	r25, 0x00	; 0
     8ee:	0e 94 c6 00 	call	0x18c	; 0x18c <LCDWriteString>
			
			LCDGotoXY(0, 1);
     8f2:	80 e0       	ldi	r24, 0x00	; 0
     8f4:	61 e0       	ldi	r22, 0x01	; 1
     8f6:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
			LCDWriteString("Propotional: ");
     8fa:	8c ef       	ldi	r24, 0xFC	; 252
     8fc:	90 e0       	ldi	r25, 0x00	; 0
     8fe:	0e 94 c6 00 	call	0x18c	; 0x18c <LCDWriteString>
			LCDWriteInt(Kp, 2);
     902:	80 91 36 01 	lds	r24, 0x0136
     906:	90 91 37 01 	lds	r25, 0x0137
     90a:	31 c0       	rjmp	.+98     	; 0x96e <DispMenu+0x2f0>
			break;
		
		case 55:
			LCDClear();
     90c:	81 e0       	ldi	r24, 0x01	; 1
     90e:	60 e0       	ldi	r22, 0x00	; 0
     910:	0e 94 73 00 	call	0xe6	; 0xe6 <LCDByte>
			LCDGotoXY(0, 0);
     914:	80 e0       	ldi	r24, 0x00	; 0
     916:	60 e0       	ldi	r22, 0x00	; 0
     918:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
			LCDWriteString("Settings");
     91c:	87 e7       	ldi	r24, 0x77	; 119
     91e:	90 e0       	ldi	r25, 0x00	; 0
     920:	0e 94 c6 00 	call	0x18c	; 0x18c <LCDWriteString>
			
			LCDGotoXY(0, 1);
     924:	80 e0       	ldi	r24, 0x00	; 0
     926:	61 e0       	ldi	r22, 0x01	; 1
     928:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
			LCDWriteString("Integral: ");
     92c:	8a e0       	ldi	r24, 0x0A	; 10
     92e:	91 e0       	ldi	r25, 0x01	; 1
     930:	0e 94 c6 00 	call	0x18c	; 0x18c <LCDWriteString>
			LCDWriteInt(Ki, 2);
     934:	80 91 38 01 	lds	r24, 0x0138
     938:	90 91 39 01 	lds	r25, 0x0139
     93c:	18 c0       	rjmp	.+48     	; 0x96e <DispMenu+0x2f0>
			break;
			
		case 65:
			LCDClear();
     93e:	81 e0       	ldi	r24, 0x01	; 1
     940:	60 e0       	ldi	r22, 0x00	; 0
     942:	0e 94 73 00 	call	0xe6	; 0xe6 <LCDByte>
			LCDGotoXY(0, 0);
     946:	80 e0       	ldi	r24, 0x00	; 0
     948:	60 e0       	ldi	r22, 0x00	; 0
     94a:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
			LCDWriteString("Settings");
     94e:	87 e7       	ldi	r24, 0x77	; 119
     950:	90 e0       	ldi	r25, 0x00	; 0
     952:	0e 94 c6 00 	call	0x18c	; 0x18c <LCDWriteString>
			
			LCDGotoXY(0, 1);
     956:	80 e0       	ldi	r24, 0x00	; 0
     958:	61 e0       	ldi	r22, 0x01	; 1
     95a:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
			LCDWriteString("Derivative: ");
     95e:	85 e1       	ldi	r24, 0x15	; 21
     960:	91 e0       	ldi	r25, 0x01	; 1
     962:	0e 94 c6 00 	call	0x18c	; 0x18c <LCDWriteString>
			LCDWriteInt(Kd, 2);
     966:	80 91 3a 01 	lds	r24, 0x013A
     96a:	90 91 3b 01 	lds	r25, 0x013B
     96e:	62 e0       	ldi	r22, 0x02	; 2
     970:	70 e0       	ldi	r23, 0x00	; 0
     972:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDWriteInt>
     976:	08 95       	ret
			break;
		case 75:
			LCDClear();
     978:	81 e0       	ldi	r24, 0x01	; 1
     97a:	60 e0       	ldi	r22, 0x00	; 0
     97c:	0e 94 73 00 	call	0xe6	; 0xe6 <LCDByte>
			LCDGotoXY(0, 0);
     980:	80 e0       	ldi	r24, 0x00	; 0
     982:	60 e0       	ldi	r22, 0x00	; 0
     984:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
			LCDWriteString("Sensors");			
     988:	82 e2       	ldi	r24, 0x22	; 34
     98a:	91 e0       	ldi	r25, 0x01	; 1
     98c:	0e 94 c6 00 	call	0x18c	; 0x18c <LCDWriteString>
			DispAdjustmentMenu();
     990:	0e 94 de 02 	call	0x5bc	; 0x5bc <DispAdjustmentMenu>
     994:	08 95       	ret

00000996 <main>:
	}
	DispMenu(menu);
}

int main(void)
{	
     996:	2f 92       	push	r2
     998:	3f 92       	push	r3
     99a:	4f 92       	push	r4
     99c:	5f 92       	push	r5
     99e:	6f 92       	push	r6
     9a0:	7f 92       	push	r7
     9a2:	8f 92       	push	r8
     9a4:	9f 92       	push	r9
     9a6:	af 92       	push	r10
     9a8:	bf 92       	push	r11
     9aa:	cf 92       	push	r12
     9ac:	df 92       	push	r13
     9ae:	ef 92       	push	r14
     9b0:	ff 92       	push	r15
     9b2:	0f 93       	push	r16
     9b4:	1f 93       	push	r17
     9b6:	cf 93       	push	r28
     9b8:	df 93       	push	r29
	unsigned int p;
	
	//call all initializing functions
	InitPorts();
     9ba:	0e 94 3b 01 	call	0x276	; 0x276 <InitPorts>
	InitInterrupts();
     9be:	0e 94 56 01 	call	0x2ac	; 0x2ac <InitInterrupts>
	PORTA = 0;   								//enable pull up	
}
	
void InitPWM(void)								//initialize PWM				
{	
	TCCR1A = _BV(WGM10)   					    // 8 bit fast PWM
     9c2:	81 ea       	ldi	r24, 0xA1	; 161
     9c4:	8f bd       	out	0x2f, r24	; 47
		   | _BV(COM1A1)  						// set OC1A/B on compare match
		   | _BV(COM1B1);		
	TCCR1B = _BV(CS11)  	   				   // 1/8 prescale fast PWM
     9c6:	8a e0       	ldi	r24, 0x0A	; 10
     9c8:	8e bd       	out	0x2e, r24	; 46
	InitPWM();		
	InitLCD(0);								//LS_BLINK|LS_ULINE
     9ca:	80 e0       	ldi	r24, 0x00	; 0
     9cc:	0e 94 9b 00 	call	0x136	; 0x136 <InitLCD>
	LCDClear();
     9d0:	81 e0       	ldi	r24, 0x01	; 1
     9d2:	60 e0       	ldi	r22, 0x00	; 0
     9d4:	0e 94 73 00 	call	0xe6	; 0xe6 <LCDByte>
	sei();								//enables interrupts
     9d8:	78 94       	sei
		_delay_ms(F_CPU/10000);
}

void BacklightOn(void)
{
	sbi(PORTC, PC7);
     9da:	af 9a       	sbi	0x15, 7	; 21
	
	//prints the openning screen
	BacklightOn();	
	LCDClear();
     9dc:	81 e0       	ldi	r24, 0x01	; 1
     9de:	60 e0       	ldi	r22, 0x00	; 0
     9e0:	0e 94 73 00 	call	0xe6	; 0xe6 <LCDByte>
	LCDGotoXY(0,0);
     9e4:	80 e0       	ldi	r24, 0x00	; 0
     9e6:	60 e0       	ldi	r22, 0x00	; 0
     9e8:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
	LCDWriteString("Lord ofthe Lines");
     9ec:	80 e6       	ldi	r24, 0x60	; 96
     9ee:	90 e0       	ldi	r25, 0x00	; 0
     9f0:	0e 94 c6 00 	call	0x18c	; 0x18c <LCDWriteString>
     9f4:	20 e0       	ldi	r18, 0x00	; 0
     9f6:	30 e0       	ldi	r19, 0x00	; 0
     9f8:	48 ea       	ldi	r20, 0xA8	; 168
     9fa:	51 e6       	ldi	r21, 0x61	; 97
     9fc:	05 c0       	rjmp	.+10     	; 0xa08 <main+0x72>
     9fe:	ca 01       	movw	r24, r20
     a00:	01 97       	sbiw	r24, 0x01	; 1
     a02:	f1 f7       	brne	.-4      	; 0xa00 <main+0x6a>
}

void delay(float n)
{
	n *= 10;
	for(int i = 0; i < n; i++)
     a04:	2f 5f       	subi	r18, 0xFF	; 255
     a06:	3f 4f       	sbci	r19, 0xFF	; 255
     a08:	2a 30       	cpi	r18, 0x0A	; 10
     a0a:	31 05       	cpc	r19, r1
     a0c:	c1 f7       	brne	.-16     	; 0x9fe <main+0x68>
	delay(1);
	
	LCDGotoXY(3, 1);
     a0e:	83 e0       	ldi	r24, 0x03	; 3
     a10:	61 e0       	ldi	r22, 0x01	; 1
     a12:	0e 94 32 01 	call	0x264	; 0x264 <LCDGotoXY>
	LCDWriteString("NAWAZ");		
     a16:	8a e2       	ldi	r24, 0x2A	; 42
     a18:	91 e0       	ldi	r25, 0x01	; 1
     a1a:	0e 94 c6 00 	call	0x18c	; 0x18c <LCDWriteString>
     a1e:	20 e0       	ldi	r18, 0x00	; 0
     a20:	30 e0       	ldi	r19, 0x00	; 0
     a22:	48 ea       	ldi	r20, 0xA8	; 168
     a24:	51 e6       	ldi	r21, 0x61	; 97
     a26:	05 c0       	rjmp	.+10     	; 0xa32 <main+0x9c>
     a28:	ca 01       	movw	r24, r20
     a2a:	01 97       	sbiw	r24, 0x01	; 1
     a2c:	f1 f7       	brne	.-4      	; 0xa2a <main+0x94>
     a2e:	2f 5f       	subi	r18, 0xFF	; 255
     a30:	3f 4f       	sbci	r19, 0xFF	; 255
     a32:	2a 30       	cpi	r18, 0x0A	; 10
     a34:	31 05       	cpc	r19, r1
     a36:	c1 f7       	brne	.-16     	; 0xa28 <main+0x92>
	delay(1);
	DispMenu(0);							//displays home screen
     a38:	80 e0       	ldi	r24, 0x00	; 0
     a3a:	90 e0       	ldi	r25, 0x00	; 0
     a3c:	0e 94 3f 03 	call	0x67e	; 0x67e <DispMenu>
	
	while(true)
	{		
		if(pause == false)					
     a40:	80 91 30 01 	lds	r24, 0x0130
     a44:	88 23       	and	r24, r24
     a46:	09 f0       	breq	.+2      	; 0xa4a <main+0xb4>
     a48:	27 c1       	rjmp	.+590    	; 0xc98 <main+0x302>
		{					
			CalcError();			
     a4a:	0e 94 6f 01 	call	0x2de	; 0x2de <CalcError>
			
			if((s1+s2+s3+s4+s5+s6+s7+s8) == 0)		//robot has overshot
     a4e:	80 91 62 02 	lds	r24, 0x0262
     a52:	90 91 63 02 	lds	r25, 0x0263
     a56:	20 91 54 02 	lds	r18, 0x0254
     a5a:	30 91 55 02 	lds	r19, 0x0255
     a5e:	82 0f       	add	r24, r18
     a60:	93 1f       	adc	r25, r19
     a62:	20 91 6a 02 	lds	r18, 0x026A
     a66:	30 91 6b 02 	lds	r19, 0x026B
     a6a:	82 0f       	add	r24, r18
     a6c:	93 1f       	adc	r25, r19
     a6e:	20 91 56 02 	lds	r18, 0x0256
     a72:	30 91 57 02 	lds	r19, 0x0257
     a76:	82 0f       	add	r24, r18
     a78:	93 1f       	adc	r25, r19
     a7a:	20 91 60 02 	lds	r18, 0x0260
     a7e:	30 91 61 02 	lds	r19, 0x0261
     a82:	82 0f       	add	r24, r18
     a84:	93 1f       	adc	r25, r19
     a86:	20 91 52 02 	lds	r18, 0x0252
     a8a:	30 91 53 02 	lds	r19, 0x0253
     a8e:	82 0f       	add	r24, r18
     a90:	93 1f       	adc	r25, r19
     a92:	20 91 6c 02 	lds	r18, 0x026C
     a96:	30 91 6d 02 	lds	r19, 0x026D
     a9a:	82 0f       	add	r24, r18
     a9c:	93 1f       	adc	r25, r19
     a9e:	20 91 58 02 	lds	r18, 0x0258
     aa2:	30 91 59 02 	lds	r19, 0x0259
     aa6:	82 0f       	add	r24, r18
     aa8:	93 1f       	adc	r25, r19
     aaa:	89 2b       	or	r24, r25
     aac:	a1 f4       	brne	.+40     	; 0xad6 <main+0x140>
			{
				if(lastreading == 'r')				//checks if the last sensor to the activated was right
     aae:	80 91 31 01 	lds	r24, 0x0131
     ab2:	82 37       	cpi	r24, 0x72	; 114
     ab4:	19 f0       	breq	.+6      	; 0xabc <main+0x126>
					LeftMF();
					OCR1A = 255;
					OCR1B = 255;	
				}
				
				else if(lastreading == 'l')			//checks if the last sensor to the activated was left
     ab6:	8c 36       	cpi	r24, 0x6C	; 108
     ab8:	09 f0       	breq	.+2      	; 0xabc <main+0x126>
     aba:	ee c0       	rjmp	.+476    	; 0xc98 <main+0x302>
	cbi(PORTD, PD7);
}

void RightMB(void)
{
	sbi(PORTD, PD4);
     abc:	94 9a       	sbi	0x12, 4	; 18
	sbi(PORTD, PD0);
     abe:	90 9a       	sbi	0x12, 0	; 18
	cbi(PORTD, PD1);
     ac0:	91 98       	cbi	0x12, 1	; 18
	cbi(PORTD, PD0);
	sbi(PORTD, PD1);
}
void LeftMF(void)
{
	sbi(PORTD, PD5);
     ac2:	95 9a       	sbi	0x12, 5	; 18
	sbi(PORTD, PD6);
     ac4:	96 9a       	sbi	0x12, 6	; 18
	cbi(PORTD, PD7);
     ac6:	97 98       	cbi	0x12, 7	; 18
				{
					RightMB();						//turn left at full speed

					LeftMF();	
					OCR1A = 255;
     ac8:	8f ef       	ldi	r24, 0xFF	; 255
     aca:	90 e0       	ldi	r25, 0x00	; 0
     acc:	9b bd       	out	0x2b, r25	; 43
     ace:	8a bd       	out	0x2a, r24	; 42
					OCR1B = 255;					
     ad0:	99 bd       	out	0x29, r25	; 41
     ad2:	88 bd       	out	0x28, r24	; 40
     ad4:	e1 c0       	rjmp	.+450    	; 0xc98 <main+0x302>
			}			
				
			
			else  									//robot on line
			{	
				P = error * Kp;
     ad6:	20 90 44 02 	lds	r2, 0x0244
     ada:	30 90 45 02 	lds	r3, 0x0245
     ade:	40 90 46 02 	lds	r4, 0x0246
     ae2:	50 90 47 02 	lds	r5, 0x0247
     ae6:	60 91 36 01 	lds	r22, 0x0136
     aea:	70 91 37 01 	lds	r23, 0x0137
     aee:	80 e0       	ldi	r24, 0x00	; 0
     af0:	90 e0       	ldi	r25, 0x00	; 0
     af2:	0e 94 24 0d 	call	0x1a48	; 0x1a48 <__floatunsisf>
     af6:	9b 01       	movw	r18, r22
     af8:	ac 01       	movw	r20, r24
     afa:	c2 01       	movw	r24, r4
     afc:	b1 01       	movw	r22, r2
     afe:	0e 94 0c 0a 	call	0x1418	; 0x1418 <__mulsf3>
     b02:	3b 01       	movw	r6, r22
     b04:	4c 01       	movw	r8, r24
     b06:	60 93 6e 02 	sts	0x026E, r22
     b0a:	70 93 6f 02 	sts	0x026F, r23
     b0e:	80 93 70 02 	sts	0x0270, r24
     b12:	90 93 71 02 	sts	0x0271, r25
				
				I += error;
				I = I * Ki;
     b16:	c2 01       	movw	r24, r4
     b18:	b1 01       	movw	r22, r2
     b1a:	20 91 64 02 	lds	r18, 0x0264
     b1e:	30 91 65 02 	lds	r19, 0x0265
     b22:	40 91 66 02 	lds	r20, 0x0266
     b26:	50 91 67 02 	lds	r21, 0x0267
     b2a:	0e 94 df 09 	call	0x13be	; 0x13be <__addsf3>
     b2e:	7b 01       	movw	r14, r22
     b30:	8c 01       	movw	r16, r24
     b32:	60 91 38 01 	lds	r22, 0x0138
     b36:	70 91 39 01 	lds	r23, 0x0139
     b3a:	80 e0       	ldi	r24, 0x00	; 0
     b3c:	90 e0       	ldi	r25, 0x00	; 0
     b3e:	0e 94 24 0d 	call	0x1a48	; 0x1a48 <__floatunsisf>
     b42:	9b 01       	movw	r18, r22
     b44:	ac 01       	movw	r20, r24
     b46:	c8 01       	movw	r24, r16
     b48:	b7 01       	movw	r22, r14
     b4a:	0e 94 0c 0a 	call	0x1418	; 0x1418 <__mulsf3>
     b4e:	5b 01       	movw	r10, r22
     b50:	6c 01       	movw	r12, r24
     b52:	60 93 64 02 	sts	0x0264, r22
     b56:	70 93 65 02 	sts	0x0265, r23
     b5a:	80 93 66 02 	sts	0x0266, r24
     b5e:	90 93 67 02 	sts	0x0267, r25
				
				D = error - perror;
     b62:	c2 01       	movw	r24, r4
     b64:	b1 01       	movw	r22, r2
     b66:	20 91 48 02 	lds	r18, 0x0248
     b6a:	30 91 49 02 	lds	r19, 0x0249
     b6e:	40 91 4a 02 	lds	r20, 0x024A
     b72:	50 91 4b 02 	lds	r21, 0x024B
     b76:	0e 94 ae 09 	call	0x135c	; 0x135c <__subsf3>
     b7a:	7b 01       	movw	r14, r22
     b7c:	8c 01       	movw	r16, r24
     b7e:	60 93 4e 02 	sts	0x024E, r22
     b82:	70 93 4f 02 	sts	0x024F, r23
     b86:	80 93 50 02 	sts	0x0250, r24
     b8a:	90 93 51 02 	sts	0x0251, r25
				
				correction = P + I + D;
     b8e:	c4 01       	movw	r24, r8
     b90:	b3 01       	movw	r22, r6
     b92:	a6 01       	movw	r20, r12
     b94:	95 01       	movw	r18, r10
     b96:	0e 94 df 09 	call	0x13be	; 0x13be <__addsf3>
     b9a:	a8 01       	movw	r20, r16
     b9c:	97 01       	movw	r18, r14
     b9e:	0e 94 df 09 	call	0x13be	; 0x13be <__addsf3>
     ba2:	7b 01       	movw	r14, r22
     ba4:	8c 01       	movw	r16, r24
     ba6:	60 93 5a 02 	sts	0x025A, r22
     baa:	70 93 5b 02 	sts	0x025B, r23
     bae:	80 93 5c 02 	sts	0x025C, r24
     bb2:	90 93 5d 02 	sts	0x025D, r25
				
				rightpulse =  basespeed + correction;
     bb6:	60 91 34 01 	lds	r22, 0x0134
     bba:	70 91 35 01 	lds	r23, 0x0135
     bbe:	80 e0       	ldi	r24, 0x00	; 0
     bc0:	90 e0       	ldi	r25, 0x00	; 0
     bc2:	0e 94 24 0d 	call	0x1a48	; 0x1a48 <__floatunsisf>
     bc6:	5b 01       	movw	r10, r22
     bc8:	6c 01       	movw	r12, r24
     bca:	a8 01       	movw	r20, r16
     bcc:	97 01       	movw	r18, r14
     bce:	0e 94 df 09 	call	0x13be	; 0x13be <__addsf3>
     bd2:	0e 94 36 08 	call	0x106c	; 0x106c <__fixunssfsi>
     bd6:	eb 01       	movw	r28, r22
     bd8:	70 93 5f 02 	sts	0x025F, r23
     bdc:	60 93 5e 02 	sts	0x025E, r22
				leftpulse = basespeed - correction;				
     be0:	c6 01       	movw	r24, r12
     be2:	b5 01       	movw	r22, r10
     be4:	a8 01       	movw	r20, r16
     be6:	97 01       	movw	r18, r14
     be8:	0e 94 ae 09 	call	0x135c	; 0x135c <__subsf3>
     bec:	0e 94 36 08 	call	0x106c	; 0x106c <__fixunssfsi>
     bf0:	70 93 69 02 	sts	0x0269, r23
     bf4:	60 93 68 02 	sts	0x0268, r22
				
			
			
					
				if(leftpulse > 255)
     bf8:	6f 3f       	cpi	r22, 0xFF	; 255
     bfa:	71 05       	cpc	r23, r1
     bfc:	39 f0       	breq	.+14     	; 0xc0c <main+0x276>
     bfe:	30 f0       	brcs	.+12     	; 0xc0c <main+0x276>
				leftpulse = 255;
     c00:	8f ef       	ldi	r24, 0xFF	; 255
     c02:	90 e0       	ldi	r25, 0x00	; 0
     c04:	90 93 69 02 	sts	0x0269, r25
     c08:	80 93 68 02 	sts	0x0268, r24
				
				if(rightpulse > 255)
     c0c:	cf 3f       	cpi	r28, 0xFF	; 255
     c0e:	d1 05       	cpc	r29, r1
     c10:	39 f0       	breq	.+14     	; 0xc20 <main+0x28a>
     c12:	30 f0       	brcs	.+12     	; 0xc20 <main+0x28a>
					rightpulse = 255;	
     c14:	8f ef       	ldi	r24, 0xFF	; 255
     c16:	90 e0       	ldi	r25, 0x00	; 0
     c18:	90 93 5f 02 	sts	0x025F, r25
     c1c:	80 93 5e 02 	sts	0x025E, r24

				OCR1A = leftpulse;
     c20:	80 91 68 02 	lds	r24, 0x0268
     c24:	90 91 69 02 	lds	r25, 0x0269
     c28:	9b bd       	out	0x2b, r25	; 43
     c2a:	8a bd       	out	0x2a, r24	; 42
				OCR1B = rightpulse;	
     c2c:	80 91 5e 02 	lds	r24, 0x025E
     c30:	90 91 5f 02 	lds	r25, 0x025F
     c34:	99 bd       	out	0x29, r25	; 41
     c36:	88 bd       	out	0x28, r24	; 40
				
				if(error<0)
     c38:	c2 01       	movw	r24, r4
     c3a:	b1 01       	movw	r22, r2
     c3c:	20 e0       	ldi	r18, 0x00	; 0
     c3e:	30 e0       	ldi	r19, 0x00	; 0
     c40:	40 e0       	ldi	r20, 0x00	; 0
     c42:	50 e0       	ldi	r21, 0x00	; 0
     c44:	0e 94 42 0c 	call	0x1884	; 0x1884 <__ltsf2>
     c48:	88 23       	and	r24, r24
     c4a:	34 f4       	brge	.+12     	; 0xc58 <main+0x2c2>
	sbi(PORTD, PD0);
	cbi(PORTD, PD1);
}
void LeftMS(void)
{
	sbi(PORTD, PD5);
     c4c:	95 9a       	sbi	0x12, 5	; 18
	sbi(PORTD, PD6);
     c4e:	96 9a       	sbi	0x12, 6	; 18
	sbi(PORTD, PD7);
     c50:	97 9a       	sbi	0x12, 7	; 18
	sbi(PORTD, PD7);
}

void RightMF(void)
{
	sbi(PORTD, PD4);
     c52:	94 9a       	sbi	0x12, 4	; 18
	cbi(PORTD, PD0);
     c54:	90 98       	cbi	0x12, 0	; 18
	sbi(PORTD, PD1);
     c56:	91 9a       	sbi	0x12, 1	; 18
				{
				LeftMS();
				RightMF();
				}
				
				if(error>0)
     c58:	c2 01       	movw	r24, r4
     c5a:	b1 01       	movw	r22, r2
     c5c:	20 e0       	ldi	r18, 0x00	; 0
     c5e:	30 e0       	ldi	r19, 0x00	; 0
     c60:	40 e0       	ldi	r20, 0x00	; 0
     c62:	50 e0       	ldi	r21, 0x00	; 0
     c64:	0e 94 e2 0b 	call	0x17c4	; 0x17c4 <__gtsf2>
     c68:	18 16       	cp	r1, r24
     c6a:	34 f4       	brge	.+12     	; 0xc78 <main+0x2e2>
}
void LeftMF(void)
{
	sbi(PORTD, PD5);
     c6c:	95 9a       	sbi	0x12, 5	; 18
	sbi(PORTD, PD6);
     c6e:	96 9a       	sbi	0x12, 6	; 18
	cbi(PORTD, PD7);
     c70:	97 98       	cbi	0x12, 7	; 18
	sbi(PORTD, PD7);
}

void RightMS(void)
{
	sbi(PORTD, PD4);
     c72:	94 9a       	sbi	0x12, 4	; 18
	sbi(PORTD, PD0);
     c74:	90 9a       	sbi	0x12, 0	; 18
	sbi(PORTD, PD1);
     c76:	91 9a       	sbi	0x12, 1	; 18
				{
				LeftMF();
				RightMS();
				}
				
				if(error==0)
     c78:	c2 01       	movw	r24, r4
     c7a:	b1 01       	movw	r22, r2
     c7c:	20 e0       	ldi	r18, 0x00	; 0
     c7e:	30 e0       	ldi	r19, 0x00	; 0
     c80:	40 e0       	ldi	r20, 0x00	; 0
     c82:	50 e0       	ldi	r21, 0x00	; 0
     c84:	0e 94 b2 0b 	call	0x1764	; 0x1764 <__eqsf2>
     c88:	88 23       	and	r24, r24
     c8a:	31 f4       	brne	.+12     	; 0xc98 <main+0x302>
	cbi(PORTD, PD0);
	sbi(PORTD, PD1);
}
void LeftMF(void)
{
	sbi(PORTD, PD5);
     c8c:	95 9a       	sbi	0x12, 5	; 18
	sbi(PORTD, PD6);
     c8e:	96 9a       	sbi	0x12, 6	; 18
	cbi(PORTD, PD7);
     c90:	97 98       	cbi	0x12, 7	; 18
	sbi(PORTD, PD7);
}

void RightMF(void)
{
	sbi(PORTD, PD4);
     c92:	94 9a       	sbi	0x12, 4	; 18
	cbi(PORTD, PD0);
     c94:	90 98       	cbi	0x12, 0	; 18
	sbi(PORTD, PD1);
     c96:	91 9a       	sbi	0x12, 1	; 18
     c98:	84 ec       	ldi	r24, 0xC4	; 196
     c9a:	99 e0       	ldi	r25, 0x09	; 9
     c9c:	01 97       	sbiw	r24, 0x01	; 1
     c9e:	f1 f7       	brne	.-4      	; 0xc9c <main+0x306>
     ca0:	cf ce       	rjmp	.-610    	; 0xa40 <main+0xaa>

00000ca2 <__vector_2>:
	

}

SIGNAL (SIG_INTERRUPT1)				// right switch	
{
     ca2:	1f 92       	push	r1
     ca4:	0f 92       	push	r0
     ca6:	0f b6       	in	r0, 0x3f	; 63
     ca8:	0f 92       	push	r0
     caa:	11 24       	eor	r1, r1
     cac:	2f 93       	push	r18
     cae:	3f 93       	push	r19
     cb0:	4f 93       	push	r20
     cb2:	5f 93       	push	r21
     cb4:	6f 93       	push	r22
     cb6:	7f 93       	push	r23
     cb8:	8f 93       	push	r24
     cba:	9f 93       	push	r25
     cbc:	af 93       	push	r26
     cbe:	bf 93       	push	r27
     cc0:	ef 93       	push	r30
     cc2:	ff 93       	push	r31
     cc4:	20 e0       	ldi	r18, 0x00	; 0
     cc6:	30 e0       	ldi	r19, 0x00	; 0
     cc8:	48 ea       	ldi	r20, 0xA8	; 168
     cca:	51 e6       	ldi	r21, 0x61	; 97
     ccc:	05 c0       	rjmp	.+10     	; 0xcd8 <__vector_2+0x36>
     cce:	ca 01       	movw	r24, r20
     cd0:	01 97       	sbiw	r24, 0x01	; 1
     cd2:	f1 f7       	brne	.-4      	; 0xcd0 <__vector_2+0x2e>
}

void delay(float n)
{
	n *= 10;
	for(int i = 0; i < n; i++)
     cd4:	2f 5f       	subi	r18, 0xFF	; 255
     cd6:	3f 4f       	sbci	r19, 0xFF	; 255
     cd8:	23 30       	cpi	r18, 0x03	; 3
     cda:	31 05       	cpc	r19, r1
     cdc:	c1 f7       	brne	.-16     	; 0xcce <__vector_2+0x2c>
	delay(0.3);
	
	switch(menu)
     cde:	80 91 4c 02 	lds	r24, 0x024C
     ce2:	90 91 4d 02 	lds	r25, 0x024D
     ce6:	88 32       	cpi	r24, 0x28	; 40
     ce8:	91 05       	cpc	r25, r1
     cea:	99 f1       	breq	.+102    	; 0xd52 <__vector_2+0xb0>
     cec:	89 32       	cpi	r24, 0x29	; 41
     cee:	91 05       	cpc	r25, r1
     cf0:	b0 f4       	brcc	.+44     	; 0xd1e <__vector_2+0x7c>
     cf2:	84 31       	cpi	r24, 0x14	; 20
     cf4:	91 05       	cpc	r25, r1
     cf6:	69 f1       	breq	.+90     	; 0xd52 <__vector_2+0xb0>
     cf8:	85 31       	cpi	r24, 0x15	; 21
     cfa:	91 05       	cpc	r25, r1
     cfc:	30 f4       	brcc	.+12     	; 0xd0a <__vector_2+0x68>
     cfe:	00 97       	sbiw	r24, 0x00	; 0
     d00:	71 f1       	breq	.+92     	; 0xd5e <__vector_2+0xbc>
     d02:	0a 97       	sbiw	r24, 0x0a	; 10
     d04:	09 f0       	breq	.+2      	; 0xd08 <__vector_2+0x66>
     d06:	5f c0       	rjmp	.+190    	; 0xdc6 <__vector_2+0x124>
     d08:	2a c0       	rjmp	.+84     	; 0xd5e <__vector_2+0xbc>
     d0a:	8e 31       	cpi	r24, 0x1E	; 30
     d0c:	91 05       	cpc	r25, r1
     d0e:	09 f1       	breq	.+66     	; 0xd52 <__vector_2+0xb0>
     d10:	83 32       	cpi	r24, 0x23	; 35
     d12:	91 05       	cpc	r25, r1
     d14:	89 f1       	breq	.+98     	; 0xd78 <__vector_2+0xd6>
     d16:	49 97       	sbiw	r24, 0x19	; 25
     d18:	09 f0       	breq	.+2      	; 0xd1c <__vector_2+0x7a>
     d1a:	55 c0       	rjmp	.+170    	; 0xdc6 <__vector_2+0x124>
     d1c:	23 c0       	rjmp	.+70     	; 0xd64 <__vector_2+0xc2>
     d1e:	8c 33       	cpi	r24, 0x3C	; 60
     d20:	91 05       	cpc	r25, r1
     d22:	b9 f0       	breq	.+46     	; 0xd52 <__vector_2+0xb0>
     d24:	8d 33       	cpi	r24, 0x3D	; 61
     d26:	91 05       	cpc	r25, r1
     d28:	50 f4       	brcc	.+20     	; 0xd3e <__vector_2+0x9c>
     d2a:	82 33       	cpi	r24, 0x32	; 50
     d2c:	91 05       	cpc	r25, r1
     d2e:	89 f0       	breq	.+34     	; 0xd52 <__vector_2+0xb0>
     d30:	87 33       	cpi	r24, 0x37	; 55
     d32:	91 05       	cpc	r25, r1
     d34:	a9 f1       	breq	.+106    	; 0xda0 <__vector_2+0xfe>
     d36:	8d 97       	sbiw	r24, 0x2d	; 45
     d38:	09 f0       	breq	.+2      	; 0xd3c <__vector_2+0x9a>
     d3a:	45 c0       	rjmp	.+138    	; 0xdc6 <__vector_2+0x124>
     d3c:	27 c0       	rjmp	.+78     	; 0xd8c <__vector_2+0xea>
     d3e:	86 34       	cpi	r24, 0x46	; 70
     d40:	91 05       	cpc	r25, r1
     d42:	39 f0       	breq	.+14     	; 0xd52 <__vector_2+0xb0>
     d44:	80 35       	cpi	r24, 0x50	; 80
     d46:	91 05       	cpc	r25, r1
     d48:	51 f0       	breq	.+20     	; 0xd5e <__vector_2+0xbc>
     d4a:	81 34       	cpi	r24, 0x41	; 65
     d4c:	91 05       	cpc	r25, r1
     d4e:	d9 f5       	brne	.+118    	; 0xdc6 <__vector_2+0x124>
     d50:	31 c0       	rjmp	.+98     	; 0xdb4 <__vector_2+0x112>
		case 30:
		case 40:
		case 50:	
		case 60:
		case 70:
			menu += 10;	
     d52:	0a 96       	adiw	r24, 0x0a	; 10
     d54:	90 93 4d 02 	sts	0x024D, r25
     d58:	80 93 4c 02 	sts	0x024C, r24
     d5c:	34 c0       	rjmp	.+104    	; 0xdc6 <__vector_2+0x124>
			break;
		case 80:
			menu = 20;	
     d5e:	84 e1       	ldi	r24, 0x14	; 20
     d60:	90 e0       	ldi	r25, 0x00	; 0
     d62:	f8 cf       	rjmp	.-16     	; 0xd54 <__vector_2+0xb2>
			break;
		case 25:
			maxspeed++;
     d64:	80 91 32 01 	lds	r24, 0x0132
     d68:	90 91 33 01 	lds	r25, 0x0133
     d6c:	01 96       	adiw	r24, 0x01	; 1
     d6e:	90 93 33 01 	sts	0x0133, r25
     d72:	80 93 32 01 	sts	0x0132, r24
     d76:	27 c0       	rjmp	.+78     	; 0xdc6 <__vector_2+0x124>
			break;
		case 35:
			basespeed++;
     d78:	80 91 34 01 	lds	r24, 0x0134
     d7c:	90 91 35 01 	lds	r25, 0x0135
     d80:	01 96       	adiw	r24, 0x01	; 1
     d82:	90 93 35 01 	sts	0x0135, r25
     d86:	80 93 34 01 	sts	0x0134, r24
     d8a:	1d c0       	rjmp	.+58     	; 0xdc6 <__vector_2+0x124>
			break;
		case 45:
			Kp++;
     d8c:	80 91 36 01 	lds	r24, 0x0136
     d90:	90 91 37 01 	lds	r25, 0x0137
     d94:	01 96       	adiw	r24, 0x01	; 1
     d96:	90 93 37 01 	sts	0x0137, r25
     d9a:	80 93 36 01 	sts	0x0136, r24
     d9e:	13 c0       	rjmp	.+38     	; 0xdc6 <__vector_2+0x124>
			break;
		case 55:
			Ki++;
     da0:	80 91 38 01 	lds	r24, 0x0138
     da4:	90 91 39 01 	lds	r25, 0x0139
     da8:	01 96       	adiw	r24, 0x01	; 1
     daa:	90 93 39 01 	sts	0x0139, r25
     dae:	80 93 38 01 	sts	0x0138, r24
     db2:	09 c0       	rjmp	.+18     	; 0xdc6 <__vector_2+0x124>
			break;
		case 65:
			Kd++;
     db4:	80 91 3a 01 	lds	r24, 0x013A
     db8:	90 91 3b 01 	lds	r25, 0x013B
     dbc:	01 96       	adiw	r24, 0x01	; 1
     dbe:	90 93 3b 01 	sts	0x013B, r25
     dc2:	80 93 3a 01 	sts	0x013A, r24
			break;
	}
	DispMenu(menu);
     dc6:	80 91 4c 02 	lds	r24, 0x024C
     dca:	90 91 4d 02 	lds	r25, 0x024D
     dce:	0e 94 3f 03 	call	0x67e	; 0x67e <DispMenu>
}
     dd2:	ff 91       	pop	r31
     dd4:	ef 91       	pop	r30
     dd6:	bf 91       	pop	r27
     dd8:	af 91       	pop	r26
     dda:	9f 91       	pop	r25
     ddc:	8f 91       	pop	r24
     dde:	7f 91       	pop	r23
     de0:	6f 91       	pop	r22
     de2:	5f 91       	pop	r21
     de4:	4f 91       	pop	r20
     de6:	3f 91       	pop	r19
     de8:	2f 91       	pop	r18
     dea:	0f 90       	pop	r0
     dec:	0f be       	out	0x3f, r0	; 63
     dee:	0f 90       	pop	r0
     df0:	1f 90       	pop	r1
     df2:	18 95       	reti

00000df4 <__vector_18>:
	}
	DispMenu(menu);
}

SIGNAL (SIG_INTERRUPT2)						// middle switch		
{
     df4:	1f 92       	push	r1
     df6:	0f 92       	push	r0
     df8:	0f b6       	in	r0, 0x3f	; 63
     dfa:	0f 92       	push	r0
     dfc:	11 24       	eor	r1, r1
     dfe:	2f 93       	push	r18
     e00:	3f 93       	push	r19
     e02:	4f 93       	push	r20
     e04:	5f 93       	push	r21
     e06:	6f 93       	push	r22
     e08:	7f 93       	push	r23
     e0a:	8f 93       	push	r24
     e0c:	9f 93       	push	r25
     e0e:	af 93       	push	r26
     e10:	bf 93       	push	r27
     e12:	ef 93       	push	r30
     e14:	ff 93       	push	r31
     e16:	20 e0       	ldi	r18, 0x00	; 0
     e18:	30 e0       	ldi	r19, 0x00	; 0
     e1a:	48 ea       	ldi	r20, 0xA8	; 168
     e1c:	51 e6       	ldi	r21, 0x61	; 97
     e1e:	05 c0       	rjmp	.+10     	; 0xe2a <__vector_18+0x36>
     e20:	ca 01       	movw	r24, r20
     e22:	01 97       	sbiw	r24, 0x01	; 1
     e24:	f1 f7       	brne	.-4      	; 0xe22 <__vector_18+0x2e>
     e26:	2f 5f       	subi	r18, 0xFF	; 255
     e28:	3f 4f       	sbci	r19, 0xFF	; 255
     e2a:	23 30       	cpi	r18, 0x03	; 3
     e2c:	31 05       	cpc	r19, r1
     e2e:	c1 f7       	brne	.-16     	; 0xe20 <__vector_18+0x2c>
		delay(0.3);	
		switch(menu)
     e30:	80 91 4c 02 	lds	r24, 0x024C
     e34:	90 91 4d 02 	lds	r25, 0x024D
     e38:	82 33       	cpi	r24, 0x32	; 50
     e3a:	91 05       	cpc	r25, r1
     e3c:	81 f1       	breq	.+96     	; 0xe9e <__vector_18+0xaa>
     e3e:	83 33       	cpi	r24, 0x33	; 51
     e40:	91 05       	cpc	r25, r1
     e42:	b8 f4       	brcc	.+46     	; 0xe72 <__vector_18+0x7e>
     e44:	8e 31       	cpi	r24, 0x1E	; 30
     e46:	91 05       	cpc	r25, r1
     e48:	51 f1       	breq	.+84     	; 0xe9e <__vector_18+0xaa>
     e4a:	8f 31       	cpi	r24, 0x1F	; 31
     e4c:	91 05       	cpc	r25, r1
     e4e:	38 f4       	brcc	.+14     	; 0xe5e <__vector_18+0x6a>
     e50:	84 31       	cpi	r24, 0x14	; 20
     e52:	91 05       	cpc	r25, r1
     e54:	21 f1       	breq	.+72     	; 0xe9e <__vector_18+0xaa>
     e56:	89 31       	cpi	r24, 0x19	; 25
     e58:	91 05       	cpc	r25, r1
     e5a:	69 f5       	brne	.+90     	; 0xeb6 <__vector_18+0xc2>
     e5c:	27 c0       	rjmp	.+78     	; 0xeac <__vector_18+0xb8>
     e5e:	88 32       	cpi	r24, 0x28	; 40
     e60:	91 05       	cpc	r25, r1
     e62:	e9 f0       	breq	.+58     	; 0xe9e <__vector_18+0xaa>
     e64:	8d 32       	cpi	r24, 0x2D	; 45
     e66:	91 05       	cpc	r25, r1
     e68:	09 f1       	breq	.+66     	; 0xeac <__vector_18+0xb8>
     e6a:	83 32       	cpi	r24, 0x23	; 35
     e6c:	91 05       	cpc	r25, r1
     e6e:	19 f5       	brne	.+70     	; 0xeb6 <__vector_18+0xc2>
     e70:	1d c0       	rjmp	.+58     	; 0xeac <__vector_18+0xb8>
     e72:	81 34       	cpi	r24, 0x41	; 65
     e74:	91 05       	cpc	r25, r1
     e76:	d1 f0       	breq	.+52     	; 0xeac <__vector_18+0xb8>
     e78:	82 34       	cpi	r24, 0x42	; 66
     e7a:	91 05       	cpc	r25, r1
     e7c:	38 f4       	brcc	.+14     	; 0xe8c <__vector_18+0x98>
     e7e:	87 33       	cpi	r24, 0x37	; 55
     e80:	91 05       	cpc	r25, r1
     e82:	a1 f0       	breq	.+40     	; 0xeac <__vector_18+0xb8>
     e84:	8c 33       	cpi	r24, 0x3C	; 60
     e86:	91 05       	cpc	r25, r1
     e88:	b1 f4       	brne	.+44     	; 0xeb6 <__vector_18+0xc2>
     e8a:	09 c0       	rjmp	.+18     	; 0xe9e <__vector_18+0xaa>
     e8c:	8b 34       	cpi	r24, 0x4B	; 75
     e8e:	91 05       	cpc	r25, r1
     e90:	69 f0       	breq	.+26     	; 0xeac <__vector_18+0xb8>
     e92:	80 35       	cpi	r24, 0x50	; 80
     e94:	91 05       	cpc	r25, r1
     e96:	29 f0       	breq	.+10     	; 0xea2 <__vector_18+0xae>
     e98:	86 34       	cpi	r24, 0x46	; 70
     e9a:	91 05       	cpc	r25, r1
     e9c:	61 f4       	brne	.+24     	; 0xeb6 <__vector_18+0xc2>
			case 30:
			case 40:
			case 50:
			case 60:
			case 70:
				menu += 5;
     e9e:	05 96       	adiw	r24, 0x05	; 5
     ea0:	06 c0       	rjmp	.+12     	; 0xeae <__vector_18+0xba>
				break;
			case 80:
				menu = 0;
     ea2:	10 92 4d 02 	sts	0x024D, r1
     ea6:	10 92 4c 02 	sts	0x024C, r1
     eaa:	05 c0       	rjmp	.+10     	; 0xeb6 <__vector_18+0xc2>
			case 35:
			case 45:
			case 55:
			case 65:
			case 75:
				menu -= 5;
     eac:	05 97       	sbiw	r24, 0x05	; 5
     eae:	90 93 4d 02 	sts	0x024D, r25
     eb2:	80 93 4c 02 	sts	0x024C, r24
				break;				
		}
		DispMenu(menu);		
     eb6:	80 91 4c 02 	lds	r24, 0x024C
     eba:	90 91 4d 02 	lds	r25, 0x024D
     ebe:	0e 94 3f 03 	call	0x67e	; 0x67e <DispMenu>
		
	

}
     ec2:	ff 91       	pop	r31
     ec4:	ef 91       	pop	r30
     ec6:	bf 91       	pop	r27
     ec8:	af 91       	pop	r26
     eca:	9f 91       	pop	r25
     ecc:	8f 91       	pop	r24
     ece:	7f 91       	pop	r23
     ed0:	6f 91       	pop	r22
     ed2:	5f 91       	pop	r21
     ed4:	4f 91       	pop	r20
     ed6:	3f 91       	pop	r19
     ed8:	2f 91       	pop	r18
     eda:	0f 90       	pop	r0
     edc:	0f be       	out	0x3f, r0	; 63
     ede:	0f 90       	pop	r0
     ee0:	1f 90       	pop	r1
     ee2:	18 95       	reti

00000ee4 <__vector_1>:
#include "nawaz/LotL.h"

SIGNAL (SIG_INTERRUPT0)						// left switch
{
     ee4:	1f 92       	push	r1
     ee6:	0f 92       	push	r0
     ee8:	0f b6       	in	r0, 0x3f	; 63
     eea:	0f 92       	push	r0
     eec:	11 24       	eor	r1, r1
     eee:	2f 93       	push	r18
     ef0:	3f 93       	push	r19
     ef2:	4f 93       	push	r20
     ef4:	5f 93       	push	r21
     ef6:	6f 93       	push	r22
     ef8:	7f 93       	push	r23
     efa:	8f 93       	push	r24
     efc:	9f 93       	push	r25
     efe:	af 93       	push	r26
     f00:	bf 93       	push	r27
     f02:	ef 93       	push	r30
     f04:	ff 93       	push	r31
     f06:	20 e0       	ldi	r18, 0x00	; 0
     f08:	30 e0       	ldi	r19, 0x00	; 0
     f0a:	48 ea       	ldi	r20, 0xA8	; 168
     f0c:	51 e6       	ldi	r21, 0x61	; 97
     f0e:	05 c0       	rjmp	.+10     	; 0xf1a <__vector_1+0x36>
     f10:	ca 01       	movw	r24, r20
     f12:	01 97       	sbiw	r24, 0x01	; 1
     f14:	f1 f7       	brne	.-4      	; 0xf12 <__vector_1+0x2e>
     f16:	2f 5f       	subi	r18, 0xFF	; 255
     f18:	3f 4f       	sbci	r19, 0xFF	; 255
     f1a:	23 30       	cpi	r18, 0x03	; 3
     f1c:	31 05       	cpc	r19, r1
     f1e:	c1 f7       	brne	.-16     	; 0xf10 <__vector_1+0x2c>
	delay(0.3);	
	
	switch(menu)
     f20:	80 91 4c 02 	lds	r24, 0x024C
     f24:	90 91 4d 02 	lds	r25, 0x024D
     f28:	88 32       	cpi	r24, 0x28	; 40
     f2a:	91 05       	cpc	r25, r1
     f2c:	09 f4       	brne	.+2      	; 0xf30 <__vector_1+0x4c>
     f2e:	54 c0       	rjmp	.+168    	; 0xfd8 <__vector_1+0xf4>
     f30:	89 32       	cpi	r24, 0x29	; 41
     f32:	91 05       	cpc	r25, r1
     f34:	c8 f4       	brcc	.+50     	; 0xf68 <__vector_1+0x84>
     f36:	84 31       	cpi	r24, 0x14	; 20
     f38:	91 05       	cpc	r25, r1
     f3a:	09 f4       	brne	.+2      	; 0xf3e <__vector_1+0x5a>
     f3c:	46 c0       	rjmp	.+140    	; 0xfca <__vector_1+0xe6>
     f3e:	85 31       	cpi	r24, 0x15	; 21
     f40:	91 05       	cpc	r25, r1
     f42:	30 f4       	brcc	.+12     	; 0xf50 <__vector_1+0x6c>
     f44:	00 97       	sbiw	r24, 0x00	; 0
     f46:	61 f1       	breq	.+88     	; 0xfa0 <__vector_1+0xbc>
     f48:	0a 97       	sbiw	r24, 0x0a	; 10
     f4a:	09 f0       	breq	.+2      	; 0xf4e <__vector_1+0x6a>
     f4c:	78 c0       	rjmp	.+240    	; 0x103e <__vector_1+0x15a>
     f4e:	31 c0       	rjmp	.+98     	; 0xfb2 <__vector_1+0xce>
     f50:	8e 31       	cpi	r24, 0x1E	; 30
     f52:	91 05       	cpc	r25, r1
     f54:	09 f4       	brne	.+2      	; 0xf58 <__vector_1+0x74>
     f56:	40 c0       	rjmp	.+128    	; 0xfd8 <__vector_1+0xf4>
     f58:	83 32       	cpi	r24, 0x23	; 35
     f5a:	91 05       	cpc	r25, r1
     f5c:	09 f4       	brne	.+2      	; 0xf60 <__vector_1+0x7c>
     f5e:	48 c0       	rjmp	.+144    	; 0xff0 <__vector_1+0x10c>
     f60:	49 97       	sbiw	r24, 0x19	; 25
     f62:	09 f0       	breq	.+2      	; 0xf66 <__vector_1+0x82>
     f64:	6c c0       	rjmp	.+216    	; 0x103e <__vector_1+0x15a>
     f66:	3a c0       	rjmp	.+116    	; 0xfdc <__vector_1+0xf8>
     f68:	8c 33       	cpi	r24, 0x3C	; 60
     f6a:	91 05       	cpc	r25, r1
     f6c:	a9 f1       	breq	.+106    	; 0xfd8 <__vector_1+0xf4>
     f6e:	8d 33       	cpi	r24, 0x3D	; 61
     f70:	91 05       	cpc	r25, r1
     f72:	58 f4       	brcc	.+22     	; 0xf8a <__vector_1+0xa6>
     f74:	82 33       	cpi	r24, 0x32	; 50
     f76:	91 05       	cpc	r25, r1
     f78:	79 f1       	breq	.+94     	; 0xfd8 <__vector_1+0xf4>
     f7a:	87 33       	cpi	r24, 0x37	; 55
     f7c:	91 05       	cpc	r25, r1
     f7e:	09 f4       	brne	.+2      	; 0xf82 <__vector_1+0x9e>
     f80:	4b c0       	rjmp	.+150    	; 0x1018 <__vector_1+0x134>
     f82:	8d 97       	sbiw	r24, 0x2d	; 45
     f84:	09 f0       	breq	.+2      	; 0xf88 <__vector_1+0xa4>
     f86:	5b c0       	rjmp	.+182    	; 0x103e <__vector_1+0x15a>
     f88:	3d c0       	rjmp	.+122    	; 0x1004 <__vector_1+0x120>
     f8a:	86 34       	cpi	r24, 0x46	; 70
     f8c:	91 05       	cpc	r25, r1
     f8e:	21 f1       	breq	.+72     	; 0xfd8 <__vector_1+0xf4>
     f90:	80 35       	cpi	r24, 0x50	; 80
     f92:	91 05       	cpc	r25, r1
     f94:	09 f1       	breq	.+66     	; 0xfd8 <__vector_1+0xf4>
     f96:	81 34       	cpi	r24, 0x41	; 65
     f98:	91 05       	cpc	r25, r1
     f9a:	09 f0       	breq	.+2      	; 0xf9e <__vector_1+0xba>
     f9c:	50 c0       	rjmp	.+160    	; 0x103e <__vector_1+0x15a>
     f9e:	46 c0       	rjmp	.+140    	; 0x102c <__vector_1+0x148>
	{
		case 0:
			if(pause == true)
     fa0:	80 91 30 01 	lds	r24, 0x0130
     fa4:	88 23       	and	r24, r24
     fa6:	11 f0       	breq	.+4      	; 0xfac <__vector_1+0xc8>
				pause = false;
     fa8:	10 92 30 01 	sts	0x0130, r1
			menu = 10;
     fac:	8a e0       	ldi	r24, 0x0A	; 10
     fae:	90 e0       	ldi	r25, 0x00	; 0
     fb0:	0e c0       	rjmp	.+28     	; 0xfce <__vector_1+0xea>
			break;
		case 10:
			if(pause == false)
     fb2:	80 91 30 01 	lds	r24, 0x0130
     fb6:	88 23       	and	r24, r24
     fb8:	19 f4       	brne	.+6      	; 0xfc0 <__vector_1+0xdc>
				pause = true;	
     fba:	81 e0       	ldi	r24, 0x01	; 1
     fbc:	80 93 30 01 	sts	0x0130, r24
			menu = 0;
     fc0:	10 92 4d 02 	sts	0x024D, r1
     fc4:	10 92 4c 02 	sts	0x024C, r1
     fc8:	3a c0       	rjmp	.+116    	; 0x103e <__vector_1+0x15a>
			break;
		case 20:
			menu = 80;
     fca:	80 e5       	ldi	r24, 0x50	; 80
     fcc:	90 e0       	ldi	r25, 0x00	; 0
     fce:	90 93 4d 02 	sts	0x024D, r25
     fd2:	80 93 4c 02 	sts	0x024C, r24
     fd6:	33 c0       	rjmp	.+102    	; 0x103e <__vector_1+0x15a>
		case 40:
		case 50:			
		case 60:
		case 70:
		case 80:
			menu -= 10;	
     fd8:	0a 97       	sbiw	r24, 0x0a	; 10
     fda:	f9 cf       	rjmp	.-14     	; 0xfce <__vector_1+0xea>
			break;
		case 25:
			maxspeed--;
     fdc:	80 91 32 01 	lds	r24, 0x0132
     fe0:	90 91 33 01 	lds	r25, 0x0133
     fe4:	01 97       	sbiw	r24, 0x01	; 1
     fe6:	90 93 33 01 	sts	0x0133, r25
     fea:	80 93 32 01 	sts	0x0132, r24
     fee:	27 c0       	rjmp	.+78     	; 0x103e <__vector_1+0x15a>
			break;
		case 35:
			basespeed--;
     ff0:	80 91 34 01 	lds	r24, 0x0134
     ff4:	90 91 35 01 	lds	r25, 0x0135
     ff8:	01 97       	sbiw	r24, 0x01	; 1
     ffa:	90 93 35 01 	sts	0x0135, r25
     ffe:	80 93 34 01 	sts	0x0134, r24
    1002:	1d c0       	rjmp	.+58     	; 0x103e <__vector_1+0x15a>
			break;
		case 45:
			Kp--;
    1004:	80 91 36 01 	lds	r24, 0x0136
    1008:	90 91 37 01 	lds	r25, 0x0137
    100c:	01 97       	sbiw	r24, 0x01	; 1
    100e:	90 93 37 01 	sts	0x0137, r25
    1012:	80 93 36 01 	sts	0x0136, r24
    1016:	13 c0       	rjmp	.+38     	; 0x103e <__vector_1+0x15a>
			break;
		case 55:
			Ki--;
    1018:	80 91 38 01 	lds	r24, 0x0138
    101c:	90 91 39 01 	lds	r25, 0x0139
    1020:	01 97       	sbiw	r24, 0x01	; 1
    1022:	90 93 39 01 	sts	0x0139, r25
    1026:	80 93 38 01 	sts	0x0138, r24
    102a:	09 c0       	rjmp	.+18     	; 0x103e <__vector_1+0x15a>
			break;
		case 65:
			Kd--;
    102c:	80 91 3a 01 	lds	r24, 0x013A
    1030:	90 91 3b 01 	lds	r25, 0x013B
    1034:	01 97       	sbiw	r24, 0x01	; 1
    1036:	90 93 3b 01 	sts	0x013B, r25
    103a:	80 93 3a 01 	sts	0x013A, r24
			break;
	}
	DispMenu(menu);
    103e:	80 91 4c 02 	lds	r24, 0x024C
    1042:	90 91 4d 02 	lds	r25, 0x024D
    1046:	0e 94 3f 03 	call	0x67e	; 0x67e <DispMenu>
}
    104a:	ff 91       	pop	r31
    104c:	ef 91       	pop	r30
    104e:	bf 91       	pop	r27
    1050:	af 91       	pop	r26
    1052:	9f 91       	pop	r25
    1054:	8f 91       	pop	r24
    1056:	7f 91       	pop	r23
    1058:	6f 91       	pop	r22
    105a:	5f 91       	pop	r21
    105c:	4f 91       	pop	r20
    105e:	3f 91       	pop	r19
    1060:	2f 91       	pop	r18
    1062:	0f 90       	pop	r0
    1064:	0f be       	out	0x3f, r0	; 63
    1066:	0f 90       	pop	r0
    1068:	1f 90       	pop	r1
    106a:	18 95       	reti

0000106c <__fixunssfsi>:
    106c:	ef 92       	push	r14
    106e:	ff 92       	push	r15
    1070:	0f 93       	push	r16
    1072:	1f 93       	push	r17
    1074:	7b 01       	movw	r14, r22
    1076:	8c 01       	movw	r16, r24
    1078:	20 e0       	ldi	r18, 0x00	; 0
    107a:	30 e0       	ldi	r19, 0x00	; 0
    107c:	40 e0       	ldi	r20, 0x00	; 0
    107e:	5f e4       	ldi	r21, 0x4F	; 79
    1080:	0e 94 12 0c 	call	0x1824	; 0x1824 <__gesf2>
    1084:	88 23       	and	r24, r24
    1086:	8c f0       	brlt	.+34     	; 0x10aa <__fixunssfsi+0x3e>
    1088:	c8 01       	movw	r24, r16
    108a:	b7 01       	movw	r22, r14
    108c:	20 e0       	ldi	r18, 0x00	; 0
    108e:	30 e0       	ldi	r19, 0x00	; 0
    1090:	40 e0       	ldi	r20, 0x00	; 0
    1092:	5f e4       	ldi	r21, 0x4F	; 79
    1094:	0e 94 ae 09 	call	0x135c	; 0x135c <__subsf3>
    1098:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <__fixsfsi>
    109c:	9b 01       	movw	r18, r22
    109e:	ac 01       	movw	r20, r24
    10a0:	20 50       	subi	r18, 0x00	; 0
    10a2:	30 40       	sbci	r19, 0x00	; 0
    10a4:	40 40       	sbci	r20, 0x00	; 0
    10a6:	50 48       	sbci	r21, 0x80	; 128
    10a8:	06 c0       	rjmp	.+12     	; 0x10b6 <__fixunssfsi+0x4a>
    10aa:	c8 01       	movw	r24, r16
    10ac:	b7 01       	movw	r22, r14
    10ae:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <__fixsfsi>
    10b2:	9b 01       	movw	r18, r22
    10b4:	ac 01       	movw	r20, r24
    10b6:	b9 01       	movw	r22, r18
    10b8:	ca 01       	movw	r24, r20
    10ba:	1f 91       	pop	r17
    10bc:	0f 91       	pop	r16
    10be:	ff 90       	pop	r15
    10c0:	ef 90       	pop	r14
    10c2:	08 95       	ret

000010c4 <_fpadd_parts>:
    10c4:	a0 e0       	ldi	r26, 0x00	; 0
    10c6:	b0 e0       	ldi	r27, 0x00	; 0
    10c8:	e8 e6       	ldi	r30, 0x68	; 104
    10ca:	f8 e0       	ldi	r31, 0x08	; 8
    10cc:	0c 94 b9 0f 	jmp	0x1f72	; 0x1f72 <__prologue_saves__>
    10d0:	dc 01       	movw	r26, r24
    10d2:	2b 01       	movw	r4, r22
    10d4:	fa 01       	movw	r30, r20
    10d6:	9c 91       	ld	r25, X
    10d8:	92 30       	cpi	r25, 0x02	; 2
    10da:	08 f4       	brcc	.+2      	; 0x10de <_fpadd_parts+0x1a>
    10dc:	39 c1       	rjmp	.+626    	; 0x1350 <_fpadd_parts+0x28c>
    10de:	eb 01       	movw	r28, r22
    10e0:	88 81       	ld	r24, Y
    10e2:	82 30       	cpi	r24, 0x02	; 2
    10e4:	08 f4       	brcc	.+2      	; 0x10e8 <_fpadd_parts+0x24>
    10e6:	33 c1       	rjmp	.+614    	; 0x134e <_fpadd_parts+0x28a>
    10e8:	94 30       	cpi	r25, 0x04	; 4
    10ea:	69 f4       	brne	.+26     	; 0x1106 <_fpadd_parts+0x42>
    10ec:	84 30       	cpi	r24, 0x04	; 4
    10ee:	09 f0       	breq	.+2      	; 0x10f2 <_fpadd_parts+0x2e>
    10f0:	2f c1       	rjmp	.+606    	; 0x1350 <_fpadd_parts+0x28c>
    10f2:	11 96       	adiw	r26, 0x01	; 1
    10f4:	9c 91       	ld	r25, X
    10f6:	11 97       	sbiw	r26, 0x01	; 1
    10f8:	89 81       	ldd	r24, Y+1	; 0x01
    10fa:	98 17       	cp	r25, r24
    10fc:	09 f4       	brne	.+2      	; 0x1100 <_fpadd_parts+0x3c>
    10fe:	28 c1       	rjmp	.+592    	; 0x1350 <_fpadd_parts+0x28c>
    1100:	ac e3       	ldi	r26, 0x3C	; 60
    1102:	b1 e0       	ldi	r27, 0x01	; 1
    1104:	25 c1       	rjmp	.+586    	; 0x1350 <_fpadd_parts+0x28c>
    1106:	84 30       	cpi	r24, 0x04	; 4
    1108:	09 f4       	brne	.+2      	; 0x110c <_fpadd_parts+0x48>
    110a:	21 c1       	rjmp	.+578    	; 0x134e <_fpadd_parts+0x28a>
    110c:	82 30       	cpi	r24, 0x02	; 2
    110e:	a9 f4       	brne	.+42     	; 0x113a <_fpadd_parts+0x76>
    1110:	92 30       	cpi	r25, 0x02	; 2
    1112:	09 f0       	breq	.+2      	; 0x1116 <_fpadd_parts+0x52>
    1114:	1d c1       	rjmp	.+570    	; 0x1350 <_fpadd_parts+0x28c>
    1116:	9a 01       	movw	r18, r20
    1118:	ad 01       	movw	r20, r26
    111a:	88 e0       	ldi	r24, 0x08	; 8
    111c:	ea 01       	movw	r28, r20
    111e:	09 90       	ld	r0, Y+
    1120:	ae 01       	movw	r20, r28
    1122:	e9 01       	movw	r28, r18
    1124:	09 92       	st	Y+, r0
    1126:	9e 01       	movw	r18, r28
    1128:	81 50       	subi	r24, 0x01	; 1
    112a:	c1 f7       	brne	.-16     	; 0x111c <_fpadd_parts+0x58>
    112c:	e2 01       	movw	r28, r4
    112e:	89 81       	ldd	r24, Y+1	; 0x01
    1130:	11 96       	adiw	r26, 0x01	; 1
    1132:	9c 91       	ld	r25, X
    1134:	89 23       	and	r24, r25
    1136:	81 83       	std	Z+1, r24	; 0x01
    1138:	08 c1       	rjmp	.+528    	; 0x134a <_fpadd_parts+0x286>
    113a:	92 30       	cpi	r25, 0x02	; 2
    113c:	09 f4       	brne	.+2      	; 0x1140 <_fpadd_parts+0x7c>
    113e:	07 c1       	rjmp	.+526    	; 0x134e <_fpadd_parts+0x28a>
    1140:	12 96       	adiw	r26, 0x02	; 2
    1142:	2d 90       	ld	r2, X+
    1144:	3c 90       	ld	r3, X
    1146:	13 97       	sbiw	r26, 0x03	; 3
    1148:	eb 01       	movw	r28, r22
    114a:	8a 81       	ldd	r24, Y+2	; 0x02
    114c:	9b 81       	ldd	r25, Y+3	; 0x03
    114e:	14 96       	adiw	r26, 0x04	; 4
    1150:	ad 90       	ld	r10, X+
    1152:	bd 90       	ld	r11, X+
    1154:	cd 90       	ld	r12, X+
    1156:	dc 90       	ld	r13, X
    1158:	17 97       	sbiw	r26, 0x07	; 7
    115a:	ec 80       	ldd	r14, Y+4	; 0x04
    115c:	fd 80       	ldd	r15, Y+5	; 0x05
    115e:	0e 81       	ldd	r16, Y+6	; 0x06
    1160:	1f 81       	ldd	r17, Y+7	; 0x07
    1162:	91 01       	movw	r18, r2
    1164:	28 1b       	sub	r18, r24
    1166:	39 0b       	sbc	r19, r25
    1168:	b9 01       	movw	r22, r18
    116a:	37 ff       	sbrs	r19, 7
    116c:	04 c0       	rjmp	.+8      	; 0x1176 <_fpadd_parts+0xb2>
    116e:	66 27       	eor	r22, r22
    1170:	77 27       	eor	r23, r23
    1172:	62 1b       	sub	r22, r18
    1174:	73 0b       	sbc	r23, r19
    1176:	60 32       	cpi	r22, 0x20	; 32
    1178:	71 05       	cpc	r23, r1
    117a:	0c f0       	brlt	.+2      	; 0x117e <_fpadd_parts+0xba>
    117c:	61 c0       	rjmp	.+194    	; 0x1240 <_fpadd_parts+0x17c>
    117e:	12 16       	cp	r1, r18
    1180:	13 06       	cpc	r1, r19
    1182:	6c f5       	brge	.+90     	; 0x11de <_fpadd_parts+0x11a>
    1184:	37 01       	movw	r6, r14
    1186:	48 01       	movw	r8, r16
    1188:	06 2e       	mov	r0, r22
    118a:	04 c0       	rjmp	.+8      	; 0x1194 <_fpadd_parts+0xd0>
    118c:	96 94       	lsr	r9
    118e:	87 94       	ror	r8
    1190:	77 94       	ror	r7
    1192:	67 94       	ror	r6
    1194:	0a 94       	dec	r0
    1196:	d2 f7       	brpl	.-12     	; 0x118c <_fpadd_parts+0xc8>
    1198:	21 e0       	ldi	r18, 0x01	; 1
    119a:	30 e0       	ldi	r19, 0x00	; 0
    119c:	40 e0       	ldi	r20, 0x00	; 0
    119e:	50 e0       	ldi	r21, 0x00	; 0
    11a0:	04 c0       	rjmp	.+8      	; 0x11aa <_fpadd_parts+0xe6>
    11a2:	22 0f       	add	r18, r18
    11a4:	33 1f       	adc	r19, r19
    11a6:	44 1f       	adc	r20, r20
    11a8:	55 1f       	adc	r21, r21
    11aa:	6a 95       	dec	r22
    11ac:	d2 f7       	brpl	.-12     	; 0x11a2 <_fpadd_parts+0xde>
    11ae:	21 50       	subi	r18, 0x01	; 1
    11b0:	30 40       	sbci	r19, 0x00	; 0
    11b2:	40 40       	sbci	r20, 0x00	; 0
    11b4:	50 40       	sbci	r21, 0x00	; 0
    11b6:	2e 21       	and	r18, r14
    11b8:	3f 21       	and	r19, r15
    11ba:	40 23       	and	r20, r16
    11bc:	51 23       	and	r21, r17
    11be:	21 15       	cp	r18, r1
    11c0:	31 05       	cpc	r19, r1
    11c2:	41 05       	cpc	r20, r1
    11c4:	51 05       	cpc	r21, r1
    11c6:	21 f0       	breq	.+8      	; 0x11d0 <_fpadd_parts+0x10c>
    11c8:	21 e0       	ldi	r18, 0x01	; 1
    11ca:	30 e0       	ldi	r19, 0x00	; 0
    11cc:	40 e0       	ldi	r20, 0x00	; 0
    11ce:	50 e0       	ldi	r21, 0x00	; 0
    11d0:	79 01       	movw	r14, r18
    11d2:	8a 01       	movw	r16, r20
    11d4:	e6 28       	or	r14, r6
    11d6:	f7 28       	or	r15, r7
    11d8:	08 29       	or	r16, r8
    11da:	19 29       	or	r17, r9
    11dc:	3c c0       	rjmp	.+120    	; 0x1256 <_fpadd_parts+0x192>
    11de:	23 2b       	or	r18, r19
    11e0:	d1 f1       	breq	.+116    	; 0x1256 <_fpadd_parts+0x192>
    11e2:	26 0e       	add	r2, r22
    11e4:	37 1e       	adc	r3, r23
    11e6:	35 01       	movw	r6, r10
    11e8:	46 01       	movw	r8, r12
    11ea:	06 2e       	mov	r0, r22
    11ec:	04 c0       	rjmp	.+8      	; 0x11f6 <_fpadd_parts+0x132>
    11ee:	96 94       	lsr	r9
    11f0:	87 94       	ror	r8
    11f2:	77 94       	ror	r7
    11f4:	67 94       	ror	r6
    11f6:	0a 94       	dec	r0
    11f8:	d2 f7       	brpl	.-12     	; 0x11ee <_fpadd_parts+0x12a>
    11fa:	21 e0       	ldi	r18, 0x01	; 1
    11fc:	30 e0       	ldi	r19, 0x00	; 0
    11fe:	40 e0       	ldi	r20, 0x00	; 0
    1200:	50 e0       	ldi	r21, 0x00	; 0
    1202:	04 c0       	rjmp	.+8      	; 0x120c <_fpadd_parts+0x148>
    1204:	22 0f       	add	r18, r18
    1206:	33 1f       	adc	r19, r19
    1208:	44 1f       	adc	r20, r20
    120a:	55 1f       	adc	r21, r21
    120c:	6a 95       	dec	r22
    120e:	d2 f7       	brpl	.-12     	; 0x1204 <_fpadd_parts+0x140>
    1210:	21 50       	subi	r18, 0x01	; 1
    1212:	30 40       	sbci	r19, 0x00	; 0
    1214:	40 40       	sbci	r20, 0x00	; 0
    1216:	50 40       	sbci	r21, 0x00	; 0
    1218:	2a 21       	and	r18, r10
    121a:	3b 21       	and	r19, r11
    121c:	4c 21       	and	r20, r12
    121e:	5d 21       	and	r21, r13
    1220:	21 15       	cp	r18, r1
    1222:	31 05       	cpc	r19, r1
    1224:	41 05       	cpc	r20, r1
    1226:	51 05       	cpc	r21, r1
    1228:	21 f0       	breq	.+8      	; 0x1232 <_fpadd_parts+0x16e>
    122a:	21 e0       	ldi	r18, 0x01	; 1
    122c:	30 e0       	ldi	r19, 0x00	; 0
    122e:	40 e0       	ldi	r20, 0x00	; 0
    1230:	50 e0       	ldi	r21, 0x00	; 0
    1232:	59 01       	movw	r10, r18
    1234:	6a 01       	movw	r12, r20
    1236:	a6 28       	or	r10, r6
    1238:	b7 28       	or	r11, r7
    123a:	c8 28       	or	r12, r8
    123c:	d9 28       	or	r13, r9
    123e:	0b c0       	rjmp	.+22     	; 0x1256 <_fpadd_parts+0x192>
    1240:	82 15       	cp	r24, r2
    1242:	93 05       	cpc	r25, r3
    1244:	2c f0       	brlt	.+10     	; 0x1250 <_fpadd_parts+0x18c>
    1246:	1c 01       	movw	r2, r24
    1248:	aa 24       	eor	r10, r10
    124a:	bb 24       	eor	r11, r11
    124c:	65 01       	movw	r12, r10
    124e:	03 c0       	rjmp	.+6      	; 0x1256 <_fpadd_parts+0x192>
    1250:	ee 24       	eor	r14, r14
    1252:	ff 24       	eor	r15, r15
    1254:	87 01       	movw	r16, r14
    1256:	11 96       	adiw	r26, 0x01	; 1
    1258:	9c 91       	ld	r25, X
    125a:	d2 01       	movw	r26, r4
    125c:	11 96       	adiw	r26, 0x01	; 1
    125e:	8c 91       	ld	r24, X
    1260:	98 17       	cp	r25, r24
    1262:	09 f4       	brne	.+2      	; 0x1266 <_fpadd_parts+0x1a2>
    1264:	45 c0       	rjmp	.+138    	; 0x12f0 <_fpadd_parts+0x22c>
    1266:	99 23       	and	r25, r25
    1268:	39 f0       	breq	.+14     	; 0x1278 <_fpadd_parts+0x1b4>
    126a:	a8 01       	movw	r20, r16
    126c:	97 01       	movw	r18, r14
    126e:	2a 19       	sub	r18, r10
    1270:	3b 09       	sbc	r19, r11
    1272:	4c 09       	sbc	r20, r12
    1274:	5d 09       	sbc	r21, r13
    1276:	06 c0       	rjmp	.+12     	; 0x1284 <_fpadd_parts+0x1c0>
    1278:	a6 01       	movw	r20, r12
    127a:	95 01       	movw	r18, r10
    127c:	2e 19       	sub	r18, r14
    127e:	3f 09       	sbc	r19, r15
    1280:	40 0b       	sbc	r20, r16
    1282:	51 0b       	sbc	r21, r17
    1284:	57 fd       	sbrc	r21, 7
    1286:	08 c0       	rjmp	.+16     	; 0x1298 <_fpadd_parts+0x1d4>
    1288:	11 82       	std	Z+1, r1	; 0x01
    128a:	33 82       	std	Z+3, r3	; 0x03
    128c:	22 82       	std	Z+2, r2	; 0x02
    128e:	24 83       	std	Z+4, r18	; 0x04
    1290:	35 83       	std	Z+5, r19	; 0x05
    1292:	46 83       	std	Z+6, r20	; 0x06
    1294:	57 83       	std	Z+7, r21	; 0x07
    1296:	1d c0       	rjmp	.+58     	; 0x12d2 <_fpadd_parts+0x20e>
    1298:	81 e0       	ldi	r24, 0x01	; 1
    129a:	81 83       	std	Z+1, r24	; 0x01
    129c:	33 82       	std	Z+3, r3	; 0x03
    129e:	22 82       	std	Z+2, r2	; 0x02
    12a0:	88 27       	eor	r24, r24
    12a2:	99 27       	eor	r25, r25
    12a4:	dc 01       	movw	r26, r24
    12a6:	82 1b       	sub	r24, r18
    12a8:	93 0b       	sbc	r25, r19
    12aa:	a4 0b       	sbc	r26, r20
    12ac:	b5 0b       	sbc	r27, r21
    12ae:	84 83       	std	Z+4, r24	; 0x04
    12b0:	95 83       	std	Z+5, r25	; 0x05
    12b2:	a6 83       	std	Z+6, r26	; 0x06
    12b4:	b7 83       	std	Z+7, r27	; 0x07
    12b6:	0d c0       	rjmp	.+26     	; 0x12d2 <_fpadd_parts+0x20e>
    12b8:	22 0f       	add	r18, r18
    12ba:	33 1f       	adc	r19, r19
    12bc:	44 1f       	adc	r20, r20
    12be:	55 1f       	adc	r21, r21
    12c0:	24 83       	std	Z+4, r18	; 0x04
    12c2:	35 83       	std	Z+5, r19	; 0x05
    12c4:	46 83       	std	Z+6, r20	; 0x06
    12c6:	57 83       	std	Z+7, r21	; 0x07
    12c8:	82 81       	ldd	r24, Z+2	; 0x02
    12ca:	93 81       	ldd	r25, Z+3	; 0x03
    12cc:	01 97       	sbiw	r24, 0x01	; 1
    12ce:	93 83       	std	Z+3, r25	; 0x03
    12d0:	82 83       	std	Z+2, r24	; 0x02
    12d2:	24 81       	ldd	r18, Z+4	; 0x04
    12d4:	35 81       	ldd	r19, Z+5	; 0x05
    12d6:	46 81       	ldd	r20, Z+6	; 0x06
    12d8:	57 81       	ldd	r21, Z+7	; 0x07
    12da:	da 01       	movw	r26, r20
    12dc:	c9 01       	movw	r24, r18
    12de:	01 97       	sbiw	r24, 0x01	; 1
    12e0:	a1 09       	sbc	r26, r1
    12e2:	b1 09       	sbc	r27, r1
    12e4:	8f 5f       	subi	r24, 0xFF	; 255
    12e6:	9f 4f       	sbci	r25, 0xFF	; 255
    12e8:	af 4f       	sbci	r26, 0xFF	; 255
    12ea:	bf 43       	sbci	r27, 0x3F	; 63
    12ec:	28 f3       	brcs	.-54     	; 0x12b8 <_fpadd_parts+0x1f4>
    12ee:	0b c0       	rjmp	.+22     	; 0x1306 <_fpadd_parts+0x242>
    12f0:	91 83       	std	Z+1, r25	; 0x01
    12f2:	33 82       	std	Z+3, r3	; 0x03
    12f4:	22 82       	std	Z+2, r2	; 0x02
    12f6:	ea 0c       	add	r14, r10
    12f8:	fb 1c       	adc	r15, r11
    12fa:	0c 1d       	adc	r16, r12
    12fc:	1d 1d       	adc	r17, r13
    12fe:	e4 82       	std	Z+4, r14	; 0x04
    1300:	f5 82       	std	Z+5, r15	; 0x05
    1302:	06 83       	std	Z+6, r16	; 0x06
    1304:	17 83       	std	Z+7, r17	; 0x07
    1306:	83 e0       	ldi	r24, 0x03	; 3
    1308:	80 83       	st	Z, r24
    130a:	24 81       	ldd	r18, Z+4	; 0x04
    130c:	35 81       	ldd	r19, Z+5	; 0x05
    130e:	46 81       	ldd	r20, Z+6	; 0x06
    1310:	57 81       	ldd	r21, Z+7	; 0x07
    1312:	57 ff       	sbrs	r21, 7
    1314:	1a c0       	rjmp	.+52     	; 0x134a <_fpadd_parts+0x286>
    1316:	c9 01       	movw	r24, r18
    1318:	aa 27       	eor	r26, r26
    131a:	97 fd       	sbrc	r25, 7
    131c:	a0 95       	com	r26
    131e:	ba 2f       	mov	r27, r26
    1320:	81 70       	andi	r24, 0x01	; 1
    1322:	90 70       	andi	r25, 0x00	; 0
    1324:	a0 70       	andi	r26, 0x00	; 0
    1326:	b0 70       	andi	r27, 0x00	; 0
    1328:	56 95       	lsr	r21
    132a:	47 95       	ror	r20
    132c:	37 95       	ror	r19
    132e:	27 95       	ror	r18
    1330:	82 2b       	or	r24, r18
    1332:	93 2b       	or	r25, r19
    1334:	a4 2b       	or	r26, r20
    1336:	b5 2b       	or	r27, r21
    1338:	84 83       	std	Z+4, r24	; 0x04
    133a:	95 83       	std	Z+5, r25	; 0x05
    133c:	a6 83       	std	Z+6, r26	; 0x06
    133e:	b7 83       	std	Z+7, r27	; 0x07
    1340:	82 81       	ldd	r24, Z+2	; 0x02
    1342:	93 81       	ldd	r25, Z+3	; 0x03
    1344:	01 96       	adiw	r24, 0x01	; 1
    1346:	93 83       	std	Z+3, r25	; 0x03
    1348:	82 83       	std	Z+2, r24	; 0x02
    134a:	df 01       	movw	r26, r30
    134c:	01 c0       	rjmp	.+2      	; 0x1350 <_fpadd_parts+0x28c>
    134e:	d2 01       	movw	r26, r4
    1350:	cd 01       	movw	r24, r26
    1352:	cd b7       	in	r28, 0x3d	; 61
    1354:	de b7       	in	r29, 0x3e	; 62
    1356:	e2 e1       	ldi	r30, 0x12	; 18
    1358:	0c 94 d5 0f 	jmp	0x1faa	; 0x1faa <__epilogue_restores__>

0000135c <__subsf3>:
    135c:	a0 e2       	ldi	r26, 0x20	; 32
    135e:	b0 e0       	ldi	r27, 0x00	; 0
    1360:	e4 eb       	ldi	r30, 0xB4	; 180
    1362:	f9 e0       	ldi	r31, 0x09	; 9
    1364:	0c 94 c5 0f 	jmp	0x1f8a	; 0x1f8a <__prologue_saves__+0x18>
    1368:	69 83       	std	Y+1, r22	; 0x01
    136a:	7a 83       	std	Y+2, r23	; 0x02
    136c:	8b 83       	std	Y+3, r24	; 0x03
    136e:	9c 83       	std	Y+4, r25	; 0x04
    1370:	2d 83       	std	Y+5, r18	; 0x05
    1372:	3e 83       	std	Y+6, r19	; 0x06
    1374:	4f 83       	std	Y+7, r20	; 0x07
    1376:	58 87       	std	Y+8, r21	; 0x08
    1378:	e9 e0       	ldi	r30, 0x09	; 9
    137a:	ee 2e       	mov	r14, r30
    137c:	f1 2c       	mov	r15, r1
    137e:	ec 0e       	add	r14, r28
    1380:	fd 1e       	adc	r15, r29
    1382:	ce 01       	movw	r24, r28
    1384:	01 96       	adiw	r24, 0x01	; 1
    1386:	b7 01       	movw	r22, r14
    1388:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <__unpack_f>
    138c:	8e 01       	movw	r16, r28
    138e:	0f 5e       	subi	r16, 0xEF	; 239
    1390:	1f 4f       	sbci	r17, 0xFF	; 255
    1392:	ce 01       	movw	r24, r28
    1394:	05 96       	adiw	r24, 0x05	; 5
    1396:	b8 01       	movw	r22, r16
    1398:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <__unpack_f>
    139c:	8a 89       	ldd	r24, Y+18	; 0x12
    139e:	91 e0       	ldi	r25, 0x01	; 1
    13a0:	89 27       	eor	r24, r25
    13a2:	8a 8b       	std	Y+18, r24	; 0x12
    13a4:	c7 01       	movw	r24, r14
    13a6:	b8 01       	movw	r22, r16
    13a8:	ae 01       	movw	r20, r28
    13aa:	47 5e       	subi	r20, 0xE7	; 231
    13ac:	5f 4f       	sbci	r21, 0xFF	; 255
    13ae:	0e 94 62 08 	call	0x10c4	; 0x10c4 <_fpadd_parts>
    13b2:	0e 94 ec 0d 	call	0x1bd8	; 0x1bd8 <__pack_f>
    13b6:	a0 96       	adiw	r28, 0x20	; 32
    13b8:	e6 e0       	ldi	r30, 0x06	; 6
    13ba:	0c 94 e1 0f 	jmp	0x1fc2	; 0x1fc2 <__epilogue_restores__+0x18>

000013be <__addsf3>:
    13be:	a0 e2       	ldi	r26, 0x20	; 32
    13c0:	b0 e0       	ldi	r27, 0x00	; 0
    13c2:	e5 ee       	ldi	r30, 0xE5	; 229
    13c4:	f9 e0       	ldi	r31, 0x09	; 9
    13c6:	0c 94 c5 0f 	jmp	0x1f8a	; 0x1f8a <__prologue_saves__+0x18>
    13ca:	69 83       	std	Y+1, r22	; 0x01
    13cc:	7a 83       	std	Y+2, r23	; 0x02
    13ce:	8b 83       	std	Y+3, r24	; 0x03
    13d0:	9c 83       	std	Y+4, r25	; 0x04
    13d2:	2d 83       	std	Y+5, r18	; 0x05
    13d4:	3e 83       	std	Y+6, r19	; 0x06
    13d6:	4f 83       	std	Y+7, r20	; 0x07
    13d8:	58 87       	std	Y+8, r21	; 0x08
    13da:	f9 e0       	ldi	r31, 0x09	; 9
    13dc:	ef 2e       	mov	r14, r31
    13de:	f1 2c       	mov	r15, r1
    13e0:	ec 0e       	add	r14, r28
    13e2:	fd 1e       	adc	r15, r29
    13e4:	ce 01       	movw	r24, r28
    13e6:	01 96       	adiw	r24, 0x01	; 1
    13e8:	b7 01       	movw	r22, r14
    13ea:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <__unpack_f>
    13ee:	8e 01       	movw	r16, r28
    13f0:	0f 5e       	subi	r16, 0xEF	; 239
    13f2:	1f 4f       	sbci	r17, 0xFF	; 255
    13f4:	ce 01       	movw	r24, r28
    13f6:	05 96       	adiw	r24, 0x05	; 5
    13f8:	b8 01       	movw	r22, r16
    13fa:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <__unpack_f>
    13fe:	c7 01       	movw	r24, r14
    1400:	b8 01       	movw	r22, r16
    1402:	ae 01       	movw	r20, r28
    1404:	47 5e       	subi	r20, 0xE7	; 231
    1406:	5f 4f       	sbci	r21, 0xFF	; 255
    1408:	0e 94 62 08 	call	0x10c4	; 0x10c4 <_fpadd_parts>
    140c:	0e 94 ec 0d 	call	0x1bd8	; 0x1bd8 <__pack_f>
    1410:	a0 96       	adiw	r28, 0x20	; 32
    1412:	e6 e0       	ldi	r30, 0x06	; 6
    1414:	0c 94 e1 0f 	jmp	0x1fc2	; 0x1fc2 <__epilogue_restores__+0x18>

00001418 <__mulsf3>:
    1418:	a0 e2       	ldi	r26, 0x20	; 32
    141a:	b0 e0       	ldi	r27, 0x00	; 0
    141c:	e2 e1       	ldi	r30, 0x12	; 18
    141e:	fa e0       	ldi	r31, 0x0A	; 10
    1420:	0c 94 b9 0f 	jmp	0x1f72	; 0x1f72 <__prologue_saves__>
    1424:	69 83       	std	Y+1, r22	; 0x01
    1426:	7a 83       	std	Y+2, r23	; 0x02
    1428:	8b 83       	std	Y+3, r24	; 0x03
    142a:	9c 83       	std	Y+4, r25	; 0x04
    142c:	2d 83       	std	Y+5, r18	; 0x05
    142e:	3e 83       	std	Y+6, r19	; 0x06
    1430:	4f 83       	std	Y+7, r20	; 0x07
    1432:	58 87       	std	Y+8, r21	; 0x08
    1434:	ce 01       	movw	r24, r28
    1436:	01 96       	adiw	r24, 0x01	; 1
    1438:	be 01       	movw	r22, r28
    143a:	67 5f       	subi	r22, 0xF7	; 247
    143c:	7f 4f       	sbci	r23, 0xFF	; 255
    143e:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <__unpack_f>
    1442:	ce 01       	movw	r24, r28
    1444:	05 96       	adiw	r24, 0x05	; 5
    1446:	be 01       	movw	r22, r28
    1448:	6f 5e       	subi	r22, 0xEF	; 239
    144a:	7f 4f       	sbci	r23, 0xFF	; 255
    144c:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <__unpack_f>
    1450:	99 85       	ldd	r25, Y+9	; 0x09
    1452:	92 30       	cpi	r25, 0x02	; 2
    1454:	88 f0       	brcs	.+34     	; 0x1478 <__mulsf3+0x60>
    1456:	89 89       	ldd	r24, Y+17	; 0x11
    1458:	82 30       	cpi	r24, 0x02	; 2
    145a:	c8 f0       	brcs	.+50     	; 0x148e <__mulsf3+0x76>
    145c:	94 30       	cpi	r25, 0x04	; 4
    145e:	19 f4       	brne	.+6      	; 0x1466 <__mulsf3+0x4e>
    1460:	82 30       	cpi	r24, 0x02	; 2
    1462:	51 f4       	brne	.+20     	; 0x1478 <__mulsf3+0x60>
    1464:	04 c0       	rjmp	.+8      	; 0x146e <__mulsf3+0x56>
    1466:	84 30       	cpi	r24, 0x04	; 4
    1468:	29 f4       	brne	.+10     	; 0x1474 <__mulsf3+0x5c>
    146a:	92 30       	cpi	r25, 0x02	; 2
    146c:	81 f4       	brne	.+32     	; 0x148e <__mulsf3+0x76>
    146e:	8c e3       	ldi	r24, 0x3C	; 60
    1470:	91 e0       	ldi	r25, 0x01	; 1
    1472:	c6 c0       	rjmp	.+396    	; 0x1600 <__mulsf3+0x1e8>
    1474:	92 30       	cpi	r25, 0x02	; 2
    1476:	49 f4       	brne	.+18     	; 0x148a <__mulsf3+0x72>
    1478:	20 e0       	ldi	r18, 0x00	; 0
    147a:	9a 85       	ldd	r25, Y+10	; 0x0a
    147c:	8a 89       	ldd	r24, Y+18	; 0x12
    147e:	98 13       	cpse	r25, r24
    1480:	21 e0       	ldi	r18, 0x01	; 1
    1482:	2a 87       	std	Y+10, r18	; 0x0a
    1484:	ce 01       	movw	r24, r28
    1486:	09 96       	adiw	r24, 0x09	; 9
    1488:	bb c0       	rjmp	.+374    	; 0x1600 <__mulsf3+0x1e8>
    148a:	82 30       	cpi	r24, 0x02	; 2
    148c:	49 f4       	brne	.+18     	; 0x14a0 <__mulsf3+0x88>
    148e:	20 e0       	ldi	r18, 0x00	; 0
    1490:	9a 85       	ldd	r25, Y+10	; 0x0a
    1492:	8a 89       	ldd	r24, Y+18	; 0x12
    1494:	98 13       	cpse	r25, r24
    1496:	21 e0       	ldi	r18, 0x01	; 1
    1498:	2a 8b       	std	Y+18, r18	; 0x12
    149a:	ce 01       	movw	r24, r28
    149c:	41 96       	adiw	r24, 0x11	; 17
    149e:	b0 c0       	rjmp	.+352    	; 0x1600 <__mulsf3+0x1e8>
    14a0:	2d 84       	ldd	r2, Y+13	; 0x0d
    14a2:	3e 84       	ldd	r3, Y+14	; 0x0e
    14a4:	4f 84       	ldd	r4, Y+15	; 0x0f
    14a6:	58 88       	ldd	r5, Y+16	; 0x10
    14a8:	6d 88       	ldd	r6, Y+21	; 0x15
    14aa:	7e 88       	ldd	r7, Y+22	; 0x16
    14ac:	8f 88       	ldd	r8, Y+23	; 0x17
    14ae:	98 8c       	ldd	r9, Y+24	; 0x18
    14b0:	ee 24       	eor	r14, r14
    14b2:	ff 24       	eor	r15, r15
    14b4:	87 01       	movw	r16, r14
    14b6:	aa 24       	eor	r10, r10
    14b8:	bb 24       	eor	r11, r11
    14ba:	65 01       	movw	r12, r10
    14bc:	40 e0       	ldi	r20, 0x00	; 0
    14be:	50 e0       	ldi	r21, 0x00	; 0
    14c0:	60 e0       	ldi	r22, 0x00	; 0
    14c2:	70 e0       	ldi	r23, 0x00	; 0
    14c4:	e0 e0       	ldi	r30, 0x00	; 0
    14c6:	f0 e0       	ldi	r31, 0x00	; 0
    14c8:	c1 01       	movw	r24, r2
    14ca:	81 70       	andi	r24, 0x01	; 1
    14cc:	90 70       	andi	r25, 0x00	; 0
    14ce:	89 2b       	or	r24, r25
    14d0:	e9 f0       	breq	.+58     	; 0x150c <__mulsf3+0xf4>
    14d2:	e6 0c       	add	r14, r6
    14d4:	f7 1c       	adc	r15, r7
    14d6:	08 1d       	adc	r16, r8
    14d8:	19 1d       	adc	r17, r9
    14da:	9a 01       	movw	r18, r20
    14dc:	ab 01       	movw	r20, r22
    14de:	2a 0d       	add	r18, r10
    14e0:	3b 1d       	adc	r19, r11
    14e2:	4c 1d       	adc	r20, r12
    14e4:	5d 1d       	adc	r21, r13
    14e6:	80 e0       	ldi	r24, 0x00	; 0
    14e8:	90 e0       	ldi	r25, 0x00	; 0
    14ea:	a0 e0       	ldi	r26, 0x00	; 0
    14ec:	b0 e0       	ldi	r27, 0x00	; 0
    14ee:	e6 14       	cp	r14, r6
    14f0:	f7 04       	cpc	r15, r7
    14f2:	08 05       	cpc	r16, r8
    14f4:	19 05       	cpc	r17, r9
    14f6:	20 f4       	brcc	.+8      	; 0x1500 <__mulsf3+0xe8>
    14f8:	81 e0       	ldi	r24, 0x01	; 1
    14fa:	90 e0       	ldi	r25, 0x00	; 0
    14fc:	a0 e0       	ldi	r26, 0x00	; 0
    14fe:	b0 e0       	ldi	r27, 0x00	; 0
    1500:	ba 01       	movw	r22, r20
    1502:	a9 01       	movw	r20, r18
    1504:	48 0f       	add	r20, r24
    1506:	59 1f       	adc	r21, r25
    1508:	6a 1f       	adc	r22, r26
    150a:	7b 1f       	adc	r23, r27
    150c:	aa 0c       	add	r10, r10
    150e:	bb 1c       	adc	r11, r11
    1510:	cc 1c       	adc	r12, r12
    1512:	dd 1c       	adc	r13, r13
    1514:	97 fe       	sbrs	r9, 7
    1516:	08 c0       	rjmp	.+16     	; 0x1528 <__mulsf3+0x110>
    1518:	81 e0       	ldi	r24, 0x01	; 1
    151a:	90 e0       	ldi	r25, 0x00	; 0
    151c:	a0 e0       	ldi	r26, 0x00	; 0
    151e:	b0 e0       	ldi	r27, 0x00	; 0
    1520:	a8 2a       	or	r10, r24
    1522:	b9 2a       	or	r11, r25
    1524:	ca 2a       	or	r12, r26
    1526:	db 2a       	or	r13, r27
    1528:	31 96       	adiw	r30, 0x01	; 1
    152a:	e0 32       	cpi	r30, 0x20	; 32
    152c:	f1 05       	cpc	r31, r1
    152e:	49 f0       	breq	.+18     	; 0x1542 <__mulsf3+0x12a>
    1530:	66 0c       	add	r6, r6
    1532:	77 1c       	adc	r7, r7
    1534:	88 1c       	adc	r8, r8
    1536:	99 1c       	adc	r9, r9
    1538:	56 94       	lsr	r5
    153a:	47 94       	ror	r4
    153c:	37 94       	ror	r3
    153e:	27 94       	ror	r2
    1540:	c3 cf       	rjmp	.-122    	; 0x14c8 <__mulsf3+0xb0>
    1542:	fa 85       	ldd	r31, Y+10	; 0x0a
    1544:	ea 89       	ldd	r30, Y+18	; 0x12
    1546:	2b 89       	ldd	r18, Y+19	; 0x13
    1548:	3c 89       	ldd	r19, Y+20	; 0x14
    154a:	8b 85       	ldd	r24, Y+11	; 0x0b
    154c:	9c 85       	ldd	r25, Y+12	; 0x0c
    154e:	28 0f       	add	r18, r24
    1550:	39 1f       	adc	r19, r25
    1552:	2e 5f       	subi	r18, 0xFE	; 254
    1554:	3f 4f       	sbci	r19, 0xFF	; 255
    1556:	17 c0       	rjmp	.+46     	; 0x1586 <__mulsf3+0x16e>
    1558:	ca 01       	movw	r24, r20
    155a:	81 70       	andi	r24, 0x01	; 1
    155c:	90 70       	andi	r25, 0x00	; 0
    155e:	89 2b       	or	r24, r25
    1560:	61 f0       	breq	.+24     	; 0x157a <__mulsf3+0x162>
    1562:	16 95       	lsr	r17
    1564:	07 95       	ror	r16
    1566:	f7 94       	ror	r15
    1568:	e7 94       	ror	r14
    156a:	80 e0       	ldi	r24, 0x00	; 0
    156c:	90 e0       	ldi	r25, 0x00	; 0
    156e:	a0 e0       	ldi	r26, 0x00	; 0
    1570:	b0 e8       	ldi	r27, 0x80	; 128
    1572:	e8 2a       	or	r14, r24
    1574:	f9 2a       	or	r15, r25
    1576:	0a 2b       	or	r16, r26
    1578:	1b 2b       	or	r17, r27
    157a:	76 95       	lsr	r23
    157c:	67 95       	ror	r22
    157e:	57 95       	ror	r21
    1580:	47 95       	ror	r20
    1582:	2f 5f       	subi	r18, 0xFF	; 255
    1584:	3f 4f       	sbci	r19, 0xFF	; 255
    1586:	77 fd       	sbrc	r23, 7
    1588:	e7 cf       	rjmp	.-50     	; 0x1558 <__mulsf3+0x140>
    158a:	0c c0       	rjmp	.+24     	; 0x15a4 <__mulsf3+0x18c>
    158c:	44 0f       	add	r20, r20
    158e:	55 1f       	adc	r21, r21
    1590:	66 1f       	adc	r22, r22
    1592:	77 1f       	adc	r23, r23
    1594:	17 fd       	sbrc	r17, 7
    1596:	41 60       	ori	r20, 0x01	; 1
    1598:	ee 0c       	add	r14, r14
    159a:	ff 1c       	adc	r15, r15
    159c:	00 1f       	adc	r16, r16
    159e:	11 1f       	adc	r17, r17
    15a0:	21 50       	subi	r18, 0x01	; 1
    15a2:	30 40       	sbci	r19, 0x00	; 0
    15a4:	40 30       	cpi	r20, 0x00	; 0
    15a6:	90 e0       	ldi	r25, 0x00	; 0
    15a8:	59 07       	cpc	r21, r25
    15aa:	90 e0       	ldi	r25, 0x00	; 0
    15ac:	69 07       	cpc	r22, r25
    15ae:	90 e4       	ldi	r25, 0x40	; 64
    15b0:	79 07       	cpc	r23, r25
    15b2:	60 f3       	brcs	.-40     	; 0x158c <__mulsf3+0x174>
    15b4:	2b 8f       	std	Y+27, r18	; 0x1b
    15b6:	3c 8f       	std	Y+28, r19	; 0x1c
    15b8:	db 01       	movw	r26, r22
    15ba:	ca 01       	movw	r24, r20
    15bc:	8f 77       	andi	r24, 0x7F	; 127
    15be:	90 70       	andi	r25, 0x00	; 0
    15c0:	a0 70       	andi	r26, 0x00	; 0
    15c2:	b0 70       	andi	r27, 0x00	; 0
    15c4:	80 34       	cpi	r24, 0x40	; 64
    15c6:	91 05       	cpc	r25, r1
    15c8:	a1 05       	cpc	r26, r1
    15ca:	b1 05       	cpc	r27, r1
    15cc:	61 f4       	brne	.+24     	; 0x15e6 <__mulsf3+0x1ce>
    15ce:	47 fd       	sbrc	r20, 7
    15d0:	0a c0       	rjmp	.+20     	; 0x15e6 <__mulsf3+0x1ce>
    15d2:	e1 14       	cp	r14, r1
    15d4:	f1 04       	cpc	r15, r1
    15d6:	01 05       	cpc	r16, r1
    15d8:	11 05       	cpc	r17, r1
    15da:	29 f0       	breq	.+10     	; 0x15e6 <__mulsf3+0x1ce>
    15dc:	40 5c       	subi	r20, 0xC0	; 192
    15de:	5f 4f       	sbci	r21, 0xFF	; 255
    15e0:	6f 4f       	sbci	r22, 0xFF	; 255
    15e2:	7f 4f       	sbci	r23, 0xFF	; 255
    15e4:	40 78       	andi	r20, 0x80	; 128
    15e6:	1a 8e       	std	Y+26, r1	; 0x1a
    15e8:	fe 17       	cp	r31, r30
    15ea:	11 f0       	breq	.+4      	; 0x15f0 <__mulsf3+0x1d8>
    15ec:	81 e0       	ldi	r24, 0x01	; 1
    15ee:	8a 8f       	std	Y+26, r24	; 0x1a
    15f0:	4d 8f       	std	Y+29, r20	; 0x1d
    15f2:	5e 8f       	std	Y+30, r21	; 0x1e
    15f4:	6f 8f       	std	Y+31, r22	; 0x1f
    15f6:	78 a3       	std	Y+32, r23	; 0x20
    15f8:	83 e0       	ldi	r24, 0x03	; 3
    15fa:	89 8f       	std	Y+25, r24	; 0x19
    15fc:	ce 01       	movw	r24, r28
    15fe:	49 96       	adiw	r24, 0x19	; 25
    1600:	0e 94 ec 0d 	call	0x1bd8	; 0x1bd8 <__pack_f>
    1604:	a0 96       	adiw	r28, 0x20	; 32
    1606:	e2 e1       	ldi	r30, 0x12	; 18
    1608:	0c 94 d5 0f 	jmp	0x1faa	; 0x1faa <__epilogue_restores__>

0000160c <__divsf3>:
    160c:	a8 e1       	ldi	r26, 0x18	; 24
    160e:	b0 e0       	ldi	r27, 0x00	; 0
    1610:	ec e0       	ldi	r30, 0x0C	; 12
    1612:	fb e0       	ldi	r31, 0x0B	; 11
    1614:	0c 94 c1 0f 	jmp	0x1f82	; 0x1f82 <__prologue_saves__+0x10>
    1618:	69 83       	std	Y+1, r22	; 0x01
    161a:	7a 83       	std	Y+2, r23	; 0x02
    161c:	8b 83       	std	Y+3, r24	; 0x03
    161e:	9c 83       	std	Y+4, r25	; 0x04
    1620:	2d 83       	std	Y+5, r18	; 0x05
    1622:	3e 83       	std	Y+6, r19	; 0x06
    1624:	4f 83       	std	Y+7, r20	; 0x07
    1626:	58 87       	std	Y+8, r21	; 0x08
    1628:	b9 e0       	ldi	r27, 0x09	; 9
    162a:	eb 2e       	mov	r14, r27
    162c:	f1 2c       	mov	r15, r1
    162e:	ec 0e       	add	r14, r28
    1630:	fd 1e       	adc	r15, r29
    1632:	ce 01       	movw	r24, r28
    1634:	01 96       	adiw	r24, 0x01	; 1
    1636:	b7 01       	movw	r22, r14
    1638:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <__unpack_f>
    163c:	8e 01       	movw	r16, r28
    163e:	0f 5e       	subi	r16, 0xEF	; 239
    1640:	1f 4f       	sbci	r17, 0xFF	; 255
    1642:	ce 01       	movw	r24, r28
    1644:	05 96       	adiw	r24, 0x05	; 5
    1646:	b8 01       	movw	r22, r16
    1648:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <__unpack_f>
    164c:	29 85       	ldd	r18, Y+9	; 0x09
    164e:	22 30       	cpi	r18, 0x02	; 2
    1650:	08 f4       	brcc	.+2      	; 0x1654 <__divsf3+0x48>
    1652:	7e c0       	rjmp	.+252    	; 0x1750 <__divsf3+0x144>
    1654:	39 89       	ldd	r19, Y+17	; 0x11
    1656:	32 30       	cpi	r19, 0x02	; 2
    1658:	10 f4       	brcc	.+4      	; 0x165e <__divsf3+0x52>
    165a:	b8 01       	movw	r22, r16
    165c:	7c c0       	rjmp	.+248    	; 0x1756 <__divsf3+0x14a>
    165e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1660:	9a 89       	ldd	r25, Y+18	; 0x12
    1662:	89 27       	eor	r24, r25
    1664:	8a 87       	std	Y+10, r24	; 0x0a
    1666:	24 30       	cpi	r18, 0x04	; 4
    1668:	11 f0       	breq	.+4      	; 0x166e <__divsf3+0x62>
    166a:	22 30       	cpi	r18, 0x02	; 2
    166c:	31 f4       	brne	.+12     	; 0x167a <__divsf3+0x6e>
    166e:	23 17       	cp	r18, r19
    1670:	09 f0       	breq	.+2      	; 0x1674 <__divsf3+0x68>
    1672:	6e c0       	rjmp	.+220    	; 0x1750 <__divsf3+0x144>
    1674:	6c e3       	ldi	r22, 0x3C	; 60
    1676:	71 e0       	ldi	r23, 0x01	; 1
    1678:	6e c0       	rjmp	.+220    	; 0x1756 <__divsf3+0x14a>
    167a:	34 30       	cpi	r19, 0x04	; 4
    167c:	39 f4       	brne	.+14     	; 0x168c <__divsf3+0x80>
    167e:	1d 86       	std	Y+13, r1	; 0x0d
    1680:	1e 86       	std	Y+14, r1	; 0x0e
    1682:	1f 86       	std	Y+15, r1	; 0x0f
    1684:	18 8a       	std	Y+16, r1	; 0x10
    1686:	1c 86       	std	Y+12, r1	; 0x0c
    1688:	1b 86       	std	Y+11, r1	; 0x0b
    168a:	04 c0       	rjmp	.+8      	; 0x1694 <__divsf3+0x88>
    168c:	32 30       	cpi	r19, 0x02	; 2
    168e:	21 f4       	brne	.+8      	; 0x1698 <__divsf3+0x8c>
    1690:	84 e0       	ldi	r24, 0x04	; 4
    1692:	89 87       	std	Y+9, r24	; 0x09
    1694:	b7 01       	movw	r22, r14
    1696:	5f c0       	rjmp	.+190    	; 0x1756 <__divsf3+0x14a>
    1698:	2b 85       	ldd	r18, Y+11	; 0x0b
    169a:	3c 85       	ldd	r19, Y+12	; 0x0c
    169c:	8b 89       	ldd	r24, Y+19	; 0x13
    169e:	9c 89       	ldd	r25, Y+20	; 0x14
    16a0:	28 1b       	sub	r18, r24
    16a2:	39 0b       	sbc	r19, r25
    16a4:	3c 87       	std	Y+12, r19	; 0x0c
    16a6:	2b 87       	std	Y+11, r18	; 0x0b
    16a8:	ed 84       	ldd	r14, Y+13	; 0x0d
    16aa:	fe 84       	ldd	r15, Y+14	; 0x0e
    16ac:	0f 85       	ldd	r16, Y+15	; 0x0f
    16ae:	18 89       	ldd	r17, Y+16	; 0x10
    16b0:	ad 88       	ldd	r10, Y+21	; 0x15
    16b2:	be 88       	ldd	r11, Y+22	; 0x16
    16b4:	cf 88       	ldd	r12, Y+23	; 0x17
    16b6:	d8 8c       	ldd	r13, Y+24	; 0x18
    16b8:	ea 14       	cp	r14, r10
    16ba:	fb 04       	cpc	r15, r11
    16bc:	0c 05       	cpc	r16, r12
    16be:	1d 05       	cpc	r17, r13
    16c0:	40 f4       	brcc	.+16     	; 0x16d2 <__divsf3+0xc6>
    16c2:	ee 0c       	add	r14, r14
    16c4:	ff 1c       	adc	r15, r15
    16c6:	00 1f       	adc	r16, r16
    16c8:	11 1f       	adc	r17, r17
    16ca:	21 50       	subi	r18, 0x01	; 1
    16cc:	30 40       	sbci	r19, 0x00	; 0
    16ce:	3c 87       	std	Y+12, r19	; 0x0c
    16d0:	2b 87       	std	Y+11, r18	; 0x0b
    16d2:	20 e0       	ldi	r18, 0x00	; 0
    16d4:	30 e0       	ldi	r19, 0x00	; 0
    16d6:	40 e0       	ldi	r20, 0x00	; 0
    16d8:	50 e0       	ldi	r21, 0x00	; 0
    16da:	80 e0       	ldi	r24, 0x00	; 0
    16dc:	90 e0       	ldi	r25, 0x00	; 0
    16de:	a0 e0       	ldi	r26, 0x00	; 0
    16e0:	b0 e4       	ldi	r27, 0x40	; 64
    16e2:	60 e0       	ldi	r22, 0x00	; 0
    16e4:	70 e0       	ldi	r23, 0x00	; 0
    16e6:	ea 14       	cp	r14, r10
    16e8:	fb 04       	cpc	r15, r11
    16ea:	0c 05       	cpc	r16, r12
    16ec:	1d 05       	cpc	r17, r13
    16ee:	40 f0       	brcs	.+16     	; 0x1700 <__divsf3+0xf4>
    16f0:	28 2b       	or	r18, r24
    16f2:	39 2b       	or	r19, r25
    16f4:	4a 2b       	or	r20, r26
    16f6:	5b 2b       	or	r21, r27
    16f8:	ea 18       	sub	r14, r10
    16fa:	fb 08       	sbc	r15, r11
    16fc:	0c 09       	sbc	r16, r12
    16fe:	1d 09       	sbc	r17, r13
    1700:	b6 95       	lsr	r27
    1702:	a7 95       	ror	r26
    1704:	97 95       	ror	r25
    1706:	87 95       	ror	r24
    1708:	ee 0c       	add	r14, r14
    170a:	ff 1c       	adc	r15, r15
    170c:	00 1f       	adc	r16, r16
    170e:	11 1f       	adc	r17, r17
    1710:	6f 5f       	subi	r22, 0xFF	; 255
    1712:	7f 4f       	sbci	r23, 0xFF	; 255
    1714:	6f 31       	cpi	r22, 0x1F	; 31
    1716:	71 05       	cpc	r23, r1
    1718:	31 f7       	brne	.-52     	; 0x16e6 <__divsf3+0xda>
    171a:	da 01       	movw	r26, r20
    171c:	c9 01       	movw	r24, r18
    171e:	8f 77       	andi	r24, 0x7F	; 127
    1720:	90 70       	andi	r25, 0x00	; 0
    1722:	a0 70       	andi	r26, 0x00	; 0
    1724:	b0 70       	andi	r27, 0x00	; 0
    1726:	80 34       	cpi	r24, 0x40	; 64
    1728:	91 05       	cpc	r25, r1
    172a:	a1 05       	cpc	r26, r1
    172c:	b1 05       	cpc	r27, r1
    172e:	61 f4       	brne	.+24     	; 0x1748 <__divsf3+0x13c>
    1730:	27 fd       	sbrc	r18, 7
    1732:	0a c0       	rjmp	.+20     	; 0x1748 <__divsf3+0x13c>
    1734:	e1 14       	cp	r14, r1
    1736:	f1 04       	cpc	r15, r1
    1738:	01 05       	cpc	r16, r1
    173a:	11 05       	cpc	r17, r1
    173c:	29 f0       	breq	.+10     	; 0x1748 <__divsf3+0x13c>
    173e:	20 5c       	subi	r18, 0xC0	; 192
    1740:	3f 4f       	sbci	r19, 0xFF	; 255
    1742:	4f 4f       	sbci	r20, 0xFF	; 255
    1744:	5f 4f       	sbci	r21, 0xFF	; 255
    1746:	20 78       	andi	r18, 0x80	; 128
    1748:	2d 87       	std	Y+13, r18	; 0x0d
    174a:	3e 87       	std	Y+14, r19	; 0x0e
    174c:	4f 87       	std	Y+15, r20	; 0x0f
    174e:	58 8b       	std	Y+16, r21	; 0x10
    1750:	be 01       	movw	r22, r28
    1752:	67 5f       	subi	r22, 0xF7	; 247
    1754:	7f 4f       	sbci	r23, 0xFF	; 255
    1756:	cb 01       	movw	r24, r22
    1758:	0e 94 ec 0d 	call	0x1bd8	; 0x1bd8 <__pack_f>
    175c:	68 96       	adiw	r28, 0x18	; 24
    175e:	ea e0       	ldi	r30, 0x0A	; 10
    1760:	0c 94 dd 0f 	jmp	0x1fba	; 0x1fba <__epilogue_restores__+0x10>

00001764 <__eqsf2>:
    1764:	a8 e1       	ldi	r26, 0x18	; 24
    1766:	b0 e0       	ldi	r27, 0x00	; 0
    1768:	e8 eb       	ldi	r30, 0xB8	; 184
    176a:	fb e0       	ldi	r31, 0x0B	; 11
    176c:	0c 94 c5 0f 	jmp	0x1f8a	; 0x1f8a <__prologue_saves__+0x18>
    1770:	69 83       	std	Y+1, r22	; 0x01
    1772:	7a 83       	std	Y+2, r23	; 0x02
    1774:	8b 83       	std	Y+3, r24	; 0x03
    1776:	9c 83       	std	Y+4, r25	; 0x04
    1778:	2d 83       	std	Y+5, r18	; 0x05
    177a:	3e 83       	std	Y+6, r19	; 0x06
    177c:	4f 83       	std	Y+7, r20	; 0x07
    177e:	58 87       	std	Y+8, r21	; 0x08
    1780:	89 e0       	ldi	r24, 0x09	; 9
    1782:	e8 2e       	mov	r14, r24
    1784:	f1 2c       	mov	r15, r1
    1786:	ec 0e       	add	r14, r28
    1788:	fd 1e       	adc	r15, r29
    178a:	ce 01       	movw	r24, r28
    178c:	01 96       	adiw	r24, 0x01	; 1
    178e:	b7 01       	movw	r22, r14
    1790:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <__unpack_f>
    1794:	8e 01       	movw	r16, r28
    1796:	0f 5e       	subi	r16, 0xEF	; 239
    1798:	1f 4f       	sbci	r17, 0xFF	; 255
    179a:	ce 01       	movw	r24, r28
    179c:	05 96       	adiw	r24, 0x05	; 5
    179e:	b8 01       	movw	r22, r16
    17a0:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <__unpack_f>
    17a4:	89 85       	ldd	r24, Y+9	; 0x09
    17a6:	82 30       	cpi	r24, 0x02	; 2
    17a8:	40 f0       	brcs	.+16     	; 0x17ba <__eqsf2+0x56>
    17aa:	89 89       	ldd	r24, Y+17	; 0x11
    17ac:	82 30       	cpi	r24, 0x02	; 2
    17ae:	28 f0       	brcs	.+10     	; 0x17ba <__eqsf2+0x56>
    17b0:	c7 01       	movw	r24, r14
    17b2:	b8 01       	movw	r22, r16
    17b4:	0e 94 39 0f 	call	0x1e72	; 0x1e72 <__fpcmp_parts_f>
    17b8:	01 c0       	rjmp	.+2      	; 0x17bc <__eqsf2+0x58>
    17ba:	81 e0       	ldi	r24, 0x01	; 1
    17bc:	68 96       	adiw	r28, 0x18	; 24
    17be:	e6 e0       	ldi	r30, 0x06	; 6
    17c0:	0c 94 e1 0f 	jmp	0x1fc2	; 0x1fc2 <__epilogue_restores__+0x18>

000017c4 <__gtsf2>:
    17c4:	a8 e1       	ldi	r26, 0x18	; 24
    17c6:	b0 e0       	ldi	r27, 0x00	; 0
    17c8:	e8 ee       	ldi	r30, 0xE8	; 232
    17ca:	fb e0       	ldi	r31, 0x0B	; 11
    17cc:	0c 94 c5 0f 	jmp	0x1f8a	; 0x1f8a <__prologue_saves__+0x18>
    17d0:	69 83       	std	Y+1, r22	; 0x01
    17d2:	7a 83       	std	Y+2, r23	; 0x02
    17d4:	8b 83       	std	Y+3, r24	; 0x03
    17d6:	9c 83       	std	Y+4, r25	; 0x04
    17d8:	2d 83       	std	Y+5, r18	; 0x05
    17da:	3e 83       	std	Y+6, r19	; 0x06
    17dc:	4f 83       	std	Y+7, r20	; 0x07
    17de:	58 87       	std	Y+8, r21	; 0x08
    17e0:	89 e0       	ldi	r24, 0x09	; 9
    17e2:	e8 2e       	mov	r14, r24
    17e4:	f1 2c       	mov	r15, r1
    17e6:	ec 0e       	add	r14, r28
    17e8:	fd 1e       	adc	r15, r29
    17ea:	ce 01       	movw	r24, r28
    17ec:	01 96       	adiw	r24, 0x01	; 1
    17ee:	b7 01       	movw	r22, r14
    17f0:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <__unpack_f>
    17f4:	8e 01       	movw	r16, r28
    17f6:	0f 5e       	subi	r16, 0xEF	; 239
    17f8:	1f 4f       	sbci	r17, 0xFF	; 255
    17fa:	ce 01       	movw	r24, r28
    17fc:	05 96       	adiw	r24, 0x05	; 5
    17fe:	b8 01       	movw	r22, r16
    1800:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <__unpack_f>
    1804:	89 85       	ldd	r24, Y+9	; 0x09
    1806:	82 30       	cpi	r24, 0x02	; 2
    1808:	40 f0       	brcs	.+16     	; 0x181a <__gtsf2+0x56>
    180a:	89 89       	ldd	r24, Y+17	; 0x11
    180c:	82 30       	cpi	r24, 0x02	; 2
    180e:	28 f0       	brcs	.+10     	; 0x181a <__gtsf2+0x56>
    1810:	c7 01       	movw	r24, r14
    1812:	b8 01       	movw	r22, r16
    1814:	0e 94 39 0f 	call	0x1e72	; 0x1e72 <__fpcmp_parts_f>
    1818:	01 c0       	rjmp	.+2      	; 0x181c <__gtsf2+0x58>
    181a:	8f ef       	ldi	r24, 0xFF	; 255
    181c:	68 96       	adiw	r28, 0x18	; 24
    181e:	e6 e0       	ldi	r30, 0x06	; 6
    1820:	0c 94 e1 0f 	jmp	0x1fc2	; 0x1fc2 <__epilogue_restores__+0x18>

00001824 <__gesf2>:
    1824:	a8 e1       	ldi	r26, 0x18	; 24
    1826:	b0 e0       	ldi	r27, 0x00	; 0
    1828:	e8 e1       	ldi	r30, 0x18	; 24
    182a:	fc e0       	ldi	r31, 0x0C	; 12
    182c:	0c 94 c5 0f 	jmp	0x1f8a	; 0x1f8a <__prologue_saves__+0x18>
    1830:	69 83       	std	Y+1, r22	; 0x01
    1832:	7a 83       	std	Y+2, r23	; 0x02
    1834:	8b 83       	std	Y+3, r24	; 0x03
    1836:	9c 83       	std	Y+4, r25	; 0x04
    1838:	2d 83       	std	Y+5, r18	; 0x05
    183a:	3e 83       	std	Y+6, r19	; 0x06
    183c:	4f 83       	std	Y+7, r20	; 0x07
    183e:	58 87       	std	Y+8, r21	; 0x08
    1840:	89 e0       	ldi	r24, 0x09	; 9
    1842:	e8 2e       	mov	r14, r24
    1844:	f1 2c       	mov	r15, r1
    1846:	ec 0e       	add	r14, r28
    1848:	fd 1e       	adc	r15, r29
    184a:	ce 01       	movw	r24, r28
    184c:	01 96       	adiw	r24, 0x01	; 1
    184e:	b7 01       	movw	r22, r14
    1850:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <__unpack_f>
    1854:	8e 01       	movw	r16, r28
    1856:	0f 5e       	subi	r16, 0xEF	; 239
    1858:	1f 4f       	sbci	r17, 0xFF	; 255
    185a:	ce 01       	movw	r24, r28
    185c:	05 96       	adiw	r24, 0x05	; 5
    185e:	b8 01       	movw	r22, r16
    1860:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <__unpack_f>
    1864:	89 85       	ldd	r24, Y+9	; 0x09
    1866:	82 30       	cpi	r24, 0x02	; 2
    1868:	40 f0       	brcs	.+16     	; 0x187a <__gesf2+0x56>
    186a:	89 89       	ldd	r24, Y+17	; 0x11
    186c:	82 30       	cpi	r24, 0x02	; 2
    186e:	28 f0       	brcs	.+10     	; 0x187a <__gesf2+0x56>
    1870:	c7 01       	movw	r24, r14
    1872:	b8 01       	movw	r22, r16
    1874:	0e 94 39 0f 	call	0x1e72	; 0x1e72 <__fpcmp_parts_f>
    1878:	01 c0       	rjmp	.+2      	; 0x187c <__gesf2+0x58>
    187a:	8f ef       	ldi	r24, 0xFF	; 255
    187c:	68 96       	adiw	r28, 0x18	; 24
    187e:	e6 e0       	ldi	r30, 0x06	; 6
    1880:	0c 94 e1 0f 	jmp	0x1fc2	; 0x1fc2 <__epilogue_restores__+0x18>

00001884 <__ltsf2>:
    1884:	a8 e1       	ldi	r26, 0x18	; 24
    1886:	b0 e0       	ldi	r27, 0x00	; 0
    1888:	e8 e4       	ldi	r30, 0x48	; 72
    188a:	fc e0       	ldi	r31, 0x0C	; 12
    188c:	0c 94 c5 0f 	jmp	0x1f8a	; 0x1f8a <__prologue_saves__+0x18>
    1890:	69 83       	std	Y+1, r22	; 0x01
    1892:	7a 83       	std	Y+2, r23	; 0x02
    1894:	8b 83       	std	Y+3, r24	; 0x03
    1896:	9c 83       	std	Y+4, r25	; 0x04
    1898:	2d 83       	std	Y+5, r18	; 0x05
    189a:	3e 83       	std	Y+6, r19	; 0x06
    189c:	4f 83       	std	Y+7, r20	; 0x07
    189e:	58 87       	std	Y+8, r21	; 0x08
    18a0:	89 e0       	ldi	r24, 0x09	; 9
    18a2:	e8 2e       	mov	r14, r24
    18a4:	f1 2c       	mov	r15, r1
    18a6:	ec 0e       	add	r14, r28
    18a8:	fd 1e       	adc	r15, r29
    18aa:	ce 01       	movw	r24, r28
    18ac:	01 96       	adiw	r24, 0x01	; 1
    18ae:	b7 01       	movw	r22, r14
    18b0:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <__unpack_f>
    18b4:	8e 01       	movw	r16, r28
    18b6:	0f 5e       	subi	r16, 0xEF	; 239
    18b8:	1f 4f       	sbci	r17, 0xFF	; 255
    18ba:	ce 01       	movw	r24, r28
    18bc:	05 96       	adiw	r24, 0x05	; 5
    18be:	b8 01       	movw	r22, r16
    18c0:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <__unpack_f>
    18c4:	89 85       	ldd	r24, Y+9	; 0x09
    18c6:	82 30       	cpi	r24, 0x02	; 2
    18c8:	40 f0       	brcs	.+16     	; 0x18da <__ltsf2+0x56>
    18ca:	89 89       	ldd	r24, Y+17	; 0x11
    18cc:	82 30       	cpi	r24, 0x02	; 2
    18ce:	28 f0       	brcs	.+10     	; 0x18da <__ltsf2+0x56>
    18d0:	c7 01       	movw	r24, r14
    18d2:	b8 01       	movw	r22, r16
    18d4:	0e 94 39 0f 	call	0x1e72	; 0x1e72 <__fpcmp_parts_f>
    18d8:	01 c0       	rjmp	.+2      	; 0x18dc <__ltsf2+0x58>
    18da:	81 e0       	ldi	r24, 0x01	; 1
    18dc:	68 96       	adiw	r28, 0x18	; 24
    18de:	e6 e0       	ldi	r30, 0x06	; 6
    18e0:	0c 94 e1 0f 	jmp	0x1fc2	; 0x1fc2 <__epilogue_restores__+0x18>

000018e4 <__floatsisf>:
    18e4:	a8 e0       	ldi	r26, 0x08	; 8
    18e6:	b0 e0       	ldi	r27, 0x00	; 0
    18e8:	e8 e7       	ldi	r30, 0x78	; 120
    18ea:	fc e0       	ldi	r31, 0x0C	; 12
    18ec:	0c 94 c2 0f 	jmp	0x1f84	; 0x1f84 <__prologue_saves__+0x12>
    18f0:	9b 01       	movw	r18, r22
    18f2:	ac 01       	movw	r20, r24
    18f4:	83 e0       	ldi	r24, 0x03	; 3
    18f6:	89 83       	std	Y+1, r24	; 0x01
    18f8:	da 01       	movw	r26, r20
    18fa:	c9 01       	movw	r24, r18
    18fc:	88 27       	eor	r24, r24
    18fe:	b7 fd       	sbrc	r27, 7
    1900:	83 95       	inc	r24
    1902:	99 27       	eor	r25, r25
    1904:	aa 27       	eor	r26, r26
    1906:	bb 27       	eor	r27, r27
    1908:	b8 2e       	mov	r11, r24
    190a:	21 15       	cp	r18, r1
    190c:	31 05       	cpc	r19, r1
    190e:	41 05       	cpc	r20, r1
    1910:	51 05       	cpc	r21, r1
    1912:	19 f4       	brne	.+6      	; 0x191a <__floatsisf+0x36>
    1914:	82 e0       	ldi	r24, 0x02	; 2
    1916:	89 83       	std	Y+1, r24	; 0x01
    1918:	3a c0       	rjmp	.+116    	; 0x198e <__floatsisf+0xaa>
    191a:	88 23       	and	r24, r24
    191c:	a9 f0       	breq	.+42     	; 0x1948 <__floatsisf+0x64>
    191e:	20 30       	cpi	r18, 0x00	; 0
    1920:	80 e0       	ldi	r24, 0x00	; 0
    1922:	38 07       	cpc	r19, r24
    1924:	80 e0       	ldi	r24, 0x00	; 0
    1926:	48 07       	cpc	r20, r24
    1928:	80 e8       	ldi	r24, 0x80	; 128
    192a:	58 07       	cpc	r21, r24
    192c:	29 f4       	brne	.+10     	; 0x1938 <__floatsisf+0x54>
    192e:	60 e0       	ldi	r22, 0x00	; 0
    1930:	70 e0       	ldi	r23, 0x00	; 0
    1932:	80 e0       	ldi	r24, 0x00	; 0
    1934:	9f ec       	ldi	r25, 0xCF	; 207
    1936:	30 c0       	rjmp	.+96     	; 0x1998 <__floatsisf+0xb4>
    1938:	ee 24       	eor	r14, r14
    193a:	ff 24       	eor	r15, r15
    193c:	87 01       	movw	r16, r14
    193e:	e2 1a       	sub	r14, r18
    1940:	f3 0a       	sbc	r15, r19
    1942:	04 0b       	sbc	r16, r20
    1944:	15 0b       	sbc	r17, r21
    1946:	02 c0       	rjmp	.+4      	; 0x194c <__floatsisf+0x68>
    1948:	79 01       	movw	r14, r18
    194a:	8a 01       	movw	r16, r20
    194c:	8e e1       	ldi	r24, 0x1E	; 30
    194e:	c8 2e       	mov	r12, r24
    1950:	d1 2c       	mov	r13, r1
    1952:	dc 82       	std	Y+4, r13	; 0x04
    1954:	cb 82       	std	Y+3, r12	; 0x03
    1956:	ed 82       	std	Y+5, r14	; 0x05
    1958:	fe 82       	std	Y+6, r15	; 0x06
    195a:	0f 83       	std	Y+7, r16	; 0x07
    195c:	18 87       	std	Y+8, r17	; 0x08
    195e:	c8 01       	movw	r24, r16
    1960:	b7 01       	movw	r22, r14
    1962:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__clzsi2>
    1966:	01 97       	sbiw	r24, 0x01	; 1
    1968:	18 16       	cp	r1, r24
    196a:	19 06       	cpc	r1, r25
    196c:	84 f4       	brge	.+32     	; 0x198e <__floatsisf+0xaa>
    196e:	08 2e       	mov	r0, r24
    1970:	04 c0       	rjmp	.+8      	; 0x197a <__floatsisf+0x96>
    1972:	ee 0c       	add	r14, r14
    1974:	ff 1c       	adc	r15, r15
    1976:	00 1f       	adc	r16, r16
    1978:	11 1f       	adc	r17, r17
    197a:	0a 94       	dec	r0
    197c:	d2 f7       	brpl	.-12     	; 0x1972 <__floatsisf+0x8e>
    197e:	ed 82       	std	Y+5, r14	; 0x05
    1980:	fe 82       	std	Y+6, r15	; 0x06
    1982:	0f 83       	std	Y+7, r16	; 0x07
    1984:	18 87       	std	Y+8, r17	; 0x08
    1986:	c8 1a       	sub	r12, r24
    1988:	d9 0a       	sbc	r13, r25
    198a:	dc 82       	std	Y+4, r13	; 0x04
    198c:	cb 82       	std	Y+3, r12	; 0x03
    198e:	ba 82       	std	Y+2, r11	; 0x02
    1990:	ce 01       	movw	r24, r28
    1992:	01 96       	adiw	r24, 0x01	; 1
    1994:	0e 94 ec 0d 	call	0x1bd8	; 0x1bd8 <__pack_f>
    1998:	28 96       	adiw	r28, 0x08	; 8
    199a:	e9 e0       	ldi	r30, 0x09	; 9
    199c:	0c 94 de 0f 	jmp	0x1fbc	; 0x1fbc <__epilogue_restores__+0x12>

000019a0 <__fixsfsi>:
    19a0:	ac e0       	ldi	r26, 0x0C	; 12
    19a2:	b0 e0       	ldi	r27, 0x00	; 0
    19a4:	e6 ed       	ldi	r30, 0xD6	; 214
    19a6:	fc e0       	ldi	r31, 0x0C	; 12
    19a8:	0c 94 c9 0f 	jmp	0x1f92	; 0x1f92 <__prologue_saves__+0x20>
    19ac:	69 83       	std	Y+1, r22	; 0x01
    19ae:	7a 83       	std	Y+2, r23	; 0x02
    19b0:	8b 83       	std	Y+3, r24	; 0x03
    19b2:	9c 83       	std	Y+4, r25	; 0x04
    19b4:	ce 01       	movw	r24, r28
    19b6:	01 96       	adiw	r24, 0x01	; 1
    19b8:	be 01       	movw	r22, r28
    19ba:	6b 5f       	subi	r22, 0xFB	; 251
    19bc:	7f 4f       	sbci	r23, 0xFF	; 255
    19be:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <__unpack_f>
    19c2:	8d 81       	ldd	r24, Y+5	; 0x05
    19c4:	82 30       	cpi	r24, 0x02	; 2
    19c6:	61 f1       	breq	.+88     	; 0x1a20 <__fixsfsi+0x80>
    19c8:	82 30       	cpi	r24, 0x02	; 2
    19ca:	50 f1       	brcs	.+84     	; 0x1a20 <__fixsfsi+0x80>
    19cc:	84 30       	cpi	r24, 0x04	; 4
    19ce:	21 f4       	brne	.+8      	; 0x19d8 <__fixsfsi+0x38>
    19d0:	8e 81       	ldd	r24, Y+6	; 0x06
    19d2:	88 23       	and	r24, r24
    19d4:	51 f1       	breq	.+84     	; 0x1a2a <__fixsfsi+0x8a>
    19d6:	2e c0       	rjmp	.+92     	; 0x1a34 <__fixsfsi+0x94>
    19d8:	2f 81       	ldd	r18, Y+7	; 0x07
    19da:	38 85       	ldd	r19, Y+8	; 0x08
    19dc:	37 fd       	sbrc	r19, 7
    19de:	20 c0       	rjmp	.+64     	; 0x1a20 <__fixsfsi+0x80>
    19e0:	6e 81       	ldd	r22, Y+6	; 0x06
    19e2:	2f 31       	cpi	r18, 0x1F	; 31
    19e4:	31 05       	cpc	r19, r1
    19e6:	1c f0       	brlt	.+6      	; 0x19ee <__fixsfsi+0x4e>
    19e8:	66 23       	and	r22, r22
    19ea:	f9 f0       	breq	.+62     	; 0x1a2a <__fixsfsi+0x8a>
    19ec:	23 c0       	rjmp	.+70     	; 0x1a34 <__fixsfsi+0x94>
    19ee:	8e e1       	ldi	r24, 0x1E	; 30
    19f0:	90 e0       	ldi	r25, 0x00	; 0
    19f2:	82 1b       	sub	r24, r18
    19f4:	93 0b       	sbc	r25, r19
    19f6:	29 85       	ldd	r18, Y+9	; 0x09
    19f8:	3a 85       	ldd	r19, Y+10	; 0x0a
    19fa:	4b 85       	ldd	r20, Y+11	; 0x0b
    19fc:	5c 85       	ldd	r21, Y+12	; 0x0c
    19fe:	04 c0       	rjmp	.+8      	; 0x1a08 <__fixsfsi+0x68>
    1a00:	56 95       	lsr	r21
    1a02:	47 95       	ror	r20
    1a04:	37 95       	ror	r19
    1a06:	27 95       	ror	r18
    1a08:	8a 95       	dec	r24
    1a0a:	d2 f7       	brpl	.-12     	; 0x1a00 <__fixsfsi+0x60>
    1a0c:	66 23       	and	r22, r22
    1a0e:	b1 f0       	breq	.+44     	; 0x1a3c <__fixsfsi+0x9c>
    1a10:	50 95       	com	r21
    1a12:	40 95       	com	r20
    1a14:	30 95       	com	r19
    1a16:	21 95       	neg	r18
    1a18:	3f 4f       	sbci	r19, 0xFF	; 255
    1a1a:	4f 4f       	sbci	r20, 0xFF	; 255
    1a1c:	5f 4f       	sbci	r21, 0xFF	; 255
    1a1e:	0e c0       	rjmp	.+28     	; 0x1a3c <__fixsfsi+0x9c>
    1a20:	20 e0       	ldi	r18, 0x00	; 0
    1a22:	30 e0       	ldi	r19, 0x00	; 0
    1a24:	40 e0       	ldi	r20, 0x00	; 0
    1a26:	50 e0       	ldi	r21, 0x00	; 0
    1a28:	09 c0       	rjmp	.+18     	; 0x1a3c <__fixsfsi+0x9c>
    1a2a:	2f ef       	ldi	r18, 0xFF	; 255
    1a2c:	3f ef       	ldi	r19, 0xFF	; 255
    1a2e:	4f ef       	ldi	r20, 0xFF	; 255
    1a30:	5f e7       	ldi	r21, 0x7F	; 127
    1a32:	04 c0       	rjmp	.+8      	; 0x1a3c <__fixsfsi+0x9c>
    1a34:	20 e0       	ldi	r18, 0x00	; 0
    1a36:	30 e0       	ldi	r19, 0x00	; 0
    1a38:	40 e0       	ldi	r20, 0x00	; 0
    1a3a:	50 e8       	ldi	r21, 0x80	; 128
    1a3c:	b9 01       	movw	r22, r18
    1a3e:	ca 01       	movw	r24, r20
    1a40:	2c 96       	adiw	r28, 0x0c	; 12
    1a42:	e2 e0       	ldi	r30, 0x02	; 2
    1a44:	0c 94 e5 0f 	jmp	0x1fca	; 0x1fca <__epilogue_restores__+0x20>

00001a48 <__floatunsisf>:
    1a48:	a8 e0       	ldi	r26, 0x08	; 8
    1a4a:	b0 e0       	ldi	r27, 0x00	; 0
    1a4c:	ea e2       	ldi	r30, 0x2A	; 42
    1a4e:	fd e0       	ldi	r31, 0x0D	; 13
    1a50:	0c 94 c1 0f 	jmp	0x1f82	; 0x1f82 <__prologue_saves__+0x10>
    1a54:	7b 01       	movw	r14, r22
    1a56:	8c 01       	movw	r16, r24
    1a58:	61 15       	cp	r22, r1
    1a5a:	71 05       	cpc	r23, r1
    1a5c:	81 05       	cpc	r24, r1
    1a5e:	91 05       	cpc	r25, r1
    1a60:	19 f4       	brne	.+6      	; 0x1a68 <__floatunsisf+0x20>
    1a62:	82 e0       	ldi	r24, 0x02	; 2
    1a64:	89 83       	std	Y+1, r24	; 0x01
    1a66:	60 c0       	rjmp	.+192    	; 0x1b28 <__floatunsisf+0xe0>
    1a68:	83 e0       	ldi	r24, 0x03	; 3
    1a6a:	89 83       	std	Y+1, r24	; 0x01
    1a6c:	8e e1       	ldi	r24, 0x1E	; 30
    1a6e:	c8 2e       	mov	r12, r24
    1a70:	d1 2c       	mov	r13, r1
    1a72:	dc 82       	std	Y+4, r13	; 0x04
    1a74:	cb 82       	std	Y+3, r12	; 0x03
    1a76:	ed 82       	std	Y+5, r14	; 0x05
    1a78:	fe 82       	std	Y+6, r15	; 0x06
    1a7a:	0f 83       	std	Y+7, r16	; 0x07
    1a7c:	18 87       	std	Y+8, r17	; 0x08
    1a7e:	c8 01       	movw	r24, r16
    1a80:	b7 01       	movw	r22, r14
    1a82:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__clzsi2>
    1a86:	fc 01       	movw	r30, r24
    1a88:	31 97       	sbiw	r30, 0x01	; 1
    1a8a:	f7 ff       	sbrs	r31, 7
    1a8c:	3b c0       	rjmp	.+118    	; 0x1b04 <__floatunsisf+0xbc>
    1a8e:	22 27       	eor	r18, r18
    1a90:	33 27       	eor	r19, r19
    1a92:	2e 1b       	sub	r18, r30
    1a94:	3f 0b       	sbc	r19, r31
    1a96:	57 01       	movw	r10, r14
    1a98:	68 01       	movw	r12, r16
    1a9a:	02 2e       	mov	r0, r18
    1a9c:	04 c0       	rjmp	.+8      	; 0x1aa6 <__floatunsisf+0x5e>
    1a9e:	d6 94       	lsr	r13
    1aa0:	c7 94       	ror	r12
    1aa2:	b7 94       	ror	r11
    1aa4:	a7 94       	ror	r10
    1aa6:	0a 94       	dec	r0
    1aa8:	d2 f7       	brpl	.-12     	; 0x1a9e <__floatunsisf+0x56>
    1aaa:	40 e0       	ldi	r20, 0x00	; 0
    1aac:	50 e0       	ldi	r21, 0x00	; 0
    1aae:	60 e0       	ldi	r22, 0x00	; 0
    1ab0:	70 e0       	ldi	r23, 0x00	; 0
    1ab2:	81 e0       	ldi	r24, 0x01	; 1
    1ab4:	90 e0       	ldi	r25, 0x00	; 0
    1ab6:	a0 e0       	ldi	r26, 0x00	; 0
    1ab8:	b0 e0       	ldi	r27, 0x00	; 0
    1aba:	04 c0       	rjmp	.+8      	; 0x1ac4 <__floatunsisf+0x7c>
    1abc:	88 0f       	add	r24, r24
    1abe:	99 1f       	adc	r25, r25
    1ac0:	aa 1f       	adc	r26, r26
    1ac2:	bb 1f       	adc	r27, r27
    1ac4:	2a 95       	dec	r18
    1ac6:	d2 f7       	brpl	.-12     	; 0x1abc <__floatunsisf+0x74>
    1ac8:	01 97       	sbiw	r24, 0x01	; 1
    1aca:	a1 09       	sbc	r26, r1
    1acc:	b1 09       	sbc	r27, r1
    1ace:	8e 21       	and	r24, r14
    1ad0:	9f 21       	and	r25, r15
    1ad2:	a0 23       	and	r26, r16
    1ad4:	b1 23       	and	r27, r17
    1ad6:	00 97       	sbiw	r24, 0x00	; 0
    1ad8:	a1 05       	cpc	r26, r1
    1ada:	b1 05       	cpc	r27, r1
    1adc:	21 f0       	breq	.+8      	; 0x1ae6 <__floatunsisf+0x9e>
    1ade:	41 e0       	ldi	r20, 0x01	; 1
    1ae0:	50 e0       	ldi	r21, 0x00	; 0
    1ae2:	60 e0       	ldi	r22, 0x00	; 0
    1ae4:	70 e0       	ldi	r23, 0x00	; 0
    1ae6:	4a 29       	or	r20, r10
    1ae8:	5b 29       	or	r21, r11
    1aea:	6c 29       	or	r22, r12
    1aec:	7d 29       	or	r23, r13
    1aee:	4d 83       	std	Y+5, r20	; 0x05
    1af0:	5e 83       	std	Y+6, r21	; 0x06
    1af2:	6f 83       	std	Y+7, r22	; 0x07
    1af4:	78 87       	std	Y+8, r23	; 0x08
    1af6:	8e e1       	ldi	r24, 0x1E	; 30
    1af8:	90 e0       	ldi	r25, 0x00	; 0
    1afa:	8e 1b       	sub	r24, r30
    1afc:	9f 0b       	sbc	r25, r31
    1afe:	9c 83       	std	Y+4, r25	; 0x04
    1b00:	8b 83       	std	Y+3, r24	; 0x03
    1b02:	12 c0       	rjmp	.+36     	; 0x1b28 <__floatunsisf+0xe0>
    1b04:	30 97       	sbiw	r30, 0x00	; 0
    1b06:	81 f0       	breq	.+32     	; 0x1b28 <__floatunsisf+0xe0>
    1b08:	0e 2e       	mov	r0, r30
    1b0a:	04 c0       	rjmp	.+8      	; 0x1b14 <__floatunsisf+0xcc>
    1b0c:	ee 0c       	add	r14, r14
    1b0e:	ff 1c       	adc	r15, r15
    1b10:	00 1f       	adc	r16, r16
    1b12:	11 1f       	adc	r17, r17
    1b14:	0a 94       	dec	r0
    1b16:	d2 f7       	brpl	.-12     	; 0x1b0c <__floatunsisf+0xc4>
    1b18:	ed 82       	std	Y+5, r14	; 0x05
    1b1a:	fe 82       	std	Y+6, r15	; 0x06
    1b1c:	0f 83       	std	Y+7, r16	; 0x07
    1b1e:	18 87       	std	Y+8, r17	; 0x08
    1b20:	ce 1a       	sub	r12, r30
    1b22:	df 0a       	sbc	r13, r31
    1b24:	dc 82       	std	Y+4, r13	; 0x04
    1b26:	cb 82       	std	Y+3, r12	; 0x03
    1b28:	1a 82       	std	Y+2, r1	; 0x02
    1b2a:	ce 01       	movw	r24, r28
    1b2c:	01 96       	adiw	r24, 0x01	; 1
    1b2e:	0e 94 ec 0d 	call	0x1bd8	; 0x1bd8 <__pack_f>
    1b32:	28 96       	adiw	r28, 0x08	; 8
    1b34:	ea e0       	ldi	r30, 0x0A	; 10
    1b36:	0c 94 dd 0f 	jmp	0x1fba	; 0x1fba <__epilogue_restores__+0x10>

00001b3a <__clzsi2>:
    1b3a:	ef 92       	push	r14
    1b3c:	ff 92       	push	r15
    1b3e:	0f 93       	push	r16
    1b40:	1f 93       	push	r17
    1b42:	7b 01       	movw	r14, r22
    1b44:	8c 01       	movw	r16, r24
    1b46:	80 e0       	ldi	r24, 0x00	; 0
    1b48:	e8 16       	cp	r14, r24
    1b4a:	80 e0       	ldi	r24, 0x00	; 0
    1b4c:	f8 06       	cpc	r15, r24
    1b4e:	81 e0       	ldi	r24, 0x01	; 1
    1b50:	08 07       	cpc	r16, r24
    1b52:	80 e0       	ldi	r24, 0x00	; 0
    1b54:	18 07       	cpc	r17, r24
    1b56:	88 f4       	brcc	.+34     	; 0x1b7a <__clzsi2+0x40>
    1b58:	8f ef       	ldi	r24, 0xFF	; 255
    1b5a:	e8 16       	cp	r14, r24
    1b5c:	f1 04       	cpc	r15, r1
    1b5e:	01 05       	cpc	r16, r1
    1b60:	11 05       	cpc	r17, r1
    1b62:	31 f0       	breq	.+12     	; 0x1b70 <__clzsi2+0x36>
    1b64:	28 f0       	brcs	.+10     	; 0x1b70 <__clzsi2+0x36>
    1b66:	88 e0       	ldi	r24, 0x08	; 8
    1b68:	90 e0       	ldi	r25, 0x00	; 0
    1b6a:	a0 e0       	ldi	r26, 0x00	; 0
    1b6c:	b0 e0       	ldi	r27, 0x00	; 0
    1b6e:	17 c0       	rjmp	.+46     	; 0x1b9e <__clzsi2+0x64>
    1b70:	80 e0       	ldi	r24, 0x00	; 0
    1b72:	90 e0       	ldi	r25, 0x00	; 0
    1b74:	a0 e0       	ldi	r26, 0x00	; 0
    1b76:	b0 e0       	ldi	r27, 0x00	; 0
    1b78:	12 c0       	rjmp	.+36     	; 0x1b9e <__clzsi2+0x64>
    1b7a:	80 e0       	ldi	r24, 0x00	; 0
    1b7c:	e8 16       	cp	r14, r24
    1b7e:	80 e0       	ldi	r24, 0x00	; 0
    1b80:	f8 06       	cpc	r15, r24
    1b82:	80 e0       	ldi	r24, 0x00	; 0
    1b84:	08 07       	cpc	r16, r24
    1b86:	81 e0       	ldi	r24, 0x01	; 1
    1b88:	18 07       	cpc	r17, r24
    1b8a:	28 f0       	brcs	.+10     	; 0x1b96 <__clzsi2+0x5c>
    1b8c:	88 e1       	ldi	r24, 0x18	; 24
    1b8e:	90 e0       	ldi	r25, 0x00	; 0
    1b90:	a0 e0       	ldi	r26, 0x00	; 0
    1b92:	b0 e0       	ldi	r27, 0x00	; 0
    1b94:	04 c0       	rjmp	.+8      	; 0x1b9e <__clzsi2+0x64>
    1b96:	80 e1       	ldi	r24, 0x10	; 16
    1b98:	90 e0       	ldi	r25, 0x00	; 0
    1b9a:	a0 e0       	ldi	r26, 0x00	; 0
    1b9c:	b0 e0       	ldi	r27, 0x00	; 0
    1b9e:	20 e2       	ldi	r18, 0x20	; 32
    1ba0:	30 e0       	ldi	r19, 0x00	; 0
    1ba2:	40 e0       	ldi	r20, 0x00	; 0
    1ba4:	50 e0       	ldi	r21, 0x00	; 0
    1ba6:	28 1b       	sub	r18, r24
    1ba8:	39 0b       	sbc	r19, r25
    1baa:	4a 0b       	sbc	r20, r26
    1bac:	5b 0b       	sbc	r21, r27
    1bae:	04 c0       	rjmp	.+8      	; 0x1bb8 <__clzsi2+0x7e>
    1bb0:	16 95       	lsr	r17
    1bb2:	07 95       	ror	r16
    1bb4:	f7 94       	ror	r15
    1bb6:	e7 94       	ror	r14
    1bb8:	8a 95       	dec	r24
    1bba:	d2 f7       	brpl	.-12     	; 0x1bb0 <__clzsi2+0x76>
    1bbc:	f7 01       	movw	r30, r14
    1bbe:	ec 5b       	subi	r30, 0xBC	; 188
    1bc0:	fe 4f       	sbci	r31, 0xFE	; 254
    1bc2:	80 81       	ld	r24, Z
    1bc4:	28 1b       	sub	r18, r24
    1bc6:	31 09       	sbc	r19, r1
    1bc8:	41 09       	sbc	r20, r1
    1bca:	51 09       	sbc	r21, r1
    1bcc:	c9 01       	movw	r24, r18
    1bce:	1f 91       	pop	r17
    1bd0:	0f 91       	pop	r16
    1bd2:	ff 90       	pop	r15
    1bd4:	ef 90       	pop	r14
    1bd6:	08 95       	ret

00001bd8 <__pack_f>:
    1bd8:	df 92       	push	r13
    1bda:	ef 92       	push	r14
    1bdc:	ff 92       	push	r15
    1bde:	0f 93       	push	r16
    1be0:	1f 93       	push	r17
    1be2:	fc 01       	movw	r30, r24
    1be4:	e4 80       	ldd	r14, Z+4	; 0x04
    1be6:	f5 80       	ldd	r15, Z+5	; 0x05
    1be8:	06 81       	ldd	r16, Z+6	; 0x06
    1bea:	17 81       	ldd	r17, Z+7	; 0x07
    1bec:	d1 80       	ldd	r13, Z+1	; 0x01
    1bee:	80 81       	ld	r24, Z
    1bf0:	82 30       	cpi	r24, 0x02	; 2
    1bf2:	48 f4       	brcc	.+18     	; 0x1c06 <__pack_f+0x2e>
    1bf4:	80 e0       	ldi	r24, 0x00	; 0
    1bf6:	90 e0       	ldi	r25, 0x00	; 0
    1bf8:	a0 e1       	ldi	r26, 0x10	; 16
    1bfa:	b0 e0       	ldi	r27, 0x00	; 0
    1bfc:	e8 2a       	or	r14, r24
    1bfe:	f9 2a       	or	r15, r25
    1c00:	0a 2b       	or	r16, r26
    1c02:	1b 2b       	or	r17, r27
    1c04:	a5 c0       	rjmp	.+330    	; 0x1d50 <__pack_f+0x178>
    1c06:	84 30       	cpi	r24, 0x04	; 4
    1c08:	09 f4       	brne	.+2      	; 0x1c0c <__pack_f+0x34>
    1c0a:	9f c0       	rjmp	.+318    	; 0x1d4a <__pack_f+0x172>
    1c0c:	82 30       	cpi	r24, 0x02	; 2
    1c0e:	21 f4       	brne	.+8      	; 0x1c18 <__pack_f+0x40>
    1c10:	ee 24       	eor	r14, r14
    1c12:	ff 24       	eor	r15, r15
    1c14:	87 01       	movw	r16, r14
    1c16:	05 c0       	rjmp	.+10     	; 0x1c22 <__pack_f+0x4a>
    1c18:	e1 14       	cp	r14, r1
    1c1a:	f1 04       	cpc	r15, r1
    1c1c:	01 05       	cpc	r16, r1
    1c1e:	11 05       	cpc	r17, r1
    1c20:	19 f4       	brne	.+6      	; 0x1c28 <__pack_f+0x50>
    1c22:	e0 e0       	ldi	r30, 0x00	; 0
    1c24:	f0 e0       	ldi	r31, 0x00	; 0
    1c26:	96 c0       	rjmp	.+300    	; 0x1d54 <__pack_f+0x17c>
    1c28:	62 81       	ldd	r22, Z+2	; 0x02
    1c2a:	73 81       	ldd	r23, Z+3	; 0x03
    1c2c:	9f ef       	ldi	r25, 0xFF	; 255
    1c2e:	62 38       	cpi	r22, 0x82	; 130
    1c30:	79 07       	cpc	r23, r25
    1c32:	0c f0       	brlt	.+2      	; 0x1c36 <__pack_f+0x5e>
    1c34:	5b c0       	rjmp	.+182    	; 0x1cec <__pack_f+0x114>
    1c36:	22 e8       	ldi	r18, 0x82	; 130
    1c38:	3f ef       	ldi	r19, 0xFF	; 255
    1c3a:	26 1b       	sub	r18, r22
    1c3c:	37 0b       	sbc	r19, r23
    1c3e:	2a 31       	cpi	r18, 0x1A	; 26
    1c40:	31 05       	cpc	r19, r1
    1c42:	2c f0       	brlt	.+10     	; 0x1c4e <__pack_f+0x76>
    1c44:	20 e0       	ldi	r18, 0x00	; 0
    1c46:	30 e0       	ldi	r19, 0x00	; 0
    1c48:	40 e0       	ldi	r20, 0x00	; 0
    1c4a:	50 e0       	ldi	r21, 0x00	; 0
    1c4c:	2a c0       	rjmp	.+84     	; 0x1ca2 <__pack_f+0xca>
    1c4e:	b8 01       	movw	r22, r16
    1c50:	a7 01       	movw	r20, r14
    1c52:	02 2e       	mov	r0, r18
    1c54:	04 c0       	rjmp	.+8      	; 0x1c5e <__pack_f+0x86>
    1c56:	76 95       	lsr	r23
    1c58:	67 95       	ror	r22
    1c5a:	57 95       	ror	r21
    1c5c:	47 95       	ror	r20
    1c5e:	0a 94       	dec	r0
    1c60:	d2 f7       	brpl	.-12     	; 0x1c56 <__pack_f+0x7e>
    1c62:	81 e0       	ldi	r24, 0x01	; 1
    1c64:	90 e0       	ldi	r25, 0x00	; 0
    1c66:	a0 e0       	ldi	r26, 0x00	; 0
    1c68:	b0 e0       	ldi	r27, 0x00	; 0
    1c6a:	04 c0       	rjmp	.+8      	; 0x1c74 <__pack_f+0x9c>
    1c6c:	88 0f       	add	r24, r24
    1c6e:	99 1f       	adc	r25, r25
    1c70:	aa 1f       	adc	r26, r26
    1c72:	bb 1f       	adc	r27, r27
    1c74:	2a 95       	dec	r18
    1c76:	d2 f7       	brpl	.-12     	; 0x1c6c <__pack_f+0x94>
    1c78:	01 97       	sbiw	r24, 0x01	; 1
    1c7a:	a1 09       	sbc	r26, r1
    1c7c:	b1 09       	sbc	r27, r1
    1c7e:	8e 21       	and	r24, r14
    1c80:	9f 21       	and	r25, r15
    1c82:	a0 23       	and	r26, r16
    1c84:	b1 23       	and	r27, r17
    1c86:	00 97       	sbiw	r24, 0x00	; 0
    1c88:	a1 05       	cpc	r26, r1
    1c8a:	b1 05       	cpc	r27, r1
    1c8c:	21 f0       	breq	.+8      	; 0x1c96 <__pack_f+0xbe>
    1c8e:	81 e0       	ldi	r24, 0x01	; 1
    1c90:	90 e0       	ldi	r25, 0x00	; 0
    1c92:	a0 e0       	ldi	r26, 0x00	; 0
    1c94:	b0 e0       	ldi	r27, 0x00	; 0
    1c96:	9a 01       	movw	r18, r20
    1c98:	ab 01       	movw	r20, r22
    1c9a:	28 2b       	or	r18, r24
    1c9c:	39 2b       	or	r19, r25
    1c9e:	4a 2b       	or	r20, r26
    1ca0:	5b 2b       	or	r21, r27
    1ca2:	da 01       	movw	r26, r20
    1ca4:	c9 01       	movw	r24, r18
    1ca6:	8f 77       	andi	r24, 0x7F	; 127
    1ca8:	90 70       	andi	r25, 0x00	; 0
    1caa:	a0 70       	andi	r26, 0x00	; 0
    1cac:	b0 70       	andi	r27, 0x00	; 0
    1cae:	80 34       	cpi	r24, 0x40	; 64
    1cb0:	91 05       	cpc	r25, r1
    1cb2:	a1 05       	cpc	r26, r1
    1cb4:	b1 05       	cpc	r27, r1
    1cb6:	39 f4       	brne	.+14     	; 0x1cc6 <__pack_f+0xee>
    1cb8:	27 ff       	sbrs	r18, 7
    1cba:	09 c0       	rjmp	.+18     	; 0x1cce <__pack_f+0xf6>
    1cbc:	20 5c       	subi	r18, 0xC0	; 192
    1cbe:	3f 4f       	sbci	r19, 0xFF	; 255
    1cc0:	4f 4f       	sbci	r20, 0xFF	; 255
    1cc2:	5f 4f       	sbci	r21, 0xFF	; 255
    1cc4:	04 c0       	rjmp	.+8      	; 0x1cce <__pack_f+0xf6>
    1cc6:	21 5c       	subi	r18, 0xC1	; 193
    1cc8:	3f 4f       	sbci	r19, 0xFF	; 255
    1cca:	4f 4f       	sbci	r20, 0xFF	; 255
    1ccc:	5f 4f       	sbci	r21, 0xFF	; 255
    1cce:	e0 e0       	ldi	r30, 0x00	; 0
    1cd0:	f0 e0       	ldi	r31, 0x00	; 0
    1cd2:	20 30       	cpi	r18, 0x00	; 0
    1cd4:	a0 e0       	ldi	r26, 0x00	; 0
    1cd6:	3a 07       	cpc	r19, r26
    1cd8:	a0 e0       	ldi	r26, 0x00	; 0
    1cda:	4a 07       	cpc	r20, r26
    1cdc:	a0 e4       	ldi	r26, 0x40	; 64
    1cde:	5a 07       	cpc	r21, r26
    1ce0:	10 f0       	brcs	.+4      	; 0x1ce6 <__pack_f+0x10e>
    1ce2:	e1 e0       	ldi	r30, 0x01	; 1
    1ce4:	f0 e0       	ldi	r31, 0x00	; 0
    1ce6:	79 01       	movw	r14, r18
    1ce8:	8a 01       	movw	r16, r20
    1cea:	27 c0       	rjmp	.+78     	; 0x1d3a <__pack_f+0x162>
    1cec:	60 38       	cpi	r22, 0x80	; 128
    1cee:	71 05       	cpc	r23, r1
    1cf0:	64 f5       	brge	.+88     	; 0x1d4a <__pack_f+0x172>
    1cf2:	fb 01       	movw	r30, r22
    1cf4:	e1 58       	subi	r30, 0x81	; 129
    1cf6:	ff 4f       	sbci	r31, 0xFF	; 255
    1cf8:	d8 01       	movw	r26, r16
    1cfa:	c7 01       	movw	r24, r14
    1cfc:	8f 77       	andi	r24, 0x7F	; 127
    1cfe:	90 70       	andi	r25, 0x00	; 0
    1d00:	a0 70       	andi	r26, 0x00	; 0
    1d02:	b0 70       	andi	r27, 0x00	; 0
    1d04:	80 34       	cpi	r24, 0x40	; 64
    1d06:	91 05       	cpc	r25, r1
    1d08:	a1 05       	cpc	r26, r1
    1d0a:	b1 05       	cpc	r27, r1
    1d0c:	39 f4       	brne	.+14     	; 0x1d1c <__pack_f+0x144>
    1d0e:	e7 fe       	sbrs	r14, 7
    1d10:	0d c0       	rjmp	.+26     	; 0x1d2c <__pack_f+0x154>
    1d12:	80 e4       	ldi	r24, 0x40	; 64
    1d14:	90 e0       	ldi	r25, 0x00	; 0
    1d16:	a0 e0       	ldi	r26, 0x00	; 0
    1d18:	b0 e0       	ldi	r27, 0x00	; 0
    1d1a:	04 c0       	rjmp	.+8      	; 0x1d24 <__pack_f+0x14c>
    1d1c:	8f e3       	ldi	r24, 0x3F	; 63
    1d1e:	90 e0       	ldi	r25, 0x00	; 0
    1d20:	a0 e0       	ldi	r26, 0x00	; 0
    1d22:	b0 e0       	ldi	r27, 0x00	; 0
    1d24:	e8 0e       	add	r14, r24
    1d26:	f9 1e       	adc	r15, r25
    1d28:	0a 1f       	adc	r16, r26
    1d2a:	1b 1f       	adc	r17, r27
    1d2c:	17 ff       	sbrs	r17, 7
    1d2e:	05 c0       	rjmp	.+10     	; 0x1d3a <__pack_f+0x162>
    1d30:	16 95       	lsr	r17
    1d32:	07 95       	ror	r16
    1d34:	f7 94       	ror	r15
    1d36:	e7 94       	ror	r14
    1d38:	31 96       	adiw	r30, 0x01	; 1
    1d3a:	87 e0       	ldi	r24, 0x07	; 7
    1d3c:	16 95       	lsr	r17
    1d3e:	07 95       	ror	r16
    1d40:	f7 94       	ror	r15
    1d42:	e7 94       	ror	r14
    1d44:	8a 95       	dec	r24
    1d46:	d1 f7       	brne	.-12     	; 0x1d3c <__pack_f+0x164>
    1d48:	05 c0       	rjmp	.+10     	; 0x1d54 <__pack_f+0x17c>
    1d4a:	ee 24       	eor	r14, r14
    1d4c:	ff 24       	eor	r15, r15
    1d4e:	87 01       	movw	r16, r14
    1d50:	ef ef       	ldi	r30, 0xFF	; 255
    1d52:	f0 e0       	ldi	r31, 0x00	; 0
    1d54:	6e 2f       	mov	r22, r30
    1d56:	67 95       	ror	r22
    1d58:	66 27       	eor	r22, r22
    1d5a:	67 95       	ror	r22
    1d5c:	90 2f       	mov	r25, r16
    1d5e:	9f 77       	andi	r25, 0x7F	; 127
    1d60:	d7 94       	ror	r13
    1d62:	dd 24       	eor	r13, r13
    1d64:	d7 94       	ror	r13
    1d66:	8e 2f       	mov	r24, r30
    1d68:	86 95       	lsr	r24
    1d6a:	49 2f       	mov	r20, r25
    1d6c:	46 2b       	or	r20, r22
    1d6e:	58 2f       	mov	r21, r24
    1d70:	5d 29       	or	r21, r13
    1d72:	b7 01       	movw	r22, r14
    1d74:	ca 01       	movw	r24, r20
    1d76:	1f 91       	pop	r17
    1d78:	0f 91       	pop	r16
    1d7a:	ff 90       	pop	r15
    1d7c:	ef 90       	pop	r14
    1d7e:	df 90       	pop	r13
    1d80:	08 95       	ret

00001d82 <__unpack_f>:
    1d82:	fc 01       	movw	r30, r24
    1d84:	db 01       	movw	r26, r22
    1d86:	40 81       	ld	r20, Z
    1d88:	51 81       	ldd	r21, Z+1	; 0x01
    1d8a:	22 81       	ldd	r18, Z+2	; 0x02
    1d8c:	62 2f       	mov	r22, r18
    1d8e:	6f 77       	andi	r22, 0x7F	; 127
    1d90:	70 e0       	ldi	r23, 0x00	; 0
    1d92:	22 1f       	adc	r18, r18
    1d94:	22 27       	eor	r18, r18
    1d96:	22 1f       	adc	r18, r18
    1d98:	93 81       	ldd	r25, Z+3	; 0x03
    1d9a:	89 2f       	mov	r24, r25
    1d9c:	88 0f       	add	r24, r24
    1d9e:	82 2b       	or	r24, r18
    1da0:	28 2f       	mov	r18, r24
    1da2:	30 e0       	ldi	r19, 0x00	; 0
    1da4:	99 1f       	adc	r25, r25
    1da6:	99 27       	eor	r25, r25
    1da8:	99 1f       	adc	r25, r25
    1daa:	11 96       	adiw	r26, 0x01	; 1
    1dac:	9c 93       	st	X, r25
    1dae:	11 97       	sbiw	r26, 0x01	; 1
    1db0:	21 15       	cp	r18, r1
    1db2:	31 05       	cpc	r19, r1
    1db4:	a9 f5       	brne	.+106    	; 0x1e20 <__unpack_f+0x9e>
    1db6:	41 15       	cp	r20, r1
    1db8:	51 05       	cpc	r21, r1
    1dba:	61 05       	cpc	r22, r1
    1dbc:	71 05       	cpc	r23, r1
    1dbe:	11 f4       	brne	.+4      	; 0x1dc4 <__unpack_f+0x42>
    1dc0:	82 e0       	ldi	r24, 0x02	; 2
    1dc2:	37 c0       	rjmp	.+110    	; 0x1e32 <__unpack_f+0xb0>
    1dc4:	82 e8       	ldi	r24, 0x82	; 130
    1dc6:	9f ef       	ldi	r25, 0xFF	; 255
    1dc8:	13 96       	adiw	r26, 0x03	; 3
    1dca:	9c 93       	st	X, r25
    1dcc:	8e 93       	st	-X, r24
    1dce:	12 97       	sbiw	r26, 0x02	; 2
    1dd0:	9a 01       	movw	r18, r20
    1dd2:	ab 01       	movw	r20, r22
    1dd4:	67 e0       	ldi	r22, 0x07	; 7
    1dd6:	22 0f       	add	r18, r18
    1dd8:	33 1f       	adc	r19, r19
    1dda:	44 1f       	adc	r20, r20
    1ddc:	55 1f       	adc	r21, r21
    1dde:	6a 95       	dec	r22
    1de0:	d1 f7       	brne	.-12     	; 0x1dd6 <__unpack_f+0x54>
    1de2:	83 e0       	ldi	r24, 0x03	; 3
    1de4:	8c 93       	st	X, r24
    1de6:	0d c0       	rjmp	.+26     	; 0x1e02 <__unpack_f+0x80>
    1de8:	22 0f       	add	r18, r18
    1dea:	33 1f       	adc	r19, r19
    1dec:	44 1f       	adc	r20, r20
    1dee:	55 1f       	adc	r21, r21
    1df0:	12 96       	adiw	r26, 0x02	; 2
    1df2:	8d 91       	ld	r24, X+
    1df4:	9c 91       	ld	r25, X
    1df6:	13 97       	sbiw	r26, 0x03	; 3
    1df8:	01 97       	sbiw	r24, 0x01	; 1
    1dfa:	13 96       	adiw	r26, 0x03	; 3
    1dfc:	9c 93       	st	X, r25
    1dfe:	8e 93       	st	-X, r24
    1e00:	12 97       	sbiw	r26, 0x02	; 2
    1e02:	20 30       	cpi	r18, 0x00	; 0
    1e04:	80 e0       	ldi	r24, 0x00	; 0
    1e06:	38 07       	cpc	r19, r24
    1e08:	80 e0       	ldi	r24, 0x00	; 0
    1e0a:	48 07       	cpc	r20, r24
    1e0c:	80 e4       	ldi	r24, 0x40	; 64
    1e0e:	58 07       	cpc	r21, r24
    1e10:	58 f3       	brcs	.-42     	; 0x1de8 <__unpack_f+0x66>
    1e12:	14 96       	adiw	r26, 0x04	; 4
    1e14:	2d 93       	st	X+, r18
    1e16:	3d 93       	st	X+, r19
    1e18:	4d 93       	st	X+, r20
    1e1a:	5c 93       	st	X, r21
    1e1c:	17 97       	sbiw	r26, 0x07	; 7
    1e1e:	08 95       	ret
    1e20:	2f 3f       	cpi	r18, 0xFF	; 255
    1e22:	31 05       	cpc	r19, r1
    1e24:	79 f4       	brne	.+30     	; 0x1e44 <__unpack_f+0xc2>
    1e26:	41 15       	cp	r20, r1
    1e28:	51 05       	cpc	r21, r1
    1e2a:	61 05       	cpc	r22, r1
    1e2c:	71 05       	cpc	r23, r1
    1e2e:	19 f4       	brne	.+6      	; 0x1e36 <__unpack_f+0xb4>
    1e30:	84 e0       	ldi	r24, 0x04	; 4
    1e32:	8c 93       	st	X, r24
    1e34:	08 95       	ret
    1e36:	64 ff       	sbrs	r22, 4
    1e38:	03 c0       	rjmp	.+6      	; 0x1e40 <__unpack_f+0xbe>
    1e3a:	81 e0       	ldi	r24, 0x01	; 1
    1e3c:	8c 93       	st	X, r24
    1e3e:	12 c0       	rjmp	.+36     	; 0x1e64 <__unpack_f+0xe2>
    1e40:	1c 92       	st	X, r1
    1e42:	10 c0       	rjmp	.+32     	; 0x1e64 <__unpack_f+0xe2>
    1e44:	2f 57       	subi	r18, 0x7F	; 127
    1e46:	30 40       	sbci	r19, 0x00	; 0
    1e48:	13 96       	adiw	r26, 0x03	; 3
    1e4a:	3c 93       	st	X, r19
    1e4c:	2e 93       	st	-X, r18
    1e4e:	12 97       	sbiw	r26, 0x02	; 2
    1e50:	83 e0       	ldi	r24, 0x03	; 3
    1e52:	8c 93       	st	X, r24
    1e54:	87 e0       	ldi	r24, 0x07	; 7
    1e56:	44 0f       	add	r20, r20
    1e58:	55 1f       	adc	r21, r21
    1e5a:	66 1f       	adc	r22, r22
    1e5c:	77 1f       	adc	r23, r23
    1e5e:	8a 95       	dec	r24
    1e60:	d1 f7       	brne	.-12     	; 0x1e56 <__unpack_f+0xd4>
    1e62:	70 64       	ori	r23, 0x40	; 64
    1e64:	14 96       	adiw	r26, 0x04	; 4
    1e66:	4d 93       	st	X+, r20
    1e68:	5d 93       	st	X+, r21
    1e6a:	6d 93       	st	X+, r22
    1e6c:	7c 93       	st	X, r23
    1e6e:	17 97       	sbiw	r26, 0x07	; 7
    1e70:	08 95       	ret

00001e72 <__fpcmp_parts_f>:
    1e72:	1f 93       	push	r17
    1e74:	dc 01       	movw	r26, r24
    1e76:	fb 01       	movw	r30, r22
    1e78:	9c 91       	ld	r25, X
    1e7a:	92 30       	cpi	r25, 0x02	; 2
    1e7c:	08 f4       	brcc	.+2      	; 0x1e80 <__fpcmp_parts_f+0xe>
    1e7e:	47 c0       	rjmp	.+142    	; 0x1f0e <__fpcmp_parts_f+0x9c>
    1e80:	80 81       	ld	r24, Z
    1e82:	82 30       	cpi	r24, 0x02	; 2
    1e84:	08 f4       	brcc	.+2      	; 0x1e88 <__fpcmp_parts_f+0x16>
    1e86:	43 c0       	rjmp	.+134    	; 0x1f0e <__fpcmp_parts_f+0x9c>
    1e88:	94 30       	cpi	r25, 0x04	; 4
    1e8a:	51 f4       	brne	.+20     	; 0x1ea0 <__fpcmp_parts_f+0x2e>
    1e8c:	11 96       	adiw	r26, 0x01	; 1
    1e8e:	1c 91       	ld	r17, X
    1e90:	84 30       	cpi	r24, 0x04	; 4
    1e92:	99 f5       	brne	.+102    	; 0x1efa <__fpcmp_parts_f+0x88>
    1e94:	81 81       	ldd	r24, Z+1	; 0x01
    1e96:	68 2f       	mov	r22, r24
    1e98:	70 e0       	ldi	r23, 0x00	; 0
    1e9a:	61 1b       	sub	r22, r17
    1e9c:	71 09       	sbc	r23, r1
    1e9e:	3f c0       	rjmp	.+126    	; 0x1f1e <__fpcmp_parts_f+0xac>
    1ea0:	84 30       	cpi	r24, 0x04	; 4
    1ea2:	21 f0       	breq	.+8      	; 0x1eac <__fpcmp_parts_f+0x3a>
    1ea4:	92 30       	cpi	r25, 0x02	; 2
    1ea6:	31 f4       	brne	.+12     	; 0x1eb4 <__fpcmp_parts_f+0x42>
    1ea8:	82 30       	cpi	r24, 0x02	; 2
    1eaa:	b9 f1       	breq	.+110    	; 0x1f1a <__fpcmp_parts_f+0xa8>
    1eac:	81 81       	ldd	r24, Z+1	; 0x01
    1eae:	88 23       	and	r24, r24
    1eb0:	89 f1       	breq	.+98     	; 0x1f14 <__fpcmp_parts_f+0xa2>
    1eb2:	2d c0       	rjmp	.+90     	; 0x1f0e <__fpcmp_parts_f+0x9c>
    1eb4:	11 96       	adiw	r26, 0x01	; 1
    1eb6:	1c 91       	ld	r17, X
    1eb8:	11 97       	sbiw	r26, 0x01	; 1
    1eba:	82 30       	cpi	r24, 0x02	; 2
    1ebc:	f1 f0       	breq	.+60     	; 0x1efa <__fpcmp_parts_f+0x88>
    1ebe:	81 81       	ldd	r24, Z+1	; 0x01
    1ec0:	18 17       	cp	r17, r24
    1ec2:	d9 f4       	brne	.+54     	; 0x1efa <__fpcmp_parts_f+0x88>
    1ec4:	12 96       	adiw	r26, 0x02	; 2
    1ec6:	2d 91       	ld	r18, X+
    1ec8:	3c 91       	ld	r19, X
    1eca:	13 97       	sbiw	r26, 0x03	; 3
    1ecc:	82 81       	ldd	r24, Z+2	; 0x02
    1ece:	93 81       	ldd	r25, Z+3	; 0x03
    1ed0:	82 17       	cp	r24, r18
    1ed2:	93 07       	cpc	r25, r19
    1ed4:	94 f0       	brlt	.+36     	; 0x1efa <__fpcmp_parts_f+0x88>
    1ed6:	28 17       	cp	r18, r24
    1ed8:	39 07       	cpc	r19, r25
    1eda:	bc f0       	brlt	.+46     	; 0x1f0a <__fpcmp_parts_f+0x98>
    1edc:	14 96       	adiw	r26, 0x04	; 4
    1ede:	8d 91       	ld	r24, X+
    1ee0:	9d 91       	ld	r25, X+
    1ee2:	0d 90       	ld	r0, X+
    1ee4:	bc 91       	ld	r27, X
    1ee6:	a0 2d       	mov	r26, r0
    1ee8:	24 81       	ldd	r18, Z+4	; 0x04
    1eea:	35 81       	ldd	r19, Z+5	; 0x05
    1eec:	46 81       	ldd	r20, Z+6	; 0x06
    1eee:	57 81       	ldd	r21, Z+7	; 0x07
    1ef0:	28 17       	cp	r18, r24
    1ef2:	39 07       	cpc	r19, r25
    1ef4:	4a 07       	cpc	r20, r26
    1ef6:	5b 07       	cpc	r21, r27
    1ef8:	18 f4       	brcc	.+6      	; 0x1f00 <__fpcmp_parts_f+0x8e>
    1efa:	11 23       	and	r17, r17
    1efc:	41 f0       	breq	.+16     	; 0x1f0e <__fpcmp_parts_f+0x9c>
    1efe:	0a c0       	rjmp	.+20     	; 0x1f14 <__fpcmp_parts_f+0xa2>
    1f00:	82 17       	cp	r24, r18
    1f02:	93 07       	cpc	r25, r19
    1f04:	a4 07       	cpc	r26, r20
    1f06:	b5 07       	cpc	r27, r21
    1f08:	40 f4       	brcc	.+16     	; 0x1f1a <__fpcmp_parts_f+0xa8>
    1f0a:	11 23       	and	r17, r17
    1f0c:	19 f0       	breq	.+6      	; 0x1f14 <__fpcmp_parts_f+0xa2>
    1f0e:	61 e0       	ldi	r22, 0x01	; 1
    1f10:	70 e0       	ldi	r23, 0x00	; 0
    1f12:	05 c0       	rjmp	.+10     	; 0x1f1e <__fpcmp_parts_f+0xac>
    1f14:	6f ef       	ldi	r22, 0xFF	; 255
    1f16:	7f ef       	ldi	r23, 0xFF	; 255
    1f18:	02 c0       	rjmp	.+4      	; 0x1f1e <__fpcmp_parts_f+0xac>
    1f1a:	60 e0       	ldi	r22, 0x00	; 0
    1f1c:	70 e0       	ldi	r23, 0x00	; 0
    1f1e:	cb 01       	movw	r24, r22
    1f20:	1f 91       	pop	r17
    1f22:	08 95       	ret

00001f24 <__divmodhi4>:
    1f24:	97 fb       	bst	r25, 7
    1f26:	09 2e       	mov	r0, r25
    1f28:	07 26       	eor	r0, r23
    1f2a:	0a d0       	rcall	.+20     	; 0x1f40 <__divmodhi4_neg1>
    1f2c:	77 fd       	sbrc	r23, 7
    1f2e:	04 d0       	rcall	.+8      	; 0x1f38 <__divmodhi4_neg2>
    1f30:	0c d0       	rcall	.+24     	; 0x1f4a <__udivmodhi4>
    1f32:	06 d0       	rcall	.+12     	; 0x1f40 <__divmodhi4_neg1>
    1f34:	00 20       	and	r0, r0
    1f36:	1a f4       	brpl	.+6      	; 0x1f3e <__divmodhi4_exit>

00001f38 <__divmodhi4_neg2>:
    1f38:	70 95       	com	r23
    1f3a:	61 95       	neg	r22
    1f3c:	7f 4f       	sbci	r23, 0xFF	; 255

00001f3e <__divmodhi4_exit>:
    1f3e:	08 95       	ret

00001f40 <__divmodhi4_neg1>:
    1f40:	f6 f7       	brtc	.-4      	; 0x1f3e <__divmodhi4_exit>
    1f42:	90 95       	com	r25
    1f44:	81 95       	neg	r24
    1f46:	9f 4f       	sbci	r25, 0xFF	; 255
    1f48:	08 95       	ret

00001f4a <__udivmodhi4>:
    1f4a:	aa 1b       	sub	r26, r26
    1f4c:	bb 1b       	sub	r27, r27
    1f4e:	51 e1       	ldi	r21, 0x11	; 17
    1f50:	07 c0       	rjmp	.+14     	; 0x1f60 <__udivmodhi4_ep>

00001f52 <__udivmodhi4_loop>:
    1f52:	aa 1f       	adc	r26, r26
    1f54:	bb 1f       	adc	r27, r27
    1f56:	a6 17       	cp	r26, r22
    1f58:	b7 07       	cpc	r27, r23
    1f5a:	10 f0       	brcs	.+4      	; 0x1f60 <__udivmodhi4_ep>
    1f5c:	a6 1b       	sub	r26, r22
    1f5e:	b7 0b       	sbc	r27, r23

00001f60 <__udivmodhi4_ep>:
    1f60:	88 1f       	adc	r24, r24
    1f62:	99 1f       	adc	r25, r25
    1f64:	5a 95       	dec	r21
    1f66:	a9 f7       	brne	.-22     	; 0x1f52 <__udivmodhi4_loop>
    1f68:	80 95       	com	r24
    1f6a:	90 95       	com	r25
    1f6c:	bc 01       	movw	r22, r24
    1f6e:	cd 01       	movw	r24, r26
    1f70:	08 95       	ret

00001f72 <__prologue_saves__>:
    1f72:	2f 92       	push	r2
    1f74:	3f 92       	push	r3
    1f76:	4f 92       	push	r4
    1f78:	5f 92       	push	r5
    1f7a:	6f 92       	push	r6
    1f7c:	7f 92       	push	r7
    1f7e:	8f 92       	push	r8
    1f80:	9f 92       	push	r9
    1f82:	af 92       	push	r10
    1f84:	bf 92       	push	r11
    1f86:	cf 92       	push	r12
    1f88:	df 92       	push	r13
    1f8a:	ef 92       	push	r14
    1f8c:	ff 92       	push	r15
    1f8e:	0f 93       	push	r16
    1f90:	1f 93       	push	r17
    1f92:	cf 93       	push	r28
    1f94:	df 93       	push	r29
    1f96:	cd b7       	in	r28, 0x3d	; 61
    1f98:	de b7       	in	r29, 0x3e	; 62
    1f9a:	ca 1b       	sub	r28, r26
    1f9c:	db 0b       	sbc	r29, r27
    1f9e:	0f b6       	in	r0, 0x3f	; 63
    1fa0:	f8 94       	cli
    1fa2:	de bf       	out	0x3e, r29	; 62
    1fa4:	0f be       	out	0x3f, r0	; 63
    1fa6:	cd bf       	out	0x3d, r28	; 61
    1fa8:	09 94       	ijmp

00001faa <__epilogue_restores__>:
    1faa:	2a 88       	ldd	r2, Y+18	; 0x12
    1fac:	39 88       	ldd	r3, Y+17	; 0x11
    1fae:	48 88       	ldd	r4, Y+16	; 0x10
    1fb0:	5f 84       	ldd	r5, Y+15	; 0x0f
    1fb2:	6e 84       	ldd	r6, Y+14	; 0x0e
    1fb4:	7d 84       	ldd	r7, Y+13	; 0x0d
    1fb6:	8c 84       	ldd	r8, Y+12	; 0x0c
    1fb8:	9b 84       	ldd	r9, Y+11	; 0x0b
    1fba:	aa 84       	ldd	r10, Y+10	; 0x0a
    1fbc:	b9 84       	ldd	r11, Y+9	; 0x09
    1fbe:	c8 84       	ldd	r12, Y+8	; 0x08
    1fc0:	df 80       	ldd	r13, Y+7	; 0x07
    1fc2:	ee 80       	ldd	r14, Y+6	; 0x06
    1fc4:	fd 80       	ldd	r15, Y+5	; 0x05
    1fc6:	0c 81       	ldd	r16, Y+4	; 0x04
    1fc8:	1b 81       	ldd	r17, Y+3	; 0x03
    1fca:	aa 81       	ldd	r26, Y+2	; 0x02
    1fcc:	b9 81       	ldd	r27, Y+1	; 0x01
    1fce:	ce 0f       	add	r28, r30
    1fd0:	d1 1d       	adc	r29, r1
    1fd2:	0f b6       	in	r0, 0x3f	; 63
    1fd4:	f8 94       	cli
    1fd6:	de bf       	out	0x3e, r29	; 62
    1fd8:	0f be       	out	0x3f, r0	; 63
    1fda:	cd bf       	out	0x3d, r28	; 61
    1fdc:	ed 01       	movw	r28, r26
    1fde:	08 95       	ret

00001fe0 <_exit>:
    1fe0:	f8 94       	cli

00001fe2 <__stop_program>:
    1fe2:	ff cf       	rjmp	.-2      	; 0x1fe2 <__stop_program>
